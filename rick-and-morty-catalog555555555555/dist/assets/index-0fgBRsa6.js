function SE(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE=1e-7,TE=1e-4;class _b{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class ym{refCount(e){return Ln("refCount")}incRef(e){return Ln("incRef")}timerAvailable(){return!0}time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}readToGPU(e,t){return Ln("readToGPU")}numDataIds(){return Ln("numDataIds")}disposeData(e,t){return Ln("disposeData")}write(e,t,r){return Ln("write")}move(e,t,r,s,o){return Ln("move")}createTensorFromGPUData(e,t,r){return Ln("createTensorFromGPUData")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return this.floatPrecision()===32?NE:TE}dispose(){return Ln("dispose")}}function Ln(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,$a(n,e,t)}function Wo(n,e,t){return Math.max(n,Math.min(e,t))}function vm(n){return n%2===0?n:n+1}function $a(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function RE(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function $(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function bm(n,e,t=""){$(rt(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Mb(n){$(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ne(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function rt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Qa(n){return n%1===0}function sf(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function za(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function tv(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function Lb(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function Ue(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),$(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),$(n.every(r=>Qa(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function io(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Ue(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function hn(n,e){return Tt(n,e)}function Tt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function $E(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function AE(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Pb(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function kl(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function DE(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Ru(n){return typeof n=="string"||n instanceof String}function FE(n){return typeof n=="boolean"}function of(n){return typeof n=="number"}function di(n){return Array.isArray(n)?di(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":of(n)?"float32":Ru(n)?"string":FE(n)?"bool":"float32"}function af(n){return!!(n&&n.constructor&&n.call&&n.apply)}function uf(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Re(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function Bb(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=Bb(n+u*i,a,t,r)}return s}function Fr(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Bb(0,n,e,t)}function OE(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function wm(n,e){const t=dn(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function dn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function zb(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Fr(n,new Float32Array(t));if(e==="int32")return Fr(n,new Int32Array(t));if(e==="bool")return Fr(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ds(n){n.forEach(e=>{$(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Jr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function pi(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function Cm(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nv="tfjsflags";class _E{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ME,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Cm(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);nv in e&&e[nv].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=PE(s,o)})}}function ME(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(LE(e,r[0],r[1]),r.join("="))),e}function LE(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function PE(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function Q(){return Vb}let Vb=null;function BE(n){Vb=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mp;function Wb(){if(mp==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");mp=n}return mp}function zE(){const n=Wb();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Im(n,e){const t=zE();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const wh="Abs",$u="Acos",Au="Acosh",fi="Add",km="AddN",Sm="All",Nm="Any",Ch="ArgMax",Ih="ArgMin",Du="Asin",Fu="Asinh",Ou="Atan",_u="Atanh",Mu="Atan2",kh="AvgPool",Tm="AvgPoolGrad",Sh="AvgPool3D",Em="AvgPool3DGrad",Nh="BatchMatMul",Th="BatchToSpaceND",Rm="Bincount",$m="BitwiseAnd",VE="BroadcastTo",Ub="BroadcastArgs",Lu="Cast",Pu="Ceil",Bu="ClipByValue",Am="Complex",Eh="ComplexAbs",Rh="Concat",$h="Conv2D",Dm="Conv2DBackpropFilter",Ah="Conv2DBackpropInput",Dh="Conv3D",Fm="Conv3DBackpropFilterV2",Om="Conv3DBackpropInputV2",zu="Cos",Vu="Cosh",_m="Cumprod",Fh="Cumsum",Mm="CropAndResize",Lm="DenseBincount",Pm="DepthToSpace",Oh="DepthwiseConv2dNative",Bm="DepthwiseConv2dNativeBackpropFilter",zm="DepthwiseConv2dNativeBackpropInput",Gb="Diag",_h="Dilation2D",cf="Dilation2DBackpropInput",lf="Dilation2DBackpropFilter",WE="Draw",Wu="RealDiv",Vm="Einsum",Uu="Elu",Wm="EluGrad",Gu="Erf",Mh="Equal",Hu="Exp",Lh="ExpandDims",ju="Expm1",Um="FFT",Gm="Fill",Hm="FlipLeftRight",qu="Floor",Ku="FloorDiv",Ph="FusedBatchNorm",Bh="GatherV2",Hb="GatherNd",zh="Greater",Xu="GreaterEqual",Yu="Identity",jm="IFFT",qm="Imag",Qu="IsFinite",Zu="IsInf",Ju="IsNan",Vh="LeakyRelu",Wh="Less",Uh="LessEqual",jb="LinSpace",ec="Log",tc="Log1p",Gh="LogicalAnd",Hh="LogicalNot",jh="LogicalOr",UE="LogSoftmax",qh="LRN",Km="LRNGrad",Kh="Max",nc="Maximum",Xh="MaxPool",Xm="MaxPoolGrad",Yh="MaxPool3D",Ym="MaxPool3DGrad",qb="MaxPoolWithArgmax",Qh="Mean",Zh="Min",rc="Minimum",Jh="MirrorPad",sc="Mod",Kb="Multinomial",oc="Multiply",ed="Neg",td="NotEqual",Qm="NonMaxSuppressionV3",Zm="NonMaxSuppressionV4",Jm="NonMaxSuppressionV5",nd="OnesLike",rd="OneHot",sd="Pack",od="PadV2",ac="Pow",ad="Prelu",id="Prod",Xb="RaggedGather",Yb="RaggedRange",Qb="RaggedTensorToTensor",eg="Range",tg="Real",ic="Reciprocal",uc="Relu",ud="Reshape",cd="ResizeNearestNeighbor",ng="ResizeNearestNeighborGrad",ld="ResizeBilinear",rg="ResizeBilinearGrad",cc="Relu6",hd="Reverse",lc="Round",hc="Rsqrt",Zb="ScatterNd",Jb="TensorScatterUpdate",e1="SearchSorted",dd="Select",dc="Selu",pd="Slice",pc="Sin",fc="Sinh",mc="Sign",gc="Sigmoid",xc="Softplus",yc="Sqrt",fd="Sum",md="SpaceToBatchND",gd="SplitV",xd="Softmax",t1="SparseFillEmptyRows",n1="SparseReshape",r1="SparseSegmentMean",s1="SparseSegmentSum",o1="SparseToDense",vc="SquaredDifference",sg="Square",og="StaticRegexReplace",ag="StridedSlice",a1="StringNGrams",i1="StringSplit",u1="StringToHashBucketFast",bc="Sub",wc="Tan",Cc="Tanh",Ic="Tile",ig="TopK",ug="Transform",Va="Transpose",cg="Unique",yd="Unpack",vd="UnsortedSegmentSum",bd="ZerosLike",kc="Step",GE="FromPixels",lg="RotateWithOffset",Sl="_FusedMatMul",Nl="FusedConv2D",c1="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(...n){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(...n)}function HE(...n){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tl=Im("kernelRegistry",()=>new Map),hf=Im("gradRegistry",()=>new Map);function rv(n,e){const t=h1(n,e);return Tl.get(t)}function sv(n){return hf.get(n)}function ov(n){const e=Tl.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===n&&t.push(a)}return t}function l1(n){const{kernelName:e,backendName:t}=n,r=h1(e,t);Tl.has(r)&&Zn(`The kernel '${e}' for backend '${t}' is already registered`),Tl.set(r,n)}function jE(n){const{kernelName:e}=n;hf.has(e)&&Q().getBool("DEBUG")&&Zn(`Overriding the gradient for '${e}'`),hf.set(e,n)}function h1(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d1(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var oa=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function qE(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function KE(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var p1=pt,pr=null;try{pr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function pt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}pt.prototype.__isLong__;Object.defineProperty(pt.prototype,"__isLong__",{value:!0});function Kn(n){return(n&&n.__isLong__)===!0}pt.isLong=Kn;var av={},iv={};function aa(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=iv[n],r)?r:(t=ft(n,(n|0)<0?-1:0,!0),s&&(iv[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=av[n],r)?r:(t=ft(n,n<0?-1:0,!1),s&&(av[n]=t),t))}pt.fromInt=aa;function fr(n,e){if(isNaN(n))return e?Ao:mr;if(e){if(n<0)return Ao;if(n>=f1)return x1}else{if(n<=-cv)return zn;if(n+1>=cv)return g1}return n<0?fr(-n,e).neg():ft(n%Za|0,n/Za|0,e)}pt.fromNumber=fr;function ft(n,e,t){return new pt(n,e,t)}pt.fromBits=ft;var El=Math.pow;function hg(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return mr;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return hg(n.substring(1),e,t).neg();for(var s=fr(El(t,8)),o=mr,a=0;a<n.length;a+=8){var i=Math.min(8,n.length-a),u=parseInt(n.substring(a,a+i),t);if(i<8){var c=fr(El(t,i));o=o.mul(c).add(fr(u))}else o=o.mul(s),o=o.add(fr(u))}return o.unsigned=e,o}pt.fromString=hg;function zr(n,e){return typeof n=="number"?fr(n,e):typeof n=="string"?hg(n,e):ft(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}pt.fromValue=zr;var uv=65536,XE=1<<24,Za=uv*uv,f1=Za*Za,cv=f1/2,lv=aa(XE),mr=aa(0);pt.ZERO=mr;var Ao=aa(0,!0);pt.UZERO=Ao;var La=aa(1);pt.ONE=La;var m1=aa(1,!0);pt.UONE=m1;var df=aa(-1);pt.NEG_ONE=df;var g1=ft(-1,2147483647,!1);pt.MAX_VALUE=g1;var x1=ft(-1,-1,!0);pt.MAX_UNSIGNED_VALUE=x1;var zn=ft(0,-2147483648,!1);pt.MIN_VALUE=zn;var me=pt.prototype;me.toInt=function(){return this.unsigned?this.low>>>0:this.low};me.toNumber=function(){return this.unsigned?(this.high>>>0)*Za+(this.low>>>0):this.high*Za+(this.low>>>0)};me.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(zn)){var t=fr(e),r=this.div(t),s=r.mul(t).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=fr(El(e,6),this.unsigned),a=this,i="";;){var u=a.div(o),c=a.sub(u.mul(o)).toInt()>>>0,l=c.toString(e);if(a=u,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};me.getHighBits=function(){return this.high};me.getHighBitsUnsigned=function(){return this.high>>>0};me.getLowBits=function(){return this.low};me.getLowBitsUnsigned=function(){return this.low>>>0};me.getNumBitsAbs=function(){if(this.isNegative())return this.eq(zn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};me.isZero=function(){return this.high===0&&this.low===0};me.eqz=me.isZero;me.isNegative=function(){return!this.unsigned&&this.high<0};me.isPositive=function(){return this.unsigned||this.high>=0};me.isOdd=function(){return(this.low&1)===1};me.isEven=function(){return(this.low&1)===0};me.equals=function(e){return Kn(e)||(e=zr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};me.eq=me.equals;me.notEquals=function(e){return!this.eq(e)};me.neq=me.notEquals;me.ne=me.notEquals;me.lessThan=function(e){return this.comp(e)<0};me.lt=me.lessThan;me.lessThanOrEqual=function(e){return this.comp(e)<=0};me.lte=me.lessThanOrEqual;me.le=me.lessThanOrEqual;me.greaterThan=function(e){return this.comp(e)>0};me.gt=me.greaterThan;me.greaterThanOrEqual=function(e){return this.comp(e)>=0};me.gte=me.greaterThanOrEqual;me.ge=me.greaterThanOrEqual;me.compare=function(e){if(Kn(e)||(e=zr(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};me.comp=me.compare;me.negate=function(){return!this.unsigned&&this.eq(zn)?zn:this.not().add(La)};me.neg=me.negate;me.add=function(e){Kn(e)||(e=zr(e));var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,c=e.low&65535,l=0,h=0,d=0,p=0;return p+=o+c,d+=p>>>16,p&=65535,d+=s+u,h+=d>>>16,d&=65535,h+=r+i,l+=h>>>16,h&=65535,l+=t+a,l&=65535,ft(d<<16|p,l<<16|h,this.unsigned)};me.subtract=function(e){return Kn(e)||(e=zr(e)),this.add(e.neg())};me.sub=me.subtract;me.multiply=function(e){if(this.isZero())return mr;if(Kn(e)||(e=zr(e)),pr){var t=pr.mul(this.low,this.high,e.low,e.high);return ft(t,pr.get_high(),this.unsigned)}if(e.isZero())return mr;if(this.eq(zn))return e.isOdd()?zn:mr;if(e.eq(zn))return this.isOdd()?zn:mr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(lv)&&e.lt(lv))return fr(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,c=e.low>>>16,l=e.low&65535,h=0,d=0,p=0,f=0;return f+=a*l,p+=f>>>16,f&=65535,p+=o*l,d+=p>>>16,p&=65535,p+=a*c,d+=p>>>16,p&=65535,d+=s*l,h+=d>>>16,d&=65535,d+=o*c,h+=d>>>16,d&=65535,d+=a*u,h+=d>>>16,d&=65535,h+=r*l+s*c+o*u+a*i,h&=65535,ft(p<<16|f,h<<16|d,this.unsigned)};me.mul=me.multiply;me.divide=function(e){if(Kn(e)||(e=zr(e)),e.isZero())throw Error("division by zero");if(pr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?pr.div_u:pr.div_s)(this.low,this.high,e.low,e.high);return ft(t,pr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ao:mr;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ao;if(e.gt(this.shru(1)))return m1;o=Ao}else{if(this.eq(zn)){if(e.eq(La)||e.eq(df))return zn;if(e.eq(zn))return La;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(mr)?e.isNegative()?La:df:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(zn))return this.unsigned?Ao:mr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=mr}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(r)/Math.LN2),u=i<=48?1:El(2,i-48),c=fr(r),l=c.mul(e);l.isNegative()||l.gt(s);)r-=u,c=fr(r,this.unsigned),l=c.mul(e);c.isZero()&&(c=La),o=o.add(c),s=s.sub(l)}return o};me.div=me.divide;me.modulo=function(e){if(Kn(e)||(e=zr(e)),pr){var t=(this.unsigned?pr.rem_u:pr.rem_s)(this.low,this.high,e.low,e.high);return ft(t,pr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};me.mod=me.modulo;me.rem=me.modulo;me.not=function(){return ft(~this.low,~this.high,this.unsigned)};me.and=function(e){return Kn(e)||(e=zr(e)),ft(this.low&e.low,this.high&e.high,this.unsigned)};me.or=function(e){return Kn(e)||(e=zr(e)),ft(this.low|e.low,this.high|e.high,this.unsigned)};me.xor=function(e){return Kn(e)||(e=zr(e)),ft(this.low^e.low,this.high^e.high,this.unsigned)};me.shiftLeft=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?ft(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):ft(0,this.low<<e-32,this.unsigned)};me.shl=me.shiftLeft;me.shiftRight=function(e){return Kn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?ft(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):ft(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};me.shr=me.shiftRight;me.shiftRightUnsigned=function(e){if(Kn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return ft(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?ft(t,0,this.unsigned):ft(t>>>e-32,0,this.unsigned)};me.shru=me.shiftRightUnsigned;me.shr_u=me.shiftRightUnsigned;me.toSigned=function(){return this.unsigned?ft(this.low,this.high,!1):this};me.toUnsigned=function(){return this.unsigned?this:ft(this.low,this.high,!0)};me.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};me.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};me.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};pt.fromBytes=function(e,t,r){return r?pt.fromBytesLE(e,t):pt.fromBytesBE(e,t)};pt.fromBytesLE=function(e,t){return new pt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};pt.fromBytesBE=function(e,t){return new pt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const y1=qE(p1),YE=SE({__proto__:null,default:y1},[p1]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo=y1||YE;function wd(n){return Eo.fromString(n,!0,16)}const v1=wd("c3a5c85c97cb3127"),ko=wd("b492b66fbe98f273"),bn=wd("9ae16a3b2f90404f");function pf(n){return n.xor(n.shru(47))}function b1(n,e,t){const r=n.slice(e,e+t);return Eo.fromBytes(Array.from(r),!0,!0)}function ct(n,e){return b1(n,e,8)}function hv(n,e){return b1(n,e,4)}function qt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function js(n,e,t=wd("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function QE(n,e,t,r,s,o){s=s.add(n),o=qt(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(qt(s,44)),[s.add(r),o.add(a)]}function Zc(n,e,t,r){return QE(ct(n,e),ct(n,e+8),ct(n,e+16),ct(n,e+24),t,r)}function ZE(n,e=n.length){if(e>=8){const t=bn.add(e*2),r=ct(n,0).add(bn),s=ct(n,e-8),o=qt(s,37).mul(t).add(r),a=qt(r,25).add(s).mul(t);return js(o,a,t)}if(e>=4){const t=bn.add(e*2),r=hv(n,0);return js(r.shl(3).add(e),hv(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return pf(bn.mul(o).xor(v1.mul(a))).mul(bn)}return bn}function JE(n,e=n.length){const t=bn.add(e*2),r=ct(n,0).mul(ko),s=ct(n,8),o=ct(n,e-8).mul(t),a=ct(n,e-16).mul(bn);return js(qt(r.add(s),43).add(qt(o,30)).add(a),r.add(qt(s.add(bn),18)).add(o),t)}function eR(n,e=n.length){const t=bn.add(e*2),r=ct(n,0).mul(bn),s=ct(n,8),o=ct(n,e-8).mul(t),a=ct(n,e-16).mul(bn),i=qt(r.add(s),43).add(qt(o,30)).add(a),u=js(i,r.add(qt(s.add(bn),18)).add(o),t),c=ct(n,16).mul(t),l=ct(n,24),h=i.add(ct(n,e-32)).mul(t),d=u.add(ct(n,e-24)).mul(t);return js(qt(c.add(l),43).add(qt(h,30)).add(d),c.add(qt(l.add(r),18)).add(h),t)}function tR(n,e=n.length){const t=Eo.fromNumber(81,!0);if(e<=32)return e<=16?ZE(n,e):JE(n,e);if(e<=64)return eR(n,e);let r=t,s=t.mul(ko).add(113),o=pf(s.mul(bn).add(113)).mul(bn),a=[Eo.UZERO,Eo.UZERO],i=[Eo.UZERO,Eo.UZERO];r=r.mul(bn).add(ct(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=qt(r.add(s).add(a[0]).add(ct(n,u+8)),37).mul(ko),s=qt(s.add(a[1]).add(ct(n,u+48)),42).mul(ko),r=r.xor(i[1]),s=s.add(a[0]).add(ct(n,u+40)),o=qt(o.add(i[0]),33).mul(ko),a=Zc(n,u,a[1].mul(ko),r.add(i[0])),i=Zc(n,u+32,o.add(i[1]),s.add(ct(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const h=ko.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=qt(r.add(s).add(a[0]).add(ct(n,u+8)),37).mul(h),s=qt(s.add(a[1]).add(ct(n,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(ct(n,u+40))),o=qt(o.add(i[0]),33).mul(h),a=Zc(n,u,a[1].mul(h),r.add(i[0])),i=Zc(n,u+32,o.add(i[1]),s.add(ct(n,u+16))),[o,r]=[r,o],js(js(a[0],i[0],h).add(pf(s).mul(v1)).add(o),js(a[1],i[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(n,e){return e==="string"?qs(n):ia([n],e)}function nR(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ia(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Uo(n)),Q().getBool("DEBUG")&&$E(n,e),nR(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function En(){return Q().platform.now()}function qs(n,e="utf-8"){return e=e||"utf-8",Q().platform.encode(n,e)}function Js(n,e="utf-8"){return e=e||"utf-8",Q().platform.decode(n,e)}function vr(n){return Q().platform.isTypedArray!=null?Q().platform.isTypedArray(n):d1(n)}function Uo(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Cm(n)||n==null||vr(n)&&t)e.push(n);else if(Array.isArray(n)||vr(n))for(let r=0;r<n.length;++r)Uo(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Uo(n[s],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rR{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new oR)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const i=En();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:En()-i})}if(Q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(h=>{sR(h,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],o,u[2])})})}}function sR(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class oR{logKernelProfile(e,t,r,s,o,a){const i=typeof s=="number"?za(`${s}ms`,9):s.error,u=za(e,25),c=t.rank,l=t.size,h=za(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${h}	%c${l}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const h in l){const d=l[h];let p=!1;for(let f=0;f<e.length;f++)if(r[d.id]){c.outputs.forEach(m=>r[m.id]=!0),p=!0,s[c.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in l)o[l[d].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&a[c.id]){const l={};for(const d in c.inputs){const p=c.inputs[d];r[p.id]&&(l[d]=p)}const h=Object.assign({},c);h.inputs=l,h.outputs=c.outputs,i.push(h)}}return i}function iR(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!rt(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const h=n[l.id];n[l.id]=r(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dv=20,Pi=3,gp=7;function uR(n,e,t,r){const s=Re(e),o=cR(n,e,t,s),a=e.length,i=bl(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function cR(n,e,t,r){const s=ne(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=t==="complex64"?Ki(n):n;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],qi(u[l+h],0,t).length)}return a}function qi(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(gp))} + ${parseFloat(n[1].toFixed(gp))}j`:Ru(n)?r=`'${n}'`:t==="bool"?r=w1(n):r=parseFloat(n.toFixed(gp)).toString(),za(r,e)}function w1(n){return n===0?"false":"true"}function bl(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const m=Ki(n);return[qi(m[0],0,t)]}return t==="bool"?[w1(n[0])]:[n[0].toString()]}if(u===1){if(i>dv){const g=Pi*a;let x=Array.from(n.slice(0,g)),y=Array.from(n.slice((i-Pi)*a,i*a));return t==="complex64"&&(x=Ki(x),y=Ki(y)),["["+x.map((b,v)=>qi(b,s[v],t)).join(", ")+", ..., "+y.map((b,v)=>qi(b,s[i-Pi+v],t)).join(", ")+"]"]}return["["+(t==="complex64"?Ki(n):Array.from(n)).map((g,x)=>qi(g,s[x],t)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),h=r[0]*a,d=[];if(i>dv){for(let m=0;m<Pi;m++){const g=m*h,x=g+h;d.push(...bl(n.slice(g,x),c,t,l,s,!1))}d.push("...");for(let m=i-Pi;m<i;m++){const g=m*h,x=g+h;d.push(...bl(n.slice(g,x),c,t,l,s,m===i-1))}}else for(let m=0;m<i;m++){const g=m*h,x=g+h;d.push(...bl(n.slice(g,x),c,t,l,s,m===i-1))}const p=u===2?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Ki(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sn{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),r!=null){const s=r.length;$(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Tt(t,this.size),this.strides=Re(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Er().makeTensor(this.values,this.shape,this.dtype)}}let Er=null,Aa=null;function lR(n){Er=n}function hR(n){Aa=n}class Lt{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Re(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Aa.buffer(this.shape,this.dtype,e)}bufferSync(){return Aa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Fr(this.shape,e,this.dtype==="complex64")}arraySync(){return Fr(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Er().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>Js(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Er().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Er().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Js(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Er().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Er().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Aa.print(this,e)}clone(){return this.throwIfDisposed(),Aa.clone(this)}toString(e=!1){const t=this.dataSync();return uR(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Aa.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),Er().makeVariable(this,e,t,r)}}Object.defineProperty(Lt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function te(){return Im("Tensor",()=>Lt)}te();class Rl extends Lt{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!rt(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Er().disposeTensor(this),this.dataId=e.dataId,Er().incRef(this,null)}dispose(){Er().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Rl,Symbol.hasInstance,{value:n=>n instanceof Lt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pv;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(pv||(pv={}));var ff;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(ff||(ff={}));var mf;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(mf||(mf={}));var gf;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(gf||(gf={}));var xf;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(xf||(xf={}));const dR={float32:gf,int32:ff,bool:mf,complex64:xf};function Gn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return dR[n][e]}function dg(n){return Gn(n,"int32")}function C1(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function I1(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,e){if(n.dtype===e.dtype)return[n,e];const t=Gn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function k1(n){const e=[];return S1(n,e,new Set),e}function S1(n,e,t){if(n==null)return;if(n instanceof Lt){e.push(n);return}if(!pR(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),S1(o,e,t))}}function pR(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xp(n){return n.kernelName!=null}class fv{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ja{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new fv}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Zn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new rR(this.backendInstance),!0}setupRegisteredKernels(){ov(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ov(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof ym)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Zn(`Initialization of backend ${e} failed`),Zn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Zn(`Initialization of backend ${e} failed`),Zn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Ja.nextTensorId++}nextVariableId(){return Ja.nextVariableId++}clone(e){const t=j.runKernel(Yu,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return j.runKernel(Lu,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(rv(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=xp(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(xp(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=rv(f,this.backendName);$(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const y=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const b=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,y,b);const v=b.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(s){const w=this.getTensorsForGradient(f,m,v);r=this.saveTensorsForBackwardMode(w)}return v}}else{const{forwardFunc:f}=e,m=g=>{s&&(r=g.map(x=>this.keep(this.clone(x))))};i=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}const{inputs:l,attrs:h}=e,d=xp(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(c,l,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=sv(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=o.map(c=>t[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Ru(e[0])&&(o=e.map(u=>qs(u)));const a=s.write(o,t,r),i=new Lt(t,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=DE(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new Lt(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new Rl(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*kl(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Rl||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*kl(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=sv(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,h)=>{if(l==null){const d=r[h],p=dn(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=k1(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(o instanceof Lt,()=>"The result y returned by f() must be a tensor.");const a=aR(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r??fR(o.shape),iR(i,a,c=>this.tidy(c),mR);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return $(af(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Lt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...t,u),$(r.value instanceof Lt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(af(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];$(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(l.every(d=>d instanceof Lt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return l.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=En(),r=await this.backend.time(e);return r.wallMs=En()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new fv;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ja.nextTensorId=0;Ja.nextVariableId=0;function fR(n){const e=wm(ne(n),"float32");return j.makeTensor(e,n,"float32")}function N1(){const n=Wb();if(n._tfengine==null){const e=new _E(n);n._tfengine=new Ja(e)}return BE(n._tfengine.ENV),lR(()=>n._tfengine),n._tfengine}const j=N1();function mR(n,e){const t={a:n,b:e};return j.runKernel(fi,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(){return typeof navigator<"u"&&navigator!=null}function T1(n){if(n||gR()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function E1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn=Q();Fn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Fn.registerFlag("IS_BROWSER",()=>E1());Fn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Fn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Fn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Fn.registerFlag("PROD",()=>!1);Fn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Fn.getBool("DEBUG"));Fn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Fn.registerFlag("IS_TEST",()=>!1);Fn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Fn.getBool("DEBUG"));Fn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Fn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Fn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n,e){let t=n;if(vr(n))return e==="string"?[]:[n.length];if(C1(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(I1(n))return[n.buffer.size/(e==null?4:kl(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||vr(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&R1(n,r,[]),r}function R1(n,e,t){if(t=t||[],!Array.isArray(n)&&!vr(n)){$(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}$(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),$(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)R1(n[s],r,t.concat(s))}function mv(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function P(n,e,t,r="numeric"){if(n instanceof te())return mv(r,n.dtype,e,t),n;let s=di(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),mv(r,s,e,t),n==null||!vr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Cd(n,s);!vr(n)&&!Array.isArray(n)&&(n=[n]);const i=s!=="string"?ia(n,s):Uo(n,[],!0);return j.makeTensor(i,o,s)}function $1(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>P(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR="__op";function K(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+xR;const s=(...o)=>{j.startScope(t);try{const a=r(...o);return Cm(a)&&console.error("Cannot return a Promise inside of tidy."),j.endScope(a),a}catch(a){throw j.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n,e){const t=P(n,"real","complex"),r=P(e,"imag","complex");bm(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return j.runKernel(Am,s)}const ei=K({complex_:yR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Id(n,e,t,r){if(r==null)r=di(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(I1(n)||C1(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return j.backend.createTensorFromGPUData(n,e||t,r)}if(!vr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Ds(e);const s=ne(e),o=ne(t);$(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],u=a===t.length-1?i!==ne(e.slice(a)):!0;$(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!vr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?ia(n,r):Uo(n,[],!0),j.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1(n,e,t){const r=Cd(n,t);return Id(n,e,r,t)}class mi{static join(e){return new mi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>vr(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],h=e+i-c.start,d=i,f=Math.min(t,c.end)-c.start,m=new Uint8Array(c.buffer,h,f-h);if(a.set(m,d),i+=m.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=vR(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function vR(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(){return j}function gv(){return j.memory()}function Y(n,e){return j.tidy(n,e)}function He(n){k1(n).forEach(t=>t.dispose())}function es(n){return j.keep(n)}function D1(n,e,t=1){return j.registerBackend(n,e,t)}function bR(){return j.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xv=4;async function yv(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((g,x)=>g+x.length,0)+xv*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(y,m),m+=xv,f.set(x,m),m+=x.length}h(f)});r.push(l)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(r);return{data:wR(o),specs:t}}function wR(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const pg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function vv(n){return pg?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function CR(n){if(pg)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function IR(n){if(pg){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function kR(n){return mi.join(n)}function F1(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:vv(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:vv(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new mi(n.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return xn.instance==null&&(xn.instance=new xn),xn.instance}static registerSaveRouter(e){xn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){xn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return xn.getHandlers(e,"save")}static getLoadHandlers(e,t){return xn.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?xn.getInstance().loadRouters:xn.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const SR=n=>xn.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yf="tensorflowjs",vf=1,Do="models_store",Vs="model_info_store";function O1(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function bf(n){const e=n.result;e.createObjectStore(Do,{keyPath:"modelPath"}),e.createObjectStore(Vs,{keyPath:"modelPath"})}class Go{constructor(e){if(this.indexedDB=O1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(yf,vf);o.onupgradeneeded=()=>bf(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(Do,"readonly"),c=i.objectStore(Do).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{t.weightData=mi.join(t.weightData);const i=F1(t),u=a.transaction(Vs,"readwrite");let c=u.objectStore(Vs),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return s(d)}let h;l.onsuccess=()=>{h=a.transaction(Do,"readwrite");const d=h.objectStore(Do);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(f){return s(f)}p.onsuccess=()=>r({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(Vs);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),s(p.error)),m.onerror=g=>(a.close(),s(p.error))}},l.onerror=d=>(a.close(),s(l.error)),u.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}Go.URL_SCHEME="indexeddb://";const _1=n=>Q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Go.URL_SCHEME)?NR(n.slice(Go.URL_SCHEME.length)):null;xn.registerSaveRouter(_1);xn.registerLoadRouter(_1);function NR(n){return new Go(n)}function TR(n){return n.startsWith(Go.URL_SCHEME)?n.slice(Go.URL_SCHEME.length):n}class ER{constructor(){this.indexedDB=O1()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(yf,vf);r.onupgradeneeded=()=>bf(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Vs,"readonly"),i=o.objectStore(Vs).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),t(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=TR(e),new Promise((t,r)=>{const s=this.indexedDB.open(yf,vf);s.onupgradeneeded=()=>bf(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(Vs,"readwrite"),i=a.objectStore(Vs),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),h=()=>{c=o.transaction(Do,"readwrite");const p=c.objectStore(Do).delete(e);p.onsuccess=()=>t(u.result.modelArtifactsInfo),p.onerror=f=>r(u.error)};l.onsuccess=h,l.onerror=d=>(h(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs="/",Da="tensorflowjs_models",M1="info",RR="model_topology",$R="weight_specs",AR="weight_data",DR="model_metadata";function L1(n){return{info:[Da,n,M1].join(vs),topology:[Da,n,RR].join(vs),weightSpecs:[Da,n,$R].join(vs),weightData:[Da,n,AR].join(vs),modelMetadata:[Da,n,DR].join(vs)}}function P1(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function FR(n){const e=n.split(vs);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(vs)}function OR(n){return n.startsWith(Ho.URL_SCHEME)?n.slice(Ho.URL_SCHEME.length):n}class Ho{constructor(e){if(!Q().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=L1(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=F1(e),o=mi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,CR(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw P1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=IR(a),t}}Ho.URL_SCHEME="localstorage://";const B1=n=>Q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ho.URL_SCHEME)?_R(n.slice(Ho.URL_SCHEME.length)):null;xn.registerSaveRouter(B1);xn.registerLoadRouter(B1);function _R(n){return new Ho(n)}class MR{constructor(){$(Q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Da+vs,r=vs+M1;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=FR(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=OR(e);const t=L1(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return P1(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bv="://";class jr{constructor(){this.managers={}}static getInstance(){return jr.instance==null&&(jr.instance=new jr),jr.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(bv)&&(e=e.slice(0,e.indexOf(bv))),$(e.length>0,()=>"scheme must not be an empty string.");const r=jr.getInstance();$(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=jr.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(jr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LR{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!Q().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return d1(e)}}if(Q().get("IS_BROWSER")){Q().setPlatform("browser",new LR);try{jr.registerManager(Ho.URL_SCHEME,new MR)}catch{}try{jr.registerManager(Go.URL_SCHEME,new ER)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PR={importFetch:()=>require("node-fetch")};let yp;class BR{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Q().global.fetch!=null?Q().global.fetch(e,t):(yp==null&&(yp=PR.importFetch()),yp(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}Q().get("IS_NODE")&&!Q().get("IS_BROWSER")&&Q().setPlatform("node",new BR);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(n,e="float32",t){return e=e||"float32",Ds(n),new sn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,e){const t=P(n,"x","cast");if(!AE(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return j.runKernel(Lu,r,s)}const ye=K({cast_:zR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n){const t={x:P(n,"x","clone","string_or_numeric")};return j.runKernel(Yu,t)}const Mo=K({clone_:VR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */N1();const UR={buffer:We,cast:ye,clone:Mo,print:WR};hR(UR);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n,e){let t=P(n,"a","add"),r=P(e,"b","add");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(fi,s)}const le=K({add_:GR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e){let t=P(n,"a","floorDiv"),r=P(e,"b","floorDiv");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(Ku,s)}const z1=K({floorDiv_:HR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e){let t=P(n,"a","div"),r=P(e,"b","div");if([t,r]=$t(t,r),t.dtype==="int32"&&r.dtype==="int32")return z1(t,r);const s={a:t,b:r},o={};return j.runKernel(Wu,s,o)}const Ae=K({div_:jR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e){let t=P(n,"a","mul"),r=P(e,"b","mul");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(oc,s)}const U=K({mul_:qR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n){const e=P(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return j.runKernel(Eh,t)}else{const t={x:e};return j.runKernel(wh,t)}}const yn=K({abs_:KR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n){const t={x:P(n,"x","acos")};return j.runKernel($u,t)}const YR=K({acos_:XR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n){const t={x:P(n,"x","acosh")};return j.runKernel(Au,t)}const ZR=K({acosh_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JR(n,e=null,t=!1){const s={x:P(n,"x","all","bool")},o={axis:e,keepDims:t};return j.runKernel(Sm,s,o)}const V1=K({all_:JR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,e=null,t=!1){const s={x:P(n,"x","any","bool")},o={axis:e,keepDims:t};return j.runKernel(Nm,s,o)}const wf=K({any_:e$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e=0){const r={x:P(n,"x","argMax")},s={axis:e};return j.runKernel(Ch,r,s)}const uu=K({argMax_:t$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e=0){const r={x:P(n,"x","argMin")},s={axis:e};return j.runKernel(Ih,r,s)}const r$=K({argMin_:n$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n){const t={x:P(n,"x","asin")};return j.runKernel(Du,t)}const o$=K({asin_:s$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n){const t={x:P(n,"x","asinh")};return j.runKernel(Fu,t)}const i$=K({asinh_:a$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const t={x:P(n,"x","atan")};return j.runKernel(Ou,t)}const c$=K({atan_:u$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e){let t=P(n,"a","atan2"),r=P(e,"b","atan2");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(Mu,s)}const h$=K({atan2_:l$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n){const t={x:P(n,"x","atanh")};return j.runKernel(_u,t)}const p$=K({atanh_:d$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sc(n,e,t,r,s="NHWC",o){const a=n[3],i=[...e,a],u=Os(s);return on(n,i,t,o,r,null,null,u)}function Cr(n,e,t,r,s,o,a="channelsLast"){const[i,u]=cu(e);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return on(n,c,t,r,s,o,!1,a)}function Fs(n,e,t,r,s,o,a="NDHWC"){const[i,u,c]=Cf(e);let l,h;if(a==="NDHWC")h="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return co(n,l,t,r,s,!1,h,o)}function on(n,e,t,r,s,o,a=!1,i="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,h]=n;else if(i==="channelsFirst")[u,h,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[d,p,,f]=e,[m,g]=cu(t),[x,y]=cu(r),b=Wa(d,x),v=Wa(p,y),{padInfo:w,outHeight:C,outWidth:I}=g$(s,c,l,m,g,b,v,o,i),k=a?f*h:f;let S;return i==="channelsFirst"?S=[u,k,C,I]:i==="channelsLast"&&(S=[u,C,I,k]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:C,outWidth:I,outChannels:k,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:x,dilationWidth:y,inShape:n,outShape:S,filterShape:e}}function co(n,e,t,r,s,o=!1,a="channelsLast",i){let[u,c,l,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,h,d]=n;else if(a==="channelsFirst")[u,d,c,l,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=e,[x,y,b]=Cf(t),[v,w,C]=Cf(r),I=Wa(p,v),k=Wa(f,w),S=Wa(m,C),{padInfo:N,outDepth:E,outHeight:R,outWidth:_}=x$(s,c,l,h,x,y,b,I,k,S,i),O=o?g*d:g;let F;return a==="channelsFirst"?F=[u,O,E,R,_]:a==="channelsLast"&&(F=[u,E,R,_,O]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:E,outHeight:R,outWidth:_,outChannels:O,padInfo:N,strideDepth:x,strideHeight:y,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:k,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:C,inShape:n,outShape:F,filterShape:e}}function f$(n,e,t,r,s){r==null&&(r=fg(n,e,t));const o=n[0],a=n[1],i=lu((o-e+2*r)/t+1,s),u=lu((a-e+2*r)/t+1,s);return[i,u]}function m$(n,e,t,r,s,o){s==null&&(s=fg(n,e[0],r[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*s>=e[i]&&(a[i]=lu((n[i]-e[i]+2*s)/r[i]+1,o));return a}function fg(n,e,t,r=1){const s=Wa(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function cu(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Cf(n){return typeof n=="number"?[n,n,n]:n}function Wa(n,e){return e<=1?n:n+(n-1)*(e-1)}function g$(n,e,t,r,s,o,a,i,u){let c,l,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=f$([e,t],o,r,n,i);l=p[0],h=p[1]}else if(n==="same"){l=Math.ceil(e/r),h=Math.ceil(t/s);const d=Math.max(0,(l-1)*r+o-e),p=Math.max(0,(h-1)*s+a-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;c={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),h=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const d=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],m=u==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=lu((e-o+d+p)/r+1,i),h=lu((t-a+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:h}}function x$(n,e,t,r,s,o,a,i,u,c,l){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=m$([e,t,r,1],[i,u,c],1,[s,o,a],n,l);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/s),p=Math.ceil(t/o),f=Math.ceil(r/a);const m=(d-1)*s+i-e,g=(p-1)*o+u-t,x=(f-1)*a+c-r,y=Math.floor(m/2),b=m-y,v=Math.floor(g/2),w=g-v,C=Math.floor(x/2),I=x-C;h={top:v,bottom:w,left:C,right:I,front:y,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function lu(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function jo(n){const[e,t,r]=cu(n);return e===1&&t===1&&r===1}function fn(n,e){return jo(n)||jo(e)}function qo(n){return cu(n).every(e=>e>0)}function Os(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Mn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")$(Qa(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{$(Qa(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e){const r={x:P(n,"x","reshape","string_or_numeric")},s={shape:e};return j.runKernel(ud,r,s)}const q=K({reshape_:y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n,e,t,r,s){const o=P(n,"x","avgPool","float32"),a=1;$(fn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Mn("avgPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=j.runKernel(kh,c,l);return h=ye(h,o.dtype),u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const mg=K({avgPool_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n,e,t,r,s,o="NDHWC"){const a=P(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),$(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),$(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Mn("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let h=j.runKernel(Sh,c,l);return h=ye(h,i.dtype),u?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const w$=K({avgPool3d_:b$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e=0){$(n.length>=1,()=>"Pass at least one tensor to concat");const t=$1(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return Mo(t[0]);const r=t,s={axis:e};return j.runKernel(Rh,r,s)}const Dn=K({concat_:C$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,e,t=!1,r=!1){let s=P(n,"a","matMul"),o=P(e,"b","matMul");[s,o]=$t(s,o);const a={a:s,b:o},i={transposeA:t,transposeB:r};return j.runKernel(Nh,a,i)}const tt=K({matMul_:I$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n){const t={x:P(n,"x","sigmoid","float32")};return j.runKernel(gc,t)}const gi=K({sigmoid_:k$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e,t){const r=P(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return j.runKernel(pd,s,o)}const lt=K({slice_:S$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(n){const t={x:P(n,"x","tanh","float32")};return j.runKernel(Cc,t)}const kd=K({tanh_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n,e,t){const r=P(n,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);$(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),$(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),$(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return j.runKernel(Th,o,a)}const gg=K({batchToSpaceND_:T$});function E$(n){let e;return n.rank===0||n.rank===1?e=q(n,[1,1,1,n.size]):n.rank===2?e=q(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,e,t,r,s,o){o==null&&(o=.001);const a=P(n,"x","batchNorm"),i=P(e,"mean","batchNorm"),u=P(t,"variance","batchNorm");let c;s!=null&&(c=P(s,"scale","batchNorm"));let l;r!=null&&(l=P(r,"offset","batchNorm")),$(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:E$(a),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:o},f=j.runKernel(Ph,d,p);return q(f,a.shape)}const Sd=K({batchNorm_:R$});function $$(n,e,t,r,s,o){const a=P(n,"x","batchNorm"),i=P(e,"mean","batchNorm"),u=P(t,"variance","batchNorm");let c;s!=null&&(c=P(s,"scale","batchNorm"));let l;return r!=null&&(l=P(r,"offset","batchNorm")),$(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),$(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Sd(a,i,u,l,c,o)}const A$=K({batchNorm2d_:$$});function D$(n,e,t,r,s,o){const a=P(n,"x","batchNorm"),i=P(e,"mean","batchNorm"),u=P(t,"variance","batchNorm");let c;s!=null&&(c=P(s,"scale","batchNorm"));let l;return r!=null&&(l=P(r,"offset","batchNorm")),$(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),$(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Sd(a,i,u,l,c,o)}const F$=K({batchNorm3d_:D$});function O$(n,e,t,r,s,o){const a=P(n,"x","batchNorm"),i=P(e,"mean","batchNorm"),u=P(t,"variance","batchNorm");let c;s!=null&&(c=P(s,"scale","batchNorm"));let l;return r!=null&&(l=P(r,"offset","batchNorm")),$(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),$(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Sd(a,i,u,l,c,o)}const _$=K({batchNorm4d_:O$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M$(n,e,t){const r=P(n,"x","bincount"),s=P(e,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return j.runKernel(Rm,o,a)}const L$=K({bincount_:M$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,e){let t=P(n,"broadcastTo","x");const r=t.shape;if(Ds(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=q(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Mo(t);const i={x:t},u={reps:o};return j.runKernel(Ic,i,u)}const nu=K({broadcastTo_:P$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n){const t={x:P(n,"x","ceil","float32")};return j.runKernel(Pu,t)}const z$=K({ceil_:B$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nd(n,e,t){Ds(n),t=t||di(e);const r={shape:n,value:e,dtype:t};return j.runKernel(Gm,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,e,t){const r=P(n,"x","clipByValue");if($(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Nd(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return j.runKernel(Bu,s,o)}const sr=K({clipByValue_:V$});function W$(n){return Dn(n,0)}const U$=K({concat1d_:W$});function G$(n,e){return Dn(n,e)}const H$=K({concat2d_:G$});function j$(n,e){return Dn(n,e)}const q$=K({concat3d_:j$});function K$(n,e){return Dn(n,e)}const X$=K({concat4d_:K$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,e,t,r,s="NHWC",o=[1,1],a){const i=P(n,"x","conv2d","float32"),u=P(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),$(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Mn("conv2d",r,a);const h=s==="NHWC"?c.shape[3]:c.shape[1];$(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),$(fn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),$(qo(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(qo(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=j.runKernel($h,d,p);return l?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ko=K({conv2d_:Y$});function Q$(n,e,t,r,s="NWC",o=1,a){const i=P(n,"x","conv1d"),u=P(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=q(i,[1,i.shape[0],i.shape[1]])),$(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),$(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Mn("conv1d",r,a),$(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),$(fn(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),$(qo(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(qo(t),()=>"Error in conv1D: Stride should be larger than 0."),$(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=q(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=q(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Ko(d,h,[1,t],r,"NHWC",[1,o],a);return l?q(g,[g.shape[2],g.shape[3]]):q(g,[g.shape[0],g.shape[2],g.shape[3]])}const W1=K({conv1d_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e,t,r,s,o="NHWC",a){$(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),$(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),$(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),$(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];$(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),$(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Mn("conv2dDerInput",s,a);const d={dy:u,filter:t},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},f=j.runKernel(Ah,d,p);return c?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const xg=K({conv2DBackpropInput_:Z$});function J$(n,e,t,r,s,o){const a=P(n,"x","conv2dTranspose"),i=P(e,"filter","conv2dTranspose");return xg(t,a,i,r,s,"NHWC",o)}const U1=K({conv2dTranspose_:J$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=P(n,"x","conv3d"),i=P(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),$(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),$(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),$(fn(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),$(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),$(qo(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(qo(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},h={strides:t,pad:r,dataFormat:s,dilations:o},d=j.runKernel(Dh,l,h);return c?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const tA=K({conv3d_:eA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e,t,r,s){$(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];$(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),$(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),$(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),$(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),$(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},h={pad:s,strides:r,inputShape:o},d=j.runKernel(Om,l,h);return i?q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const G1=K({conv3DBackpropInput_:nA});function rA(n,e,t,r,s){const o=P(n,"x","conv3dTranspose"),a=P(e,"filter","conv3dTranspose");return G1(t,o,a,r,s)}const sA=K({conv3dTranspose_:rA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n){const t={x:P(n,"x","cos","float32")};return j.runKernel(zu,t)}const yg=K({cos_:oA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n){const t={x:P(n,"x","cosh","float32")};return j.runKernel(Vu,t)}const H1=K({cosh_:aA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n,e=0,t=!1,r=!1){const o={x:P(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return j.runKernel(_m,o,a)}const If=K({cumprod_:iA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e=0,t=!1,r=!1){const o={x:P(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return j.runKernel(Fh,o,a)}const j1=K({cumsum_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n,e,t,r=!1){const s=P(n,"x","denseBincount"),o=P(e,"weights","denseBincount");$(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),$(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:t,binaryOutput:r};return j.runKernel(Lm,a,i)}const wv=K({denseBincount_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e,t="NHWC"){const r=P(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];$(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),$(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),$(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),$(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:t};return j.runKernel(Pm,i,u)}const hA=K({depthToSpace_:lA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n,e,t,r,s="NHWC",o=[1,1],a){const i=P(n,"x","depthwiseConv2d","float32"),u=P(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=s==="NHWC"?c.shape[3]:c.shape[1];$(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Mn("depthwiseConv2d",r,a);const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=j.runKernel(Oh,d,p);return l?q(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const vg=K({depthwiseConv2d_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n,e,t,r,s=[1,1],o="NHWC"){const a=P(n,"x","dilation2d"),i=P(e,"filter","dilation2d");$(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),$(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),$(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),$(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},h={strides:t,pad:r,dilations:s},d=j.runKernel(_h,l,h);return c?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const fA=K({dilation2d_:pA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Wt(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function Be(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else r[t-s-1]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e){let t=P(n,"a","equal","string_or_numeric"),r=P(e,"b","equal","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(Mh,s)}const ss=K({equal_:mA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t){const r=P(e,"a","where"),s=P(t,"b","where"),o=P(n,"condition","where","bool"),a=Be(Be(o.shape,r.shape),s.shape),i=nu(o,a),u=nu(r,a),c=nu(s,a),l={condition:i,t:u,e:c};return j.runKernel(dd,l)}const kn=K({where_:gA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n){const t={x:P(n,"x","zerosLike")};return j.runKernel(bd,t)}const Qe=K({zerosLike_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e){let t=P(n,"a","div"),r=P(e,"b","div");[t,r]=$t(t,r);const s=Ae(t,r),o=Qe(s),a=ss(r,o);return kn(a,o,s)}const vA=K({divNoNan_:yA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e){const t=P(n,"t1","dot"),r=P(e,"t2","dot");$((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if($(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=q(t,[1,-1]),i=q(r,[-1,1]),u=tt(a,i);return q(u,[])}else if(t.rank===1&&r.rank===2){const a=q(t,[1,-1]),i=q(r,[r.shape[0],r.shape[1]]),u=tt(a,i);return q(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=q(r,[-1,1]),i=tt(t,a);return q(i,[i.size])}else{const a=q(r,[r.shape[0],r.shape[1]]);return tt(t,a)}}const wA=K({dot_:bA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,...e){const t=e.map((s,o)=>P(s,`tensors${o}`,"einsum")),r={equation:n};return j.runKernel(Vm,t,r)}const Bi=K({einsum_:CA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const t={x:P(n,"x","elu","float32")};return j.runKernel(Uu,t)}const Td=K({elu_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n){let e=P(n,"x","erf");$(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ye(e,"float32"));const t={x:e};return j.runKernel(Gu,t)}const q1=K({erf_:kA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bg(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function K1(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function Zt(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Mt(n,e){const t=e.map(r=>1);return K1(n,t,e)}function an(n,e,t){$(bg(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function bt(n,e){if(bg(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function lo(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function At(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n,e=null,t=!1){const s={x:P(n,"x","max")},o={reductionIndices:e,keepDims:t};return j.runKernel(Kh,s,o)}const Or=K({max_:SA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e=null,t=!1){const s={x:P(n,"x","min")},o={axis:e,keepDims:t};return j.runKernel(Zh,s,o)}const $l=K({min_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e){let t=P(n,"base","pow"),r=P(e,"exp","pow");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(ac,s)}const Xo=K({pow_:TA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(n,e){if((vr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&vr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Id(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n){const t={x:P(n,"x","sqrt","float32")};return j.runKernel(yc,t)}const pn=K({sqrt_:EA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const e=P(n,"x","square"),t={};return j.runKernel("Square",{x:e},t)}const dt=K({square_:RA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e=null,t=!1){let r=P(n,"x","sum");r.dtype==="bool"&&(r=ye(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return j.runKernel(fd,s,o)}const $e=K({sum_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e="euclidean",t=null,r=!1){n=P(n,"x","norm");const s=X1(n,e,t);let o=s.shape;if(r){const a=Ue(t,n.shape);o=Mt(s.shape,a)}return q(s,o)}function X1(n,e,t=null){if(n.rank===0)return yn(n);if(n.rank!==1&&t===null)return X1(q(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return $e(yn(n),t);if(e===1/0)return Or(yn(n),t);if(e===-1/0)return $l(yn(n),t);if(e==="euclidean"||e===2)return pn($e(Xo(yn(n),nt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Or($e(yn(n),t[0]),t[1]-1);if(e===1/0)return Or($e(yn(n),t[1]),t[0]);if(e===-1/0)return $l($e(yn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return pn($e(dt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Ed=K({norm_:AA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n,e=null,t=!1){return Ed(n,"euclidean",e,t)}const FA=K({euclideanNorm_:DA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n){const t={x:P(n,"x","exp")};return j.runKernel(Hu,t)}const os=K({exp_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e=0){const t=P(n,"x","expandDims","string_or_numeric");$(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return j.runKernel(Lh,r,s)}const Rn=K({expandDims_:_A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n){const t={x:P(n,"x","expm1")};return j.runKernel(ju,t)}const LA=K({expm1_:MA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n,e){const t=P(n,"x","tile","string_or_numeric");$(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return j.runKernel(Ic,r,s)}const Dr=K({tile_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t,r="float32"){e==null&&(e=n);const s=We([n,e],r),o=n<=e?n:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=q(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Dr(Rn(a,0),[t[0],1,1]);if(t.length===2)return Dr(Rn(Rn(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Dr(Rn(Rn(Rn(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Y1=K({eye_:BA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n){const t={x:P(n,"x","floor","float32")};return j.runKernel(qu,t)}const Rd=K({floor_:zA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e,t=0,r=0){const s=P(n,"x","gather"),o=P(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:t,batchDims:r};return j.runKernel(Bh,a,i)}const wg=K({gather_:VA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,e){let t=P(n,"a","greater","string_or_numeric"),r=P(e,"b","greater","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(zh,s)}const or=K({greater_:WA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,e){let t=P(n,"a","greaterEqual","string_or_numeric"),r=P(e,"b","greaterEqual","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(Xu,s)}const ua=K({greaterEqual_:UA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n){const t={input:P(n,"input","imag")};return j.runKernel(qm,t)}const Cg=K({imag_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n){const t={x:P(n,"x","isFinite")};return j.runKernel(Qu,t)}const jA=K({isFinite_:HA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n){const t={x:P(n,"x","isInf")};return j.runKernel(Zu,t)}const KA=K({isInf_:qA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n){const t={x:P(n,"x","isNaN")};return j.runKernel(Ju,t)}const YA=K({isNaN_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e=.2){const r={x:P(n,"x","leakyRelu")},s={alpha:e};return j.runKernel(Vh,r,s)}const Ig=K({leakyRelu_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,e){let t=P(n,"a","less","string_or_numeric"),r=P(e,"b","less","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(Wh,s)}const Al=K({less_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e){let t=P(n,"a","lessEqual","string_or_numeric"),r=P(e,"b","lessEqual","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(Uh,s)}const xi=K({lessEqual_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n,e=5,t=1,r=1,s=.5){const o=P(n,"x","localResponseNormalization");$(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),$(Qa(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=q(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:t,alpha:r,beta:s},l=j.runKernel(qh,u,c);return i?q(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const tD=K({localResponseNormalization_:eD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n){const t={x:P(n,"x","log","float32")};return j.runKernel(ec,t)}const as=K({log_:nD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n){const t={x:P(n,"x","log1p")};return j.runKernel(tc,t)}const Q1=K({log1p_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){$(af(n),()=>"The f passed in variableGrads(f) must be a function"),$(e==null||Array.isArray(e)&&e.every(c=>c instanceof Rl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in j.registeredVariables)e.push(j.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),$(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=j.gradients(n,e,null,o);$(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function ni(n){return j.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n){const t={x:P(n,"x","neg")};return j.runKernel(ed,t)}const Et=K({neg_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n){const t={x:P(n,"x","softplus")};return j.runKernel(xc,t)}const Nc=K({softplus_:aD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n){const e=P(n,"x","logSigmoid");return ni(r=>({value:Et(Nc(Et(r))),gradFunc:a=>U(a,gi(Et(r)))}))(e)}const uD=K({logSigmoid_:iD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e){let t=P(n,"a","sub"),r=P(e,"b","sub");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(bc,s)}const Oe=K({sub_:cD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e=-1){const t=P(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return ni((s,o)=>{const i=Or(s,e,!0),u=Oe(s,i),c=Oe(ye(u,"float32"),as($e(os(u),e,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=os(p);return Oe(h,U($e(h,e,f),m))}}})(t)}const Z1=K({logSoftmax_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e=null,t=!1){const r=P(n,"x","logSumExp"),s=Ue(e,r.shape),o=Or(r,s,!0),a=Oe(r,o),i=os(a),u=$e(i,s),c=as(u),l=le(q(o,c.shape),c);if(t){const h=Mt(l.shape,s);return q(l,h)}return l}const J1=K({logSumExp_:hD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e){const t=P(n,"a","logicalAnd","bool"),r=P(e,"b","logicalAnd","bool");Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(Gh,s)}const ks=K({logicalAnd_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n){const t={x:P(n,"x","logicalNot","bool")};return j.runKernel(Hh,t)}const kg=K({logicalNot_:pD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e){const t=P(n,"a","logicalOr","bool"),r=P(e,"b","logicalOr","bool");Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(jh,s)}const ew=K({logicalOr_:fD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e){const t=P(n,"a","logicalXor","bool"),r=P(e,"b","logicalXor","bool");return Be(t.shape,r.shape),ks(ew(n,e),kg(ks(n,e)))}const gD=K({logicalXor_:mD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n,e,t,r,s){const o=P(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),$(fn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Mn("maxPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=j.runKernel(Xh,c,l);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Sg=K({maxPool_:xD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=P(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),$(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Mn("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},h=j.runKernel(Yh,c,l);return u?q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const vD=K({maxPool3d_:yD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e){let t=P(n,"a","maximum"),r=P(e,"b","maximum");[t,r]=$t(t,r),t.dtype==="bool"&&(t=ye(t,"int32"),r=ye(r,"int32")),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(nc,s)}const ho=K({maximum_:bD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e=null,t=!1){const s={x:P(n,"x","mean")},o={axis:e,keepDims:t};return j.runKernel(Qh,s,o)}const _t=K({mean_:wD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(n,e="float32"){if(Ds(n),e==="complex64"){const r=Kt(n,"float32"),s=Kt(n,"float32");return ei(r,s)}const t=dn(ne(n),e);return j.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function po(n,e="float32"){if(Ds(n),e==="complex64"){const r=po(n,"float32"),s=Kt(n,"float32");return ei(r,s)}const t=wm(ne(n),e);return j.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,e){let t=P(n,"a","minimum"),r=P(e,"b","minimum");[t,r]=$t(t,r),t.dtype==="bool"&&(t=ye(t,"int32"),r=ye(r,"int32")),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(rc,s)}const hu=K({minimum_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n,e,t){$(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=P(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let i=0;i<r.rank;i++)$(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return j.runKernel(Jh,a,o)}const kD=K({mirrorPad_:ID});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(n,e){let t=P(n,"a","mod"),r=P(e,"b","mod");[t,r]=$t(t,r);const s={a:t,b:r};return j.runKernel(sc,s)}const ND=K({mod_:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n,e=null,t=!1){n=P(n,"x","moments");const r=Ue(e,n.shape),s=_t(n,r,t);let o=s.shape;t||(o=Mt(s.shape,r));const a=dt(Oe(ye(n,"float32"),q(s,o))),i=_t(a,r,t);return{mean:s,variance:i}}const Ng=K({moments_:TD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e){let t=P(n,"a","notEqual","string_or_numeric"),r=P(e,"b","notEqual","string_or_numeric");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r};return j.runKernel(td,s)}const Dl=K({notEqual_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:P(n,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:t,offValue:r};return j.runKernel(rd,a,i)}const tw=K({oneHot_:RD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n){const t={x:P(n,"x","onesLike")};return j.runKernel(nd,t)}const br=K({onesLike_:$D});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e,t=0){const r=P(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return j.runKernel(od,o,s)}const Tg=K({pad_:AD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n,e,t){const r=P(n,"x","spaceToBatchND");$(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),$(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),$(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return j.runKernel(md,s,o)}const Eg=K({spaceToBatchND_:DD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=P(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(fn(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=Cr(u.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];let d;r==="same"?d=_D([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=OD([l.inHeight,l.inWidth],h,d),g=p?r:"valid",x=p?u:Eg(u,h,f),b=(t==="avg"?()=>mg(x,e,o,g,a):()=>Sg(x,e,o,g,a))(),v=p?b:gg(b,h,m);return c?q(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function OD(n,e,t){const r=t.map(l=>l[0]),s=t.map(l=>l[1]),o=n.concat(r,s),a=e.map((l,h)=>(l-o[h]%l)%l),i=s.map((l,h)=>l+a[h]),u=e.map((l,h)=>[r[h],i[h]]),c=e.map((l,h)=>[0,a[h]]);return[u,c]}function _D(n,e){const r=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const MD=K({pool_:FD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(n,e){const t=P(n,"x","prelu"),r=P(e,"alpha","prelu"),s={x:t,alpha:r};return j.runKernel(ad,s)}const Rg=K({prelu_:LD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n,e=null,t=!1){let r=P(n,"x","prod");r.dtype==="bool"&&(r=ye(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return j.runKernel(id,s,o)}const BD=K({prod_:PD});var $g={exports:{}};$g.exports;(function(n){(function(e,t,r){function s(u){var c=this,l=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),h=c&&c.state,d=l.next;return d.int32=function(){return l.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,l),d.state=function(){return o(l,{})}),d}function i(){var u=4022871197,c=function(l){l=String(l);for(var h=0;h<l.length;h++){u+=l.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:this.alea=a})(oa,n)})($g);var zD=$g.exports,Ag={exports:{}};Ag.exports;(function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(oa,n)})(Ag);var VD=Ag.exports,Dg={exports:{}};Dg.exports;(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(oa,n)})(Dg);var WD=Dg.exports,Fg={exports:{}};Fg.exports;(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.x,h=u.i,d,p;return d=l[h],d^=d>>>7,p=d^d<<24,d=l[h+1&7],p^=d^d>>>10,d=l[h+3&7],p^=d^d>>>3,d=l[h+4&7],p^=d^d<<7,d=l[h+7&7],d=d^d<<13,p^=d^d<<9,l[h]=p,u.i=h+1&7,p};function c(l,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],l.x=p,l.i=0,d=256;d>0;--d)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(oa,n)})(Fg);var UD=Fg.exports,Og={exports:{}};Og.exports;(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.w,h=u.X,d=u.i,p,f;return u.w=l=l+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,u.i=d,f+(l^l>>>16)|0};function c(l,h){var d,p,f,m,g,x=[],y=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,y=Math.max(y,h.length)),f=0,m=-32;m<y;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;l.w=g,l.X=x,l.i=f}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(oa,n)})(Og);var GD=Og.exports,_g={exports:{}};_g.exports;(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(oa,n)})(_g);var HD=_g.exports,nw={exports:{}};const jD={},qD=Object.freeze(Object.defineProperty({__proto__:null,default:jD},Symbol.toStringTag,{value:"Module"})),KD=KE(qD);(function(n){(function(e,t,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,h=s-1,d;function p(v,w,C){var I=[];w=w==!0?{entropy:!0}:w||{};var k=x(g(w.entropy?[v,b(t)]:v??y(),3),I),S=new f(I),N=function(){for(var E=S.g(o),R=u,_=0;E<c;)E=(E+_)*s,R*=s,_=S.g(1);for(;E>=l;)E/=2,R/=2,_>>>=1;return(E+_)/R};return N.int32=function(){return S.g(4)|0},N.quick=function(){return S.g(4)/4294967296},N.double=N,x(b(S.S),t),(w.pass||C||function(E,R,_,O){return O&&(O.S&&m(O,S),E.state=function(){return m(S,{})}),_?(r[i]=E,R):E})(N,k,"global"in w?w.global:this==r,w.state)}function f(v){var w,C=v.length,I=this,k=0,S=I.i=I.j=0,N=I.S=[];for(C||(v=[C++]);k<s;)N[k]=k++;for(k=0;k<s;k++)N[k]=N[S=h&S+v[k%C]+(w=N[k])],N[S]=w;(I.g=function(E){for(var R,_=0,O=I.i,F=I.j,L=I.S;E--;)R=L[O=h&O+1],_=_*s+L[h&(L[O]=L[F=h&F+R])+(L[F]=R)];return I.i=O,I.j=F,_})(s)}function m(v,w){return w.i=v.i,w.j=v.j,w.S=v.S.slice(),w}function g(v,w){var C=[],I=typeof v,k;if(w&&I=="object")for(k in v)try{C.push(g(v[k],w-1))}catch{}return C.length?C:I=="string"?v:v+"\0"}function x(v,w){for(var C=v+"",I,k=0;k<C.length;)w[h&k]=h&(I^=w[h&k]*19)+C.charCodeAt(k++);return b(w)}function y(){try{var v;return d&&(v=d.randomBytes)?v=v(s):(v=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(v)),b(v)}catch{var w=e.navigator,C=w&&w.plugins;return[+new Date,e,C,e.screen,b(t)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(r.random(),t),n.exports){n.exports=p;try{d=KD}catch{}}else r["seed"+i]=p})(typeof self<"u"?self:oa,[],Math)})(nw);var XD=nw.exports,YD=zD,QD=VD,ZD=WD,JD=UD,eF=GD,tF=HD,ca=XD;ca.alea=YD;ca.xor128=QD;ca.xorwow=ZD;ca.xorshift7=JD;ca.xor4096=eF;ca.tychei=tF;var Mg=ca;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rw{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Mg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class nF{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Mg.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n,e=0,t=1,r,s){if(Ds(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new rw(e,t,r,!1,s),a=We(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const sF=K({randomNormal_:rF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n,e=0,t=1,r="float32",s){Ds(n);const o=We(n,r),a=new nF(e,t,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Tc=K({randomUniform_:oF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return j.runKernel(eg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){const t={input:P(n,"input","real")};return j.runKernel(tg,t)}const Fl=K({real_:aF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n){const t={x:P(n,"x","reciprocal")};return j.runKernel(ic,t)}const uF=K({reciprocal_:iF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n){const t={x:P(n,"x","relu")};return j.runKernel(uc,t)}const la=K({relu_:cF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(n){const t={x:P(n,"x","relu6")};return j.runKernel(cc,t)}const sw=K({relu6_:lF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n,e){const r={x:P(n,"x","reverse")},s={dims:e};return j.runKernel(hd,r,s)}const Yo=K({reverse_:hF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n){const t={x:P(n,"x","round")};return j.runKernel(lc,t)}const ow=K({round_:dF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const t={x:P(n,"x","rsqrt","float32")};return j.runKernel(hc,t)}const aw=K({rsqrt_:pF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n){const t={x:P(n,"x","selu")};return j.runKernel(dc,t)}const iw=K({selu_:fF});function mF(n,e,t,r,s,o=[1,1],a="NHWC"){const i=P(n,"x","separableConv2d"),u=P(e,"depthwiseFilter","separableConv2d"),c=P(t,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(i.rank===3&&(h=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),$(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),$(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),$(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],p=u.shape[3];$(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=vg(l,u,r,s,a,o),g=Ko(f,c,1,"valid",a);return h?q(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const uw=K({separableConv2d_:mF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n){const t={x:P(n,"x","sign")};return j.runKernel(mc,t)}const xF=K({sign_:gF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n){const t={x:P(n,"x","sin","float32")};return j.runKernel(pc,t)}const cw=K({sin_:yF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n){const t={x:P(n,"x","sinh")};return j.runKernel(fc,t)}const lw=K({sinh_:vF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t){const r=P(n,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),lt(r,[e],[t])}const Lg=K({slice1d_:bF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n,e,t){const r=P(n,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),lt(r,e,t)}const hw=K({slice2d_:wF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n,e,t){const r=P(n,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),lt(r,e,t)}const Pg=K({slice3d_:CF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n,e,t){const r=P(n,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),lt(r,e,t)}const Ol=K({slice4d_:IF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(n,e=-1){const t=P(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return j.runKernel(xd,r,s)}const Bg=K({softmax_:kF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(n){$(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return j.runKernel(Um,e)}const dw=K({fft_:SF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n){$(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return j.runKernel(jm,e)}const kf=K({ifft_:NF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=q(n,[t,e]);r=kf(s)}else{const s=[t,2*(e-1)],o=q(Fl(n),[t,e]),a=q(Cg(n),[t,e]),i=Yo(lt(o,[0,1],[t,e-2]),1),u=U(Yo(lt(a,[0,1],[t,e-2]),1),nt(-1)),c=Dn([o,i],1),l=Dn([a,u],1),h=q(ei(c,l),[s[0],s[1]]);r=kf(h)}if(r=Fl(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=q(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const EF=K({irfft_:TF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e,t=0){const s={x:P(n,"x","split")},o={numOrSizeSplits:e,axis:t};return j.runKernel(gd,s,o)}const rr=K({split_:RF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n,e){$(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,s=lt(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,s=Dn([n,Kt(f)],n.shape.length-1),t=e}else s=n;const o=Qe(s),a=q(ei(s,o),[r,t]),i=dw(a),u=Math.floor(t/2)+1,c=Fl(i),l=Cg(i),h=rr(c,[u,t-u],c.shape.length-1),d=rr(l,[u,t-u],l.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,q(ei(h[0],d[0]),p)}const AF=K({rfft_:$F});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n,e){let t=P(n,"a","squaredDifference"),r=P(e,"b","squaredDifference");[t,r]=$t(t,r),Be(t.shape,r.shape);const s={a:t,b:r},o={};return j.runKernel(vc,s,o)}const FF=K({squaredDifference_:DF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(n,e){const t=P(n,"x","squeeze","string_or_numeric");return q(t,io(t.shape,e).newShape)}const Ec=K({squeeze_:OF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n,e=0){const t=$1(n,"tensors","stack","string_or_numeric");$(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&$(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return j.runKernel(sd,r,s)}const Ss=K({stack_:_F});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n,e=0){const r={x:P(n,"x","step")},s={alpha:e};return j.runKernel(kc,r,s)}const Rc=K({step_:MF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n,e,t,r,s=0,o=0,a=0,i=0,u=0){const l={x:P(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return j.runKernel(ag,l,h)}const PF=K({stridedSlice_:LF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const t={x:P(n,"x","tan","float32")};return j.runKernel(wc,t)}const zF=K({tan_:BF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(n,e){Mb(n);const t=Cd(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Id(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n,e,t){if(Mb(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Cd(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Id(n,e,r,t)}function pw(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function VF(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}pw(t,e,n)}function ha(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let h=s;h<o;++h)a*=t[h];const i=s<1?1:s,u=ne(e.shape)/i,c=[...Re(t.slice(0,s)),1],l=ne(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,e=1,t=!0){const r=P(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[i,u]=j.runKernel(ig,o,a);return{values:i,indices:u}}const UF=K({topk_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n,e=0,t=1,r,s){if(Ds(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new rw(e,t,r,!0,s),a=We(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const fw=K({truncatedNormal_:GF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n,e=0){const t=P(n,"x","unique","string_or_numeric");$(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=j.runKernel(cg,r,s);return{values:o,indices:a}}const jF=K({unique_:HF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n,e,t){const r=P(n,"x","unsortedSegmentSum"),s=P(e,"segmentIds","unsortedSegmentSum","int32");$(Qa(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return j.runKernel(vd,o,a)}const mw=K({unsortedSegmentSum_:qF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e=0){const t=P(n,"x","unstack","string_or_numeric");$(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return j.runKernel(yd,r,s)}const Qo=K({unstack_:KF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n,e=!0,t,r){return j.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=We(n,"int32"),s=We([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),i=o*n.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n,e,t){const r=P(n,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),$(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{$(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?Y(()=>{let a=Fl(r),i=Cg(r);return a=j.runKernel(Va,{x:a},o),i=j.runKernel(Va,{x:i},o),t&&(i=Et(i)),ei(a,i)}):j.runKernel(Va,s,o)}const Ye=K({transpose_:YF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e){if(e==null)return n.shape.slice();if(rt(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(n,e,t,r){const s=P(n,"x","dropout");if($(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),$(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Lt?s.clone():s;const o=QF(s,t),a=1-e,i=Ae(Rd(le(Tc(o,0,1,"float32",r),a)),a);return U(s,i)}const JF=K({dropout_:ZF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n,e,t,r,s,o="NHWC",a){let i=n;n.rank===3&&(i=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=q(e,[1,e.shape[0],e.shape[1],e.shape[2]])),$(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),$(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),$(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];$(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),$(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),Mn("conv2dDerFilter",s,a);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return j.runKernel(Dm,h,d)}const zg=K({conv2DBackpropFilter_:eO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vg(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return U(n,Rc(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Wg(n,e){let t=e;const r=Wt(n.shape,e.shape);return r.length>0&&(t=$e(t,r)),q(t,n.shape)}function Ug(n,e,t,r){if(e==="linear")return n;if(e==="relu")return la(n);if(e==="elu")return Td(n);if(e==="relu6")return sw(n);if(e==="prelu")return Rg(n,t);if(e==="leakyrelu")return Ig(n,r);if(e==="sigmoid")return gi(n);throw new Error(`Unknown fused activation ${e}.`)}const Gg=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",Gg(j.state.gradientDepth,u)===!1){$(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Ko(n,e,t,r,s,o,a);return i!=null&&(C=le(C,i)),Ug(C,u,c,l)}const h=P(n,"x","conv2d","float32"),d=P(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),$(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Mn("fused conv2d",r,a);const m=s==="NHWC"?p.shape[3]:p.shape[1];$(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),$(fn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=on(p.shape,d.shape,t,o,r,a);let x;i!=null&&(x=P(i,"bias","fused conv2d"),[x]=$t(x,h),s==="NHWC"?Be(g.outShape,x.shape):($(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),$(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(c!=null){const C=c.shape;if($(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)$(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{Be(C,g.outShape)}catch{const k=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(k)}y=P(c,"prelu weights","fused conv2d")}const b=(C,I)=>{$(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[k,S,N,E]=I,R=Vg(C,N,u);$(jo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const _=xg(S.shape,R,k,t,r),O=zg(S,R,k.shape,t,r),F=[_,O];if(E!=null){const L=Wg(E,R);F.push(L)}return F},v={x:p,filter:d,bias:x,preluActivationWeights:y},w={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?ni((I,k,S)=>{let N=j.runKernel(Nl,v,w);return S([k,I,N]),f&&(N=q(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:b}})(p,d):ni((I,k,S,N)=>{let E=j.runKernel(Nl,v,w);return N([k,I,E,S]),f&&(E=q(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d,x)}const nO=K({fusedConv2d_:tO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n,e,t,r,s,o=[1,1],a){let i=n;n.rank===3&&(i=q(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return j.runKernel(Bm,c,l)}const sO=K({depthwiseConv2dNativeBackpropFilter_:rO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n,e,t,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=q(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},h=j.runKernel(zm,c,l);return u?q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const aO=K({depthwiseConv2dNativeBackpropInput_:oO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Gg(j.state.gradientDepth,o)===!1){let E=tt(n,e,t,r);return s!=null&&(E=le(E,s)),Ug(E,o,a,i)}let u=P(n,"a","fused matMul"),c=P(e,"b","fused matMul");[u,c]=$t(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=ne(f),x=ne(m);$(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const b=Be(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),v=t?q(u,[g,l,d]):q(u,[g,d,l]),w=r?q(c,[x,p,h]):q(c,[x,h,p]);let C;s!=null&&(C=P(s,"bias","fused matMul"),[C]=$t(C,u),Be(b,C.shape));let I;a!=null&&(I=P(a,"prelu weights","fused matMul"));const k=(E,R)=>{const[_,O,F,L]=R,B=Vg(q(E,F.shape),F,o);let M,z;if(!t&&!r?(M=tt(B,O,!1,!0),z=tt(_,B,!0,!1)):!t&&r?(M=tt(B,O,!1,!1),z=tt(B,_,!0,!1)):t&&!r?(M=tt(O,B,!1,!0),z=tt(_,B,!1,!1)):(M=tt(O,B,!0,!0),z=tt(B,_,!0,!0)),s!=null){const H=Wg(L,B);return[M,z,H]}else return[M,z]},S={a:v,b:w,bias:C,preluActivationWeights:I},N={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?ni((R,_,O)=>{const F=j.runKernel(Sl,S,N);return O([R,_,F]),{value:q(F,b),gradFunc:k}})(v,w):ni((R,_,O,F)=>{const L=j.runKernel(Sl,S,N);return F([R,_,L,O]),{value:q(L,b),gradFunc:k}})(v,w,C)}const Cv=K({fusedMatMul_:iO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,e,t,r,s="bilinear",o=0){const a=P(n,"image","cropAndResize"),i=P(e,"boxes","cropAndResize","float32"),u=P(t,"boxInd","cropAndResize","int32"),c=i.shape[0];$(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),$(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},h={method:s,extrapolationValue:o,cropSize:r};return j.runKernel(Mm,l,h)}const cO=K({cropAndResize_:uO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(n){const e=P(n,"image","flipLeftRight","float32");$(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return j.runKernel(Hm,t,{})}const hO=K({flipLeftRight_:lO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n){const e=P(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];$(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Dr(e,s)}const pO=K({grayscaleToRGB_:dO});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n){const e=P(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];$(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),$(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=ye(e,"float32"),a=Vn([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Bi("ij,j->i",o,a);break;case 3:i=Bi("ijk,k->ij",o,a);break;case 4:i=Bi("ijkl,l->ijk",o,a);break;case 5:i=Bi("ijklm,m->ijkl",o,a);break;case 6:i=Bi("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=Rn(i,-1),ye(i,s)}const mO=K({rgbToGrayscale_:fO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e,t=0,r=.5){const s=P(n,"image","rotateWithOffset","float32");$(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return j.runKernel(lg,o,a)}const xO=K({rotateWithOffset_:gO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yi(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),$(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),$(e.rank===1,()=>"scores must be a 1D tensor"),$(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),$(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=P(n,"boxes","nonMaxSuppression","float32"),a=P(e,"scores","nonMaxSuppression","float32"),i=yi(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return j.runKernel(Qm,{boxes:o,scores:a},u)}const vO=K({nonMaxSuppression_:yO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n,e,t){const r=wO(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function wO(n,e,t){return IO(n,e,t||CO)}function CO(n,e){return n>e?1:n<e?-1:0}function IO(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=t(e,n[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hg(n,e,t,r,s){return Kg(n,e,t,r,s,0)}function jg(n,e,t,r,s,o){return Kg(n,e,t,r,s,0,!1,o,!0)}function qg(n,e,t,r,s,o){return Kg(n,e,t,r,s,o,!0)}function Kg(n,e,t,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>s&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(Iv);const l=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&c.length>0;){const g=c.pop(),{score:x,boxIndex:y,suppressBeginIndex:b}=g;if(x<s)break;let v=!1;for(let w=h.length-1;w>=b;--w){const C=kO(n,y,h[w]);if(C>=r){v=!0;break}if(g.score=g.score*SO(r,l,C),g.score<=s)break}g.suppressBeginIndex=h.length,v||(g.score===x?(h.push(y),d.push(g.score)):g.score>s&&bO(c,g,Iv))}const p=h.length,f=t-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function kO(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,l),x=Math.min(i,h),y=Math.min(u,d),b=Math.max(x-m,0)*Math.max(y-g,0);return b/(p+f-b)}function SO(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function Iv(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NO(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=P(n,"boxes","nonMaxSuppressionAsync"),a=P(e,"scores","nonMaxSuppressionAsync"),i=yi(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:h}=Hg(c,l,t,r,s);return o!==n&&o.dispose(),a!==e&&a.dispose(),Vn(h,"int32")}const TO=NO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=P(n,"boxes","nonMaxSuppression"),i=P(e,"scores","nonMaxSuppression"),u=yi(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},h=j.runKernel(Jm,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}const RO=K({nonMaxSuppressionWithScore_:EO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $O(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=P(n,"boxes","nonMaxSuppressionAsync"),i=P(e,"scores","nonMaxSuppressionAsync"),u=yi(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=qg(l,h,t,r,s,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Vn(d,"int32"),selectedScores:Vn(p)}}const AO=$O;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=P(n,"boxes","nonMaxSuppression"),i=P(e,"scores","nonMaxSuppression"),u=yi(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,d={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:h,padToMaxOutputSize:o},f=j.runKernel(Zm,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const FO=K({nonMaxSuppressionPadded_:DO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OO(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=P(n,"boxes","nonMaxSuppressionAsync"),i=P(e,"scores","nonMaxSuppressionAsync"),u=yi(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=jg(d,p,c,l,h,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Vn(f,"int32"),validOutputs:nt(m,"int32")}}const _O=OO;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n,e,t=!1,r=!1){const s=P(n,"images","resizeBilinear");$(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),$(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),$(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=j.runKernel(ld,i,u);return a?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const xw=K({resizeBilinear_:MO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,e,t=!1,r=!1){const s=P(n,"images","resizeNearestNeighbor");$(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),$(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),$(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=j.runKernel(cd,i,u);return a?q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const yw=K({resizeNearestNeighbor_:LO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n,e="binary",t=!1,r=.5){const s=P(n,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=U(Vn([r]),255),l,h,d,p;if($(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),$(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),$(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),$(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,h,d]=rr(s,[1,1,1],-1);const g=U(l,o),x=U(h,a),y=U(d,i);p=le(le(g,x),y)}else p=n;if(e==="otsu"){const g=L$(ye(ow(p),"int32"),A1([]),256);c=BO(g,u)}const f=t?xi(p,c):or(p,c);return ye(U(f,255),"int32")}function BO(n,e){let t=Vn([-1]),r=Vn([0]),s=Vn([0]),o,a,i,u,c,l;for(let h=0;h<n.size-1;h++){o=lt(n,0,h+1),a=lt(n,h+1),c=Ae($e(o),e),l=Ae($e(a),e);const d=$e(U(o,du(0,o.size)));i=Ae(d,$e(o));const p=Nd(a.shape,o.size),f=le(du(0,a.size),p),m=U(a,f);u=Ae($e(m),$e(a));const g=Oe(i,u),x=Oe(i,u),y=U(c,l);s=U(U(y,g),x);const b=or(s,r);r=kn(b,s,r),t=kn(b,Vn([h]),t)}return t}const zO=K({threshold_:PO});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n,e,t="nearest",r="constant",s=0,o){const a=P(n,"image","transform","float32"),i=P(e,"transforms","transform","float32");$(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return j.runKernel(ug,u,c)}const WO=K({transform_:VO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n,e,t){const r=P(n,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?($(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),$(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=P(e<0?o:e,"numLower","bandPart")):($(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=kn(Al(e,0),o,hu(e,o))),typeof t=="number"?($(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),$(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),u=P(t<0?a:t,"numUpper","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=kn(Al(t,0),a,hu(t,a)));const c=q(du(0,o,1,"int32"),[-1,1]),l=du(0,a,1,"int32"),h=Oe(c,l),d=ks(xi(h,i),ua(h,Et(u))),p=Kt([o,a],r.dtype);return q(Ss(Qo(q(r,[-1,o,a])).map(f=>kn(d,f,p))),s)}const GO=K({bandPart_:UO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){let e;if(Array.isArray(n)){e=!1,$(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)$(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=rr(n,n.shape[0],0).map(s=>Ec(s,[0]));$(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(j.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=U($e(U(t[a],o)),t[a]);o=Oe(o,i)}return Ae(o,Ed(o,"euclidean"))}));return e?Ss(t,0):t}const jO=K({gramSchmidt_:HO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n,e=!1){if($(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return kv(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=Qo(q(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=kv(u,e);s.push(c),o.push(l)});const a=q(Ss(s,0),n.shape),i=q(Ss(o,0),n.shape);return[a,i]}}function kv(n,e=!1){return j.tidy(()=>{$(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Y1(t),o=Mo(n);const a=vp([[1]],[1,1]);let i=Mo(a);const u=t>=r?r:t;for(let c=0;c<u;++c){const l=o,h=i,d=s;[i,o,s]=j.tidy(()=>{const p=lt(o,[c,c],[t-c,1]),f=Ed(p),m=lt(o,[c,c],[1,1]),g=kn(or(m,0),vp([[-1]]),vp([[1]])),x=Oe(m,U(g,f)),y=Ae(p,x);y.shape[0]===1?i=Mo(a):i=Dn([a,lt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const b=Et(Ae(tt(g,x),f)),v=lt(o,[c,0],[t-c,r]),w=U(b,i),C=Ye(i);if(c===0)o=Oe(v,tt(w,tt(C,v)));else{const S=Oe(v,tt(w,tt(C,v)));o=Dn([lt(o,[0,0],[c,r]),S],0)}const I=Ye(w),k=lt(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=Oe(k,tt(tt(k,i),I));else{const S=Oe(k,tt(tt(k,i),I));s=Dn([lt(s,[0,0],[t,c]),S],1)}return[i,o,s]}),He([l,h,d])}return!e&&t>r&&(s=lt(s,[0,0],[t,r]),o=lt(o,[0,0],[r,r])),[s,o]})}const KO=K({qr_:qO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws={flipLeftRight:hO,grayscaleToRGB:pO,resizeNearestNeighbor:yw,resizeBilinear:xw,rgbToGrayscale:mO,rotateWithOffset:xO,cropAndResize:cO,nonMaxSuppression:vO,nonMaxSuppressionAsync:TO,nonMaxSuppressionWithScore:RO,nonMaxSuppressionWithScoreAsync:AO,nonMaxSuppressionPadded:FO,nonMaxSuppressionPaddedAsync:_O,threshold:zO,transform:WO},XO={bandPart:GO,gramSchmidt:jO,qr:KO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO=new Map,QO=new Map;class vi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class dr{constructor(){this.classNameMap={}}static getMap(){return dr.instance==null&&(dr.instance=new dr),dr.instance}static register(e){dr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ce(n,e,t){$(n.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),$(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return dr.register(n),YO.set(s,n),QO.set(n,s),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fo extends vi{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return He(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return sD(e,t)}dispose(){this.iterations_!=null&&He(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:nt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(fo,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vw extends fo{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=j.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=j.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:Y(()=>Qe(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:Y(()=>Qe(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;Y(()=>{const l=le(U(u,this.rho),U(dt(i),1-this.rho)),h=U(Ae(pn(le(c,this.epsilon)),pn(le(u,this.epsilon))),i),d=le(U(c,this.rho),U(dt(h),1-this.rho));u.assign(l),c.assign(d);const p=le(U(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(He(this.accumulatedGrads.map(e=>e.variable)),He(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bw extends fo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=j.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:Y(()=>Nd(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;Y(()=>{const u=le(i,dt(a));i.assign(u);const c=le(U(Ae(a,pn(le(u,j.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&He(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ww extends fo{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Y(()=>{this.accBeta1=nt(t).variable(),this.accBeta2=nt(r).variable()}),s==null&&(this.epsilon=j.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Y(()=>{const r=Oe(1,this.accBeta1),s=Oe(1,this.accBeta2);t.forEach((o,a)=>{const i=j.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Y(()=>Qe(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Y(()=>Qe(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=le(U(l,this.beta1),U(c,1-this.beta1)),p=le(U(h,this.beta2),U(dt(c),1-this.beta2)),f=Ae(d,r),m=Ae(p,s);l.assign(d),h.assign(p);const g=le(U(Ae(f,le(pn(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(U(this.accBeta1,this.beta1)),this.accBeta2.assign(U(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&He(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&He(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Y(()=>{this.accBeta1.assign(Xo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xo(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cw extends fo{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Y(()=>{this.iteration=nt(0).variable(),this.accBeta1=nt(t).variable()}),s==null&&(this.epsilon=j.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Y(()=>{const r=Oe(1,this.accBeta1),s=Ae(-this.learningRate,le(U(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=j.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Qe(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Qe(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=le(U(l,this.beta1),U(c,1-this.beta1)),p=U(h,this.beta2),f=yn(c),m=ho(p,f);l.assign(d),h.assign(m);const g=le(U(Ae(s,r),Ae(d,le(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(U(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&He(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&He(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xg extends fo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=j.registeredVariables[r];Y(()=>{const i=le(U(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=es(nt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iw extends Xg{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=nt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=j.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:Y(()=>Qe(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&Y(()=>{let u;const c=le(U(this.m,a),i);this.useNesterov?u=le(U(this.c,le(i,U(c,this.m))),o):u=le(U(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&He(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw extends fo{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=j.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=j.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:Y(()=>Qe(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:Y(()=>Qe(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:Y(()=>Qe(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;Y(()=>{const l=le(U(u,this.decay),U(dt(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=le(U(h,this.decay),U(i,1-this.decay)),p=Ae(U(i,this.learningRate),pn(Oe(l,le(dt(d),this.epsilon)))),f=le(U(c,this.momentum),p);u.assign(l),h.assign(d),c.assign(f);const m=Oe(o,f);o.assign(m)}else{const h=le(U(u,this.decay),U(dt(i),1-this.decay)),d=le(U(c,this.momentum),Ae(U(i,this.learningRate),pn(le(h,this.epsilon))));u.assign(h),c.assign(d);const p=Oe(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&He(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&He(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&He(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO=[vw,bw,ww,Cw,Iw,kw,Xg];function JO(){for(const n of ZO)ce(n)}function Yg(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(ne(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const i=n.shape,u=s.slice();u.pop();let c=1;for(let h=o;h<t;++h)c*=i[h],u.push(i[h]);const l=[...Re(n.shape).map(h=>h/c),1].slice(0,o);return[u,a,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sf=-2,e_=-1;function Qg(n,e,t){const r=n.shape.length;$(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),$(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)$(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function t_(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Zg(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function Sw(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Nw(n,e,t){return t<=n?t:t-(e-1)}function Tw(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function n_(n,e,t,r,s,o,a,i,u){const c=n.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;l=Ew(a,p,f,r,n),h=Rw(i,p,f,s,n),d=Sw(o,p,f,n)}else for(let p=0;p<c;p++)l[p]=Aw(a,r,o,n,p,u),h[p]=Dw(i,s,o,n,p,u),d[p]=$w(o,p,u);return{begin:l,end:h,strides:d}}function Ew(n,e,t,r,s){const o=[...s],a=Tw(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=Nw(e,t,i);let c=r[u];n&1<<u&&(c=0),o[i]=c}return o}function Rw(n,e,t,r,s){const o=[...s],a=Tw(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=Nw(e,t,i);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=Wo(0,o[i],s[i])}return o}function $w(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function Aw(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Wo(0,a,u-1),a}function Dw(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=Wo(0,a,u):a=Wo(-1,a,u-1),a}function Jg(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function ex(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function $d(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{$(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:($(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-r[i])),[r,o]}function tx(n,e,t,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)l&&1<<b&i&&h.numAddAxisAfterEllipsis++,1<<b&a&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};r_(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let b=0;b<n.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const v=!!(d.shrinkAxisMask&1<<b),w=n[b];if(w===-1){g.push(v?1:-1);continue}const C=[d.beginMask&1<<b,d.endMask&1<<b],I=[d.strides[b]>0?0:-1,d.strides[b]>0?w:w-1];if(v&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;const k=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(v){const R=d.begin[b]<0?w+d.begin[b]:d.begin[b];if(d.begin[b]=R,d.end[b]=d.begin[b]+1,R<0||R>=w)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Sv(d.begin[b],0,d.strides[b],w,C,I),d.end[b]=Sv(d.end[b],1,d.strides[b],w,C,I);const E=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===w;p=p&&E,f=f&&(b===0&&d.strides[b]===1||E)}else p=p&&d.strides[b]===1&&k,f=f&&(b===0&&d.strides[b]===1||k);let S,N=!1;if(d.beginValid&&d.endValid?(S=d.end[b]-d.begin[b],N=!0):v?(S=1,N=!0):k&&w>=0&&(d.strides[b]<0?S=-w:S=w,N=!0),N){let E;S===0||S<0!=d.strides[b]<0?E=0:E=Math.trunc(S/d.strides[b])+(S%d.strides[b]!==0?1:0),g.push(E)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const v=d.finalShapeGatherIndices[b];v>=0?x.push(g[v]):v===Sf&&x.push(1)}return{finalShapeSparse:x.filter((b,v)=>d.finalShapeGatherIndices[v]!==Sf),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function r_(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(Sf),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(e_),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function Sv(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const s_=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Qg,computeFlatOffset:ex,computeOutShape:Zg,getNormalizedAxes:n_,isSliceContinous:Jg,maskToAxes:t_,parseSliceParams:$d,sliceInfo:tx,startForAxis:Aw,startIndicesWithElidedDims:Ew,stopForAxis:Dw,stopIndicesWithElidedDims:Rw,stridesForAxis:$w,stridesWithElidedDims:Sw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o_{static sgd(e){return new Xg(e)}static momentum(e,t,r=!1){return new Iw(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new kw(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new ww(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new vw(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new Cw(e,t,r,s,o)}static adagrad(e,t=.1){return new bw(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=o_;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Fw(){return new Promise(n=>a_(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nx(n,e){const t=n[0].length;n.forEach((s,o)=>{$(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),$(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)$(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function ts(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Rr||(Rr={}));function Ow(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${i}`)}else r[a]=o}return r}function _w(n){const e={FIRST_DIM_SIZE:Rr.FIRST_DIM_SIZE,VALUE_ROWIDS:Rr.VALUE_ROWIDS,ROW_LENGTHS:Rr.ROW_LENGTHS,ROW_SPLITS:Rr.ROW_SPLITS,ROW_LIMITS:Rr.ROW_LIMITS,ROW_STARTS:Rr.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function Mw(n){return n.length===0?0:n[0]===Rr.FIRST_DIM_SIZE?n.length-1:n.length}function Lw(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx=30;function Ad(n){return n<=rx?n:uf(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $c(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function Ac(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function Dc(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function ox(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function ax(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dd=1.7580993408473768,Fd=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ix=.3275911,ux=.254829592,cx=-.284496736,lx=1.421413741,hx=-1.453152027,dx=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function Pw(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function Bw(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function zw(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function px(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function Vw(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function Ww(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function Uw(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bp="->",i_=/->/g,Nv=",",Tv="...";function fx(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(i_,"").length)/bp.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${bp}").`);const[r,s]=n.split(bp);$(r.indexOf(Tv)===-1,()=>`The ellipsis notation ("${Tv}") is not supported yet.`);const o=r.split(Nv),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<s.length;++d){const p=s[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let d=0;d<r.length;++d){const p=r[d];i.indexOf(p)===-1&&p!==Nv&&i.push(p)}const u=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<o[d].length;++p)u[d].push(i.indexOf(o[d][p]))}const c=i.length,l=s.length,h=[];for(let d=l;d<c;++d)h.push(d);return{allDims:i,summedDims:h,idDims:u}}function mx(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function gx(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:$(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function xx(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],u=u_(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:t,steps:r}}function yx(n){return n.every((e,t)=>e===t)}function u_(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function vx(n,e,t=0){let r=[];if(typeof e=="number")$(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);$(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=n.shape[t]-a}$(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Hw(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function jw(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qw(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Kw(n,e){return`size ${n} must be non-negative, not ${e}`}function Xw(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Yw(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function Qw(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(){return"segment ids must be >= 0"}function Zw(){return"segment ids are not increasing"}function Jw(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function eC(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n,e){let t=!1,r;for(n<=rx?(r=n,t=!0):r=uf(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=uf(n,r+1);return r}function nC(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function bx(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],i=[];let u=1,c=1,l=1;for(let h=0;h<r;++h)i.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<t;h++)i.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<s;h++)i.push(e.shape[h]);for(let h=t+1;h<o;h++)i.push(n.shape[h]),l*=n.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const c_=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:bx,computeOutShape:nC,segOpComputeOptimalWindowSize:tC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(n){try{return n.map(e=>Js(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function rC(n){return n.map(e=>qs(e))}const l_=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:ux,ERF_A2:cx,ERF_A3:lx,ERF_A4:hx,ERF_A5:dx,ERF_P:ix,PARALLELIZE_THRESHOLD:rx,get RowPartitionType(){return Rr},SELU_SCALE:Fd,SELU_SCALEALPHA:Dd,applyActivation:Ug,assertAndGetBroadcastShape:Be,assertAxesAreInnerMostDims:an,assertParamsConsistent:nx,assignToTypedArray:Vw,axesAreInnerMostDims:bg,calculateShapes:ha,checkEinsumDimSizes:gx,checkPadOnDimRoundingMode:Mn,combineLocations:K1,combineRaggedTensorToTensorShapes:Ow,complexWithEvenIndex:Bw,complexWithOddIndex:zw,computeConv2DInfo:on,computeConv3DInfo:co,computeDefaultPad:fg,computeDilation2DInfo:Sc,computeOptimalWindowSize:Ad,computeOutAndReduceShapes:Zt,computeOutShape:ts,computePool2DInfo:Cr,computePool3DInfo:Fs,convertConv2DDataFormat:Os,decodeEinsumEquation:fx,eitherStridesOrDilationsAreOne:fn,expandShapeToKeepDim:Mt,exponent:Uw,exponents:Ww,fromStringArrayToUint8:rC,fromUint8ToStringArray:Ts,getAxesPermutation:bt,getBroadcastDims:ti,getComplexWithIndex:px,getEinsumComputePath:xx,getEinsumPermutation:mx,getFusedBiasGradient:Wg,getFusedDyActivation:Vg,getImageCenter:sx,getInnerMostAxes:At,getPermuted:Ac,getRaggedRank:Mw,getReductionAxes:Wt,getReshaped:$c,getReshapedPermuted:Dc,getRowPartitionTypesHelper:_w,getSliceBeginCoords:ox,getSliceSize:ax,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Gw,getSparseFillEmptyRowsNegativeIndexErrorMessage:Hw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:jw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Xw,getSparseReshapeInputOutputMismatchErrorMessage:Qw,getSparseReshapeInputOutputMultipleErrorMessage:Yw,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:qw,getSparseReshapeNegativeOutputDimErrorMessage:Kw,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:eC,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Nf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Zw,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Jw,getUndoAxesPermutation:lo,isIdentityPermutation:yx,log:HE,mergeRealAndImagArrays:Ns,prepareAndValidate:Yg,prepareSplitSize:vx,segment_util:c_,shouldFuse:Gg,slice_util:s_,splitRealAndImagArrays:Pw,stridesOrDilationsArePositive:qo,tupleValuesAreOne:jo,upcastType:Gn,validateDefaultValueShape:Lw,validateInput:VF,validateUpdateShape:pw,warn:Zn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */JO();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC={kernelName:wh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,Rc(ye(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_={kernelName:$u,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=dt(ye(t,"float32")),s=pn(Oe(nt(1),r));return Et(Ae(n,s))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_={kernelName:Au,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=pn(Oe(dt(ye(t,"float32")),1));return Ae(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_={kernelName:fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{let i=n;const u=Wt(t.shape,s);return u.length>0&&(i=$e(i,u)),q(i,t.shape)},b:()=>{let i=n;const u=Wt(r.shape,s);return u.length>0&&(i=$e(i,u)),q(i,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f_={kernelName:km,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((r,s)=>{t[s]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_={kernelName:Ch,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Qe(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_={kernelName:Ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Qe(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x_={kernelName:Du,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,pn(Oe(nt(1),dt(ye(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=pn(le(nt(1),dt(ye(t,"float32"))));return Ae(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_={kernelName:Mu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{const i=le(dt(t),dt(r));let u=U(n,Ae(r,i));const c=Wt(t.shape,s);return c.length>0&&(u=$e(u,c)),q(u,t.shape)},b:()=>{const i=le(dt(t),dt(r));let u=Et(U(n,Ae(t,i)));const c=Wt(r.shape,s);return c.length>0&&(u=$e(u,c)),q(u,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b_={kernelName:Ou,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,le(dt(ye(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_={kernelName:_u,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,Oe(nt(1),dt(ye(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n,e,t,r,s,o){const a=P(n,"dy","avgPool3dGrad"),i=P(e,"input","avgPool3dGrad");let u=a,c=i,l=!1;i.rank===4&&(l=!0,u=q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Mn("avgPool3dGrad",s,o);const h={dy:u,input:c},d={filterSize:t,strides:r,pad:s,dimRoundingMode:o},p=j.runKernel(Em,h,d);return l?q(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const I_=K({avgPool3dGrad_:C_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_={kernelName:Sh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:o,pad:a,dimRoundingMode:i}=t;return{x:()=>I_(n,r,s,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e,t,r,s){const o=P(n,"dy","avgPoolGrad"),a=P(e,"input","avgPoolGrad");$(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,u=o,c=!1;a.rank===3&&(c=!0,i=q(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=q(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),$(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:u,input:i},h={filterSize:t,strides:r,pad:s},d=j.runKernel(Tm,l,h);return c?q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const N_=K({avgPoolGrad_:S_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_={kernelName:kh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:o,pad:a}=t;return{x:()=>N_(n,r,s,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_={kernelName:Nh,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[r,s]=e,{transposeA:o,transposeB:a}=t;return!o&&!a?{a:()=>tt(n,s,!1,!0),b:()=>tt(r,n,!0,!1)}:!o&&a?{a:()=>tt(n,s,!1,!1),b:()=>tt(n,r,!0,!1)}:o&&!a?{a:()=>tt(s,n,!1,!0),b:()=>tt(r,n,!1,!1)}:{a:()=>tt(s,n,!0,!0),b:()=>tt(n,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_={kernelName:Th,gradFunc:(n,e,t)=>{const{blockShape:r,crops:s}=t;return{x:()=>Eg(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $_={kernelName:VE,gradFunc:(n,e,t)=>{const r=t,s=r.inputShape,o=r.shape,a=Array.from(o);for(let u=s.length-1;u>=0;u--)if(s[u]===o[u])a[u]=1;else if(s[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${o}].`);const i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>$e(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_={kernelName:Lu,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_={kernelName:Pu,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_={kernelName:Bu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{clipValueMin:s,clipValueMax:o}=t;return{x:()=>kn(ks(ua(r,s),xi(r,o)),n,Qe(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_={kernelName:Eh,inputsToSave:["x"],gradFunc:sC.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __={kernelName:Rh,saveAllInputs:!0,gradFunc:(n,e,t)=>{const r=e.map(u=>u.shape),{axis:s}=t,o=Ue(s,e[0].shape)[0],a=r.map(u=>u[o]);return rr(n,a,o).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_={kernelName:$h,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{dilations:o,strides:a,pad:i,dataFormat:u}=t;return $(jo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>xg(r.shape,n,s,a,i,u),filter:()=>zg(r,n,s.shape,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_={kernelName:Ah,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>Ko(n,s,o,a,i,1,u),filter:()=>zg(n,r,s.shape,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e,t,r,s){let o=n;n.rank===4&&(o=q(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=q(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),$(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),$(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),$(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),$(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),$(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:o,dy:a},u={strides:r,pad:s,filterShape:t};return j.runKernel(Fm,i,u)}const B_=K({conv3DBackpropFilter_:P_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_={kernelName:Dh,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:o}=t;$(jo(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,i]=e;return{x:()=>G1(a.shape,n,i,s,o),filter:()=>B_(a,n,i.shape,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={kernelName:zu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(Et(cw(ye(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(lw(ye(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={kernelName:Fh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s,exclusive:o,reverse:a}=t;return{x:()=>{const i=bt([s],r.rank);let u=j1(n,s,o,!a);return i!=null&&(u=Ye(u,i)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={kernelName:Oh,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:o,dimRoundingMode:a}=t,i=r??[1,1];$(jo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,c]=e;return $(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),$(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),$(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),$(fn(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),Mn("depthwiseConv2d",o,a),{x:()=>aO(u.shape,n,c,s,o,i,a),filter:()=>sO(u,n,c.shape,s,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_={kernelName:_h,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,o={x:r,filter:s,dy:n},a={x:r,filter:s,dy:n};return{x:()=>j.runKernel(cf,o,t),filter:()=>j.runKernel(lf,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_={kernelName:Uu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,r={dy:n,y:t};return{x:()=>j.runKernel(Wm,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_={kernelName:Gu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=U(os(Et(dt(t))),2/Math.sqrt(Math.PI));return{x:()=>U(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K_={kernelName:Hu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_={kernelName:Lh,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>q(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y_={kernelName:ju,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,os(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_={kernelName:qu,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{const i=Ae(n,ye(r,"float32")),u=Wt(t.shape,s);return u.length>0?q($e(i,u),t.shape):i},b:()=>{let i=U(n,ye(t,"float32"));const u=Wt(r.shape,s);u.length>0&&(i=q($e(i,u),r.shape));const c=dt(r);return Et(Ae(i,ye(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_={kernelName:Ph,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:r}=t,[s,o,a,i]=e,u=i??nt(1),c=Wt(o.shape,s.shape),l=[];if(o.rank===1){for(let v=0;v<s.shape.length-1;++v)l.push(s.shape[v]);l.push(1)}const h=Oe(s,o),d=U(n,u),p=aw(le(a,nt(r))),f=U(U(U(p,p),p),nt(-.5));return{x:()=>o.rank===1?q(U(U(n,Dr(q(p,[1,1,1,o.shape[0]]),l)),u),s.shape):q(U(U(n,p),u),s.shape),mean:()=>{let v=U(U(p,nt(-1)),d);return o.rank===1&&(v=$e(v,c)),q(v,o.shape)},variance:()=>{let v=U(U(f,h),d);return o.rank===1&&(v=$e(v,c)),q(v,o.shape)},scale:()=>{const v=U(h,p);let w=U(n,v);return o.rank===1&&(w=$e(w,c)),q(w,o.shape)},offset:()=>{let v=n;return o.rank===1&&(v=$e(v,c)),q(v,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM={kernelName:Bh,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[r,s]=e,{axis:o,batchDims:a}=t,i=Ue(o,r.shape)[0],u=(c,l,h)=>()=>{const d=c.shape,p=l.size,f=d.slice(0,i),m=f.length,g=d.slice(o,d.length).slice(1),x=g.length,y=Ev(0,m),b=Ev(m+1,m+1+x),v=Rv([f,[p],g]),w=q(h,v),C=q(l,[p]),I=Rv([[m],y,b]),k=Ye(w,I);let S=mw(k,C,c.shape[i]);const N=lo(I);return S=Ye(S,N),S};if(a===1){const c=r.shape[0],l=r.split(c,0);return{x:()=>Ss(l.map((p,f)=>u(p,s.slice(f,1),n.slice(f,1))())).reshape(r.shape),indices:()=>s}}else return{x:u(r,s,n),indices:()=>s}}};function Ev(n,e){const t=[];for(let r=n;r<e;++r)t.push(r);return t}function Rv(n){const e=[];for(let t=0;t<n.length;++t)for(let r=0;r<n[t].length;++r)e.push(n[t][r]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM={kernelName:Xu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>Qe(t),b:()=>Qe(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM={kernelName:Yu,gradFunc:n=>({x:()=>ye(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM={kernelName:Qu,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM={kernelName:Zu,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM={kernelName:Ju,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM={kernelName:Vh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{alpha:s}=t,o=or(r,0);return{x:()=>kn(o,n,U(n,s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM={kernelName:tc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,le(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM={kernelName:ec,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,ye(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM={kernelName:UE,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;return{logits:()=>{const a=os(r);return Oe(n,U($e(n,s,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,e,t,r=5,s=1,o=1,a=.5){const i={x:n,y:e,dy:t},u={depthRadius:r,bias:s,alpha:o,beta:a};return j.runKernel(Km,i,u)}const hM=K({localResponseNormalizationBackprop_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM={kernelName:qh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{depthRadius:o,bias:a,alpha:i,beta:u}=t;return{x:()=>hM(r,s,n,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t,r){return e.rank<t.rank&&(e=q(e,Mt(e.shape,r))),n.rank<t.rank&&(n=q(n,Mt(n.shape,r))),{x:()=>U(n,ye(ss(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $v={kernelName:Kh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{reductionIndices:s}=r,o=e[0],a=e[1],i=Ue(s,o.shape),u=oC(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM={kernelName:nc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>U(n,ye(ua(t,r),"float32")),b:()=>U(n,ye(Al(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,e,t,r,s,o,a){const i=P(n,"dy","maxPool3dGrad"),u=P(e,"input","maxPool3dGrad"),c=P(t,"output","maxPool3dGrad");let l=i,h=u,d=c,p=!1;u.rank===4&&(p=!0,l=q(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=q(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Mn("maxPool3dGrad",o,a);const f={dy:l,input:h,output:d},m={filterSize:r,strides:s,pad:o,dimRoundingMode:a},g=j.runKernel(Ym,f,m);return p?q(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const mM=K({maxPool3dGrad_:fM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM={kernelName:Yh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>mM(n,r,s,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n,e,t,r,s,o,a){const i=P(n,"dy","maxPoolGrad"),u=P(e,"input","maxPoolGrad"),c=P(t,"output","maxPoolGrad");$(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),$(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),$(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Mn("maxPoolGrad",o,a);const l={dy:i,input:u,output:c},h={filterSize:r,strides:s,pad:o,dimRoundingMode:a};return j.runKernel(Xm,l,h)}const yM=K({maxPoolGrad_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM={kernelName:Xh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i}=t;return{x:()=>yM(n,r,s,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM={kernelName:Qh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t,o=Ue(s,r.shape),i=Zt(r.shape,o)[1],u=ne(i);return{x:()=>{const l=r.shape.slice();o.forEach(p=>{l[p]=1});const h=q(n,l);return Ae(U(h,po(r.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM={kernelName:Zh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{axis:s}=r,[o,a]=e,i=Ue(s,o.shape),u=oC(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM={kernelName:rc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>U(n,ye(xi(t,r),"float32")),b:()=>U(n,ye(or(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM={kernelName:Jh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,o=s.map(a=>a[0]);return{x:()=>lt(n,o,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM={kernelName:sc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{const i=Wt(t.shape,s);return i.length>0?q($e(n,i),t.shape):n},b:()=>{const i=U(n,Et(Rd(Ae(t,r)))),u=Wt(r.shape,s);return u.length>0?q($e(i,u),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM={kernelName:oc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{const i=U(n,ye(r,"float32")),u=Wt(t.shape,s);return u.length>0?q($e(i,u),t.shape):i},b:()=>{const i=U(n,ye(t,"float32")),u=Wt(r.shape,s);return u.length>0?q($e(i,u),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM={kernelName:ed,gradFunc:n=>({x:()=>Et(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM={kernelName:rd,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Kt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EM={kernelName:nd,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RM={kernelName:sd,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:r}=t;return Qo(n,r).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Av={kernelName:od,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,o=s.map(a=>a[0]);return{x:()=>lt(n,o,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M={kernelName:ac,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,r,s]=e,o=t,a=r,i=Be(o.shape,a.shape);return{a:()=>{const l=ye(a,"float32");let h=U(n,U(l,Xo(o,Oe(l,nt(1)))));const d=Wt(o.shape,i);return d.length>0&&(h=$e(h,d)),q(h,o.shape)},b:()=>{const l=or(o,0),h=kn(l,as(o),Qe(o));let d=U(n,U(s,h));const p=Wt(a.shape,i);return p.length>0&&(d=$e(d,p)),q(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM={kernelName:ad,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,r]=e,s=or(t,0);return{x:()=>kn(s,n,U(n,r)),alpha:()=>{let o=kn(s,Qe(n),U(n,t));const a=Wt(r.shape,n.shape);return a.length>0&&(o=$e(o,a)),q(o,r.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e,t){const r=n.shape.slice();r[t]=1;const s=q(e,r),o=If(n,t,!0,!1),a=If(n,t,!0,!0),i=U(o,a);return U(s,i)}function FM(n,e,t){const r=n.shape.length,s=r-t.length,o=bt(t,r);let a=n;o!=null&&(a=Ye(n,o));const i=a.shape.slice(),c=i.splice(r-t.length,t.length).reduce((d,p)=>d*p,1);i.push(c);const l=a.reshape(i);let h=DM(l,e,s);if(h=h.reshape(a.shape),o!=null){const d=lo(o);h=Ye(h,d)}return h}const OM={kernelName:id,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;let o=[];return s==null?o=r.shape.map((a,i)=>i):typeof s=="number"?o=[s]:o=s,{x:()=>FM(r,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M={kernelName:Wu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{const i=Ae(n,ye(r,"float32")),u=Wt(t.shape,s);return u.length>0?q($e(i,u),t.shape):i},b:()=>{let i=U(n,ye(t,"float32"));const u=Wt(r.shape,s);u.length>0&&(i=q($e(i,u),r.shape));const c=dt(r);return Et(Ae(i,ye(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM={kernelName:ic,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,Et(dt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM={kernelName:cc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=U(xi(t,6),Rc(t));return{x:()=>U(n,ye(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM={kernelName:uc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,ye(Rc(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BM={kernelName:ud,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>q(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zM={kernelName:ld,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>j.runKernel(rg,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM={kernelName:cd,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>j.runKernel(ng,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM={kernelName:hd,gradFunc:(n,e,t)=>{const{dims:r}=t,s=Ue(r,n.shape);return{x:()=>Yo(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM={kernelName:lc,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM={kernelName:hc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Et(Ae(n,U(Xo(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM={kernelName:dd,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>ye(Qe(t),"float32"),t:()=>U(n,ye(t,n.dtype)),e:()=>U(n,ye(kg(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM={kernelName:dc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=or(t,nt(0)),s=nt(Dd),o=nt(Fd),a=U(n,o),i=U(U(n,s),os(ye(t,"float32")));return kn(r,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM={kernelName:gc,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,U(t,Oe(nt(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KM={kernelName:mc,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM={kernelName:pc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(yg(ye(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM={kernelName:fc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(H1(ye(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QM={kernelName:pd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{begin:s,size:o}=t,a=r.shape,[i,u]=$d(r,s,o),c=[];for(let l=0;l<n.rank;l++)c.push([i[l],a[l]-i[l]-u[l]]);return{x:()=>Tg(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM={kernelName:xd,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{dim:s}=t,o=!0,a=U(n,r);return{logits:()=>Oe(a,U($e(a,[s],o),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JM={kernelName:xc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,gi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv={kernelName:md,gradFunc:(n,e,t)=>{const{blockShape:r,paddings:s}=t;return{x:()=>gg(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fv={kernelName:gd,gradFunc:(n,e,t)=>{const{axis:r}=t;return{x:()=>Dn(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e3={kernelName:yc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,U(pn(ye(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t3={kernelName:sg,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(n,U(ye(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n3={kernelName:vc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=nt(2);return{a:()=>U(n,U(s,Oe(t,r))),b:()=>U(n,U(s,Oe(r,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r3={kernelName:kc,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s3={kernelName:bc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Be(t.shape,r.shape);return{a:()=>{let i=n;const u=Wt(t.shape,s);return u.length>0&&(i=$e(i,u)),q(i,t.shape)},b:()=>{let i=n;const u=Wt(r.shape,s);return u.length>0&&(i=$e(i,u)),q(Et(i),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3={kernelName:fd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,s=r.shape.slice(),{axis:o}=t;Ue(o,r.shape).forEach(c=>{s[c]=1});const i=q(n,s),u=U(i,po(r.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a3={kernelName:wc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,dt(yg(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3={kernelName:Cc,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>U(Oe(nt(1),dt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3={kernelName:Ic,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{reps:s}=t;return{x:()=>{let a=Qe(r);if(r.rank===1)for(let i=0;i<s[0];++i)a=le(a,lt(n,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)a=le(a,lt(n,[i*r.shape[0],u*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)for(let c=0;c<s[2];++c)a=le(a,lt(n,[i*r.shape[0],u*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)for(let c=0;c<s[2];++c)for(let l=0;l<s[3];++l)a=le(a,lt(n,[i*r.shape[0],u*r.shape[1],c*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3={kernelName:Va,gradFunc:(n,e,t)=>{const r=t,{perm:s}=r,o=lo(s);return{x:()=>Ye(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l3={kernelName:yd,gradFunc:(n,e,t)=>{const r=t,{axis:s}=r;return{value:()=>Ss(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h3={kernelName:vd,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>d3(n,t)}}};function d3(n,e){const t=ho(e,Qe(e)),r=wg(n,t);let s=ua(e,nt(0,"int32"));const o=r.rank-s.rank;for(let i=0;i<o;++i)s=Rn(s,i+1);s=ks(s,po(r.shape,"bool"));const a=Qe(r);return kn(s,r,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p3={kernelName:bd,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=[sC,h_,d_,p_,f_,m_,g_,x_,y_,v_,b_,w_,k_,T_,E_,R_,$_,A_,D_,F_,O_,__,L_,M_,z_,V_,W_,U_,G_,H_,_M,j_,q_,K_,X_,Y_,Z_,Q_,J_,eM,tM,nM,rM,sM,oM,aM,iM,uM,cM,dM,$v,$v,pM,gM,vM,bM,wM,CM,IM,kM,SM,NM,TM,EM,RM,Av,Av,$M,AM,OM,MM,LM,PM,BM,zM,VM,WM,UM,GM,HM,jM,qM,KM,XM,YM,QM,ZM,JM,Dv,Dv,Fv,Fv,e3,n3,t3,r3,s3,o3,a3,i3,u3,c3,l3,h3,p3];for(const n of f3)jE(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.abs=function(){return this.throwIfDisposed(),yn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.acos=function(){return this.throwIfDisposed(),YR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.acosh=function(){return this.throwIfDisposed(),ZR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.add=function(n){return this.throwIfDisposed(),le(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.all=function(n,e){return this.throwIfDisposed(),V1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.any=function(n,e){return this.throwIfDisposed(),wf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.argMax=function(n){return this.throwIfDisposed(),uu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.argMin=function(n){return this.throwIfDisposed(),r$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asType=function(n){return this.throwIfDisposed(),ye(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as1D=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as2D=function(n,e){return this.throwIfDisposed(),q(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),q(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as4D=function(n,e,t,r){return this.throwIfDisposed(),q(this,[n,e,t,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as5D=function(n,e,t,r,s){return this.throwIfDisposed(),q(this,[n,e,t,r,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asin=function(){return this.throwIfDisposed(),o$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asinh=function(){return this.throwIfDisposed(),i$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atan=function(){return this.throwIfDisposed(),c$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atan2=function(n){return this.throwIfDisposed(),h$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atanh=function(){return this.throwIfDisposed(),p$(this)};te().prototype.avgPool=function(n,e,t,r){return this.throwIfDisposed(),mg(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),gg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.batchNorm=function(n,e,t,r,s){return this.throwIfDisposed(),Sd(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.broadcastTo=function(n){return this.throwIfDisposed(),nu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cast=function(n){return this.throwIfDisposed(),ye(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.ceil=function(){return this.throwIfDisposed(),z$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),sr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Lt&&(n=[n]),Dn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv1d=function(n,e,t,r,s,o){return this.throwIfDisposed(),W1(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv2dTranspose=function(n,e,t,r,s){return this.throwIfDisposed(),U1(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),Ko(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cos=function(){return this.throwIfDisposed(),yg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cosh=function(){return this.throwIfDisposed(),H1(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),If(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),j1(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),hA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.depthwiseConv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),vg(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.dilation2d=function(n,e,t,r,s){return this.throwIfDisposed(),fA(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.divNoNan=function(n){return this.throwIfDisposed(),vA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.div=function(n){return this.throwIfDisposed(),Ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.dot=function(n){return this.throwIfDisposed(),wA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.elu=function(){return this.throwIfDisposed(),Td(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.equal=function(n){return this.throwIfDisposed(),ss(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.erf=function(){return this.throwIfDisposed(),q1(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),FA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.exp=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.expandDims=function(n){return this.throwIfDisposed(),Rn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.expm1=function(){return this.throwIfDisposed(),LA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.fft=function(){return this.throwIfDisposed(),dw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.flatten=function(){return this.throwIfDisposed(),q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.floor=function(){return this.throwIfDisposed(),Rd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.floorDiv=function(n){return this.throwIfDisposed(),z1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.gather=function(n,e,t){return this.throwIfDisposed(),wg(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ua(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.greater=function(n){return this.throwIfDisposed(),or(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.ifft=function(){return this.throwIfDisposed(),kf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.irfft=function(){return this.throwIfDisposed(),EF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isFinite=function(){return this.throwIfDisposed(),jA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isInf=function(){return this.throwIfDisposed(),KA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isNaN=function(){return this.throwIfDisposed(),YA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Ig(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.lessEqual=function(n){return this.throwIfDisposed(),xi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.less=function(n){return this.throwIfDisposed(),Al(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.localResponseNormalization=function(n,e,t,r){return this.throwIfDisposed(),tD(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSigmoid=function(){return this.throwIfDisposed(),uD(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Z1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),J1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.log=function(){return this.throwIfDisposed(),as(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.log1p=function(){return this.throwIfDisposed(),Q1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalNot=function(){return this.throwIfDisposed(),kg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalOr=function(n){return this.throwIfDisposed(),ew(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalXor=function(n){return this.throwIfDisposed(),gD(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),tt(this,n,e,t)};te().prototype.maxPool=function(n,e,t,r){return this.throwIfDisposed(),Sg(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.max=function(n,e){return this.throwIfDisposed(),Or(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.maximum=function(n){return this.throwIfDisposed(),ho(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mean=function(n,e){return this.throwIfDisposed(),_t(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.min=function(n,e){return this.throwIfDisposed(),$l(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.minimum=function(n){return this.throwIfDisposed(),hu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),kD(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mod=function(n){return this.throwIfDisposed(),ND(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mul=function(n){return this.throwIfDisposed(),U(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.neg=function(){return this.throwIfDisposed(),Et(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Ed(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.notEqual=function(n){return this.throwIfDisposed(),Dl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),tw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.onesLike=function(){return this.throwIfDisposed(),br(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.pad=function(n,e){return this.throwIfDisposed(),Tg(this,n,e)};te().prototype.pool=function(n,e,t,r,s,o){return this.throwIfDisposed(),MD(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.pow=function(n){return this.throwIfDisposed(),Xo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.prelu=function(n){return this.throwIfDisposed(),Rg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.prod=function(n,e){return this.throwIfDisposed(),BD(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reciprocal=function(){return this.throwIfDisposed(),uF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.relu=function(){return this.throwIfDisposed(),la(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.relu6=function(){return this.throwIfDisposed(),sw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reshapeAs=function(n){return this.throwIfDisposed(),q(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reshape=function(n){return this.throwIfDisposed(),q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),xw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),yw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reverse=function(n){return this.throwIfDisposed(),Yo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.rfft=function(){return this.throwIfDisposed(),AF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.round=function(){return this.throwIfDisposed(),ow(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.rsqrt=function(){return this.throwIfDisposed(),aw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.selu=function(){return this.throwIfDisposed(),iw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.separableConv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),uw(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sigmoid=function(){return this.throwIfDisposed(),gi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sign=function(){return this.throwIfDisposed(),xF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sin=function(){return this.throwIfDisposed(),cw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sinh=function(){return this.throwIfDisposed(),lw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.slice=function(n,e){return this.throwIfDisposed(),lt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.softmax=function(n){return this.throwIfDisposed(),Bg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.softplus=function(){return this.throwIfDisposed(),Nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Eg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.split=function(n,e){return this.throwIfDisposed(),rr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sqrt=function(){return this.throwIfDisposed(),pn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.square=function(){return this.throwIfDisposed(),dt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.squaredDifference=function(n){return this.throwIfDisposed(),FF(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.squeeze=function(n){return this.throwIfDisposed(),Ec(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Lt?[this,n]:[this,...n];return Ss(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.step=function(n){return this.throwIfDisposed(),Rc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.stridedSlice=function(n,e,t,r,s,o,a,i){return this.throwIfDisposed(),PF(this,n,e,t,r,s,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sub=function(n){return this.throwIfDisposed(),Oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sum=function(n,e){return this.throwIfDisposed(),$e(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tan=function(){return this.throwIfDisposed(),zF(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tanh=function(){return this.throwIfDisposed(),kd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tile=function(n){return this.throwIfDisposed(),Dr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toBool=function(){return this.throwIfDisposed(),ye(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toFloat=function(){return this.throwIfDisposed(),ye(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toInt=function(){return this.throwIfDisposed(),ye(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.topk=function(n,e){return this.throwIfDisposed(),UF(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.transpose=function(n){return this.throwIfDisposed(),Ye(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unique=function(n){return this.throwIfDisposed(),jF(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),mw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unstack=function(n){return this.throwIfDisposed(),Qo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.where=function(n,e){return this.throwIfDisposed(),kn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.zerosLike=function(){return this.throwIfDisposed(),Qe(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qr.prototype)}}class gr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gr.prototype)}}class W extends Error{constructor(e){super(e),Object.setPrototypeOf(this,W.prototype)}}class ze extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ze.prototype)}}class wx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wx.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aC{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zo(n,e){if(Array.isArray(n)){let t=[];for(let r=0;r<e;r++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Kr(n,e){if(!n)throw new wx(e)}function Ov(n,e){let t=0;for(const r of n)r===e&&t++;return t}function $n(n){return n.length===1?n[0]:n}function ot(n){return Array.isArray(n)?n:[n]}function gs(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ro(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ur={};function Cx(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Tf(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Tf(e));else{const e=Object.keys(n);for(const t of e){const r=n[t];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?n[t]=r.value:Tf(r))}}}function Fc(n,e={},t={},r="object",s=!1){if(typeof n=="string"){const o=n;let a;if(o in t)a=t[o];else if(o in ur)a=ur[o];else if(a=e[o],a==null)throw new W(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new W(`${r}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,u;if(a in t?[i,u]=t[a]:a in ur?[i,u]=ur.className:a in e&&([i,u]=e[a]),i==null)throw new W(`Unknown ${r}: ${a}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const c={};for(const p of Object.keys(ur))c[p]=ur[p];for(const p of Object.keys(t))c[p]=t[p];const l=o.config;l.customObjects=c;const h=Object.assign({},ur);for(const p of Object.keys(t))ur[p]=t[p];Tf(o.config);const d=u(i,o.config,t,s);return ur=Object.assign({},h),d}else{const c=Object.assign({},ur);for(const h of Object.keys(t))ur[h]=t[h];const l=new i(o.config);return ur=Object.assign({},c),l}}}function m3(n,e){return n<e?-1:n>e?1:0}function Jc(n,e){return-1*m3(n,e)}function Ks(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function g3(n){if(n==null)throw new W(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function da(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new W(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Ix(n,e,t=0,r=1/0){return Kr(t>=0),Kr(r>=t),Array.isArray(n)&&n.length>=t&&n.length<=r&&n.every(s=>typeof s===e)}function Yt(n,e){Array.isArray(n)?($(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,r)=>Yt(t,`element ${r+1} of ${e}`))):$(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${iC(n)}.`)}function iC(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>iC(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function x3(n,e,t){let r=t!=null?t():En(),s;return(...a)=>{const i=t!=null?t():En();return i-r<e||(r=i,s=n(...a)),s}}function uC(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let y3=0;function cC(){return y3++}const el={};function Od(n=""){return n in el||(el[n]=0),el[n]+=1,n+el[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const v3=["channelsFirst","channelsLast"],b3=["nearest","bilinear"],w3=["valid","same","causal"],C3=["max","avg"],I3=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Sa=new Map;function Dt(n){da(v3,"DataFormat",n)}function k3(n){da(b3,"InterpolationFormat",n)}function ar(n){da(w3,"PaddingMode",n)}function lC(n){da(C3,"PoolMode",n)}const ru=[],_v="/";function Lo(n,e){ru.push(n);try{const t=e();return ru.pop(),t}catch(t){throw ru.pop(),t}}function S3(){return ru.length===0?"":ru.join(_v)+_v}function hC(n){if(!pC(n))throw new Error("Not a valid tensor name: '"+n+"'");return S3()+n}function dC(n){if(!pC(n))throw new Error("Not a valid tensor name: '"+n+"'");Sa.has(n)||Sa.set(n,0);const e=Sa.get(n);if(Sa.set(n,Sa.get(n)+1),e>0){const t=`${n}_${e}`;return Sa.set(t,1),t}else return n}const N3=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function pC(n){return!!n.match(N3)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T3(n){return n===parseInt(n.toString(),10)}function Xs(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let r=1;for(let s=e;s<t;++s)r*=n[s];return r}function ri(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r<e&&(e=r)}return e}function eo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r>e&&(e=r)}return e}function Lr(n,e){if(e<n)throw new W(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let r=n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let wp;function Pt(){return wp==null&&(wp=bR().epsilon()),wp}function Pr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ns(n,e){return ye(n,e)}function Oc(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),q(n,t)}function E3(n,e){return Y(()=>{if(n.shape.length!==2)throw new W(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Oc(n,1);return Ef(t,[1,e,1])})}function R3(n){const e=[Xs(n.shape)];return q(n,e)}function $3(n){if(n.rank<=1)throw new W(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Xs(n.shape,1)];return q(n,e)}function Po(n,e,t){return Y(()=>{switch(n.rank){case 1:return Lg(n,e,t);case 2:return hw(n,[e,0],[t,n.shape[1]]);case 3:return Pg(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Ol(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return lt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return lt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new W(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Cp(n,e,t){return Y(()=>{switch(n.rank){case 1:return Lg(n,e,t);case 2:return hw(n,[0,e],[n.shape[0],t]);case 3:return Pg(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Ol(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function tl(n,e,t,r){return Y(()=>{switch(n.rank){case 1:return Lg(n,e,t);case 2:switch(r){case 1:return Po(n,e,t);case 2:return Cp(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Po(n,e,t);case 2:return Pg(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Cp(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Po(n,e,t);case 2:return Ol(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Ol(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Cp(n,e,t);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function kx(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Dn(n,e)}function Mv(n,e){switch(n.rank){case 1:return U$([n,e]);case 2:return H$([n,e],0);case 3:return q$([n,e],0);case 4:return X$([n,e],0);default:throw new W(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Ef(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new W(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Dr(n,e)}function _d(n,e=0,t=1,r,s){return sF(n,e,t,r,s)}function rs(n,e,t,r){if(n.rank<2||e.rank<2)throw new ze(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const s=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(s!==o)throw new ze(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return Cv({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?Rf(n.rank,r,Pr()):null,activation:t});{const s=n.shape.slice(),o=s.pop();n=q(n,[-1,o]);const a=e.shape.slice(),i=a.pop(),u=a.pop(),c=[...a,i],l=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=q(Ye(e,l),[u,-1]);const h=[...s,...c];return q(Cv({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?Rf(n.rank,r,Pr()):null,activation:t}),h)}}function fC(n,e,t){return Y(()=>(Array.isArray(e)?e=Vn(e,"int32"):e=ye(e,"int32"),wg(n,e,t)))}function _c(n){return U(n,n)}function Rf(n,e,t){const r=e.shape;if(e.rank!==1&&e.rank!==n)throw new W(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return r.length===1?q(e,[1,r[0],1,1,1]):q(e,[1,r[3],r[0],r[1],r[2]]);if(t==="channelsLast")return r.length===1?q(e,[1,1,1,1,r[0]]):q(e,[1].concat(r))}else if(n===4){if(t==="channelsFirst")return r.length===1?q(e,[1,r[0],1,1]):q(e,[1,r[2],r[0],r[1]]);if(t==="channelsLast")return r.length===1?q(e,[1,1,1,r[0]]):q(e,[1].concat(r))}else if(n===3){if(t==="channelsFirst")return r.length===1?q(e,[1,r[0],1]):q(e,[1,r[1],r[0]]);if(t==="channelsLast")return r.length===1?q(e,[1,1,r[0]]):q(e,[1].concat(r))}else if(n<3)return e;throw new W(`Unsupported input rank by biasAdd: ${e.rank}`)}function Vr(n,e,t){return Y(()=>(t==null&&(t=Pr()),Dt(t),le(n,Rf(n.rank,e,t))))}function A3(n,e=1){if(e!==1)throw new ze(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Td(n)}function D3(n){return Y(()=>Ae(n,le(yn(n),1)))}function mC(n,e,t,r){return Y(()=>JF(n,e,t,r))}function F3(n){return Y(()=>{const e=le(.5,U(.2,n));return sr(e,0,1)})}function Mc(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const O3=["fanIn","fanOut","fanAvg"],_3=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function M3(n){da(O3,"FanMode",n)}function L3(n){da(_3,"Distribution",n)}class Ir extends vi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class gC extends Ir{apply(e,t){return Kt(e,t)}}gC.className="Zeros";ce(gC);class Sx extends Ir{apply(e,t){return po(e,t)}}Sx.className="Ones";ce(Sx);class xC extends Ir{constructor(e){if(super(),typeof e!="object")throw new W(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new W(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Y(()=>U(nt(this.value),po(e,t)))}getConfig(){return{value:this.value}}}xC.className="Constant";ce(xC);class yC extends Ir{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Tc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}yC.className="RandomUniform";ce(yC);class vC extends Ir{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`randomNormal does not support dType ${t}.`);return _d(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}vC.className="RandomNormal";ce(vC);class bC extends Ir{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`truncatedNormal does not support dType ${t}.`);return fw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}bC.className="TruncatedNormal";ce(bC);class wC extends Ir{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Y(()=>{if(e.length!==2||e[0]!==e[1])throw new W("Identity matrix initializer can only be used for 2D square matrices.");return U(this.gain,Y1(e[0]))})}getConfig(){return{gain:this.gain}}}wC.className="Identity";ce(wC);function P3(n,e="channelsLast"){let t,r;if(Dt(e),n.length===2)t=n[0],r=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const s=Xs(n,2);t=n[1]*s,r=n[0]*s}else if(e==="channelsLast"){const s=Xs(n,0,n.length-2);t=n[n.length-2]*s,r=n[n.length-1]*s}}else{const s=Xs(n);t=Math.sqrt(s),r=Math.sqrt(s)}return[t,r]}class Hn extends Ir{constructor(e){if(super(),e.scale<0)throw new W(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,M3(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,L3(this.distribution),this.seed=e.seed}apply(e,t){const r=P3(e),s=r[0],o=r[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(s+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ze(`${this.getClassName()} does not support dType ${t}.`);return fw(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return Tc(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Hn.className="VarianceScaling";ce(Hn);class Nx extends Hn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}Nx.className="GlorotUniform";ce(Nx);class Tx extends Hn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}Tx.className="GlorotNormal";ce(Tx);class Ex extends Hn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}Ex.className="HeNormal";ce(Ex);class Rx extends Hn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}Rx.className="HeUniform";ce(Rx);class $x extends Hn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}$x.className="LeCunNormal";ce($x);class Ax extends Hn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Hn.className}}Ax.className="LeCunUniform";ce(Ax);class CC extends Ir{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Y(()=>{if(e.length<2)throw new ze("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const r=ne(e.slice(0,-1)),s=e[e.length-1],o=r*s;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(s,r),Math.min(s,r)],i=_d(a,0,1,t,this.seed),u=XO.qr(i,!1);let c=u[0];const h=u[1].flatten().stridedSlice([0],[Math.min(s,r)*Math.min(s,r)],[Math.min(s,r)+1]);return c=U(c,h.sign()),r<s&&(c=c.transpose()),U(nt(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}CC.className="Orthogonal";ce(CC);const Lv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Pv(n,e={}){return Fc(n,dr.getMap().classNameMap,e,"initializer")}function vt(n){return Cx(n)}function xt(n){if(typeof n=="string"){const e=n in Lv?Lv[n]:n;if(e==="GlorotNormal")return new Tx;if(e==="GlorotUniform")return new Nx;if(e==="HeNormal")return new Ex;if(e==="HeUniform")return new Rx;if(e==="LeCunNormal")return new $x;if(e==="LeCunUniform")return new Ax;{const t={};return t.className=e,t.config={},Pv(t)}}else return n instanceof Ir?n:Pv(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $f(n){return Array.isArray(n)&&Array.isArray(n[0])}function _l(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function _e(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new W(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function et(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new W(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ml(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((r,s)=>r*s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Bv="Variable";class B3{constructor(e,t="float32",r=Bv,s=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=cC(),r=r??Bv,this.originalName=hC(r),this.name=dC(this.originalName),this.trainable_=s,this.constraint=o,this.val=XF(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),z3(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function z3(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Af(n){return n.map(e=>e.read())}function Dx(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Bt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class is{constructor(e,t,r,s,o,a,i){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=s,this.callArgs=o,this.outputTensorIndex=i,this.id=cC(),a!=null&&(this.originalName=hC(a),this.name=dC(this.originalName)),this.rank=t.length}}let V3=0;class Md{constructor(e,t){this.callArgs=t,this.id=V3++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const r of e.inboundLayers)r!=null&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let W3=0;class Ge extends vi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=W3++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const r=this.getClassName();t=gs(r)+"_"+Od(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),r=[o].concat(e.inputShape)}this.batchInputShape=r;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new gr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new W(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $n(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $n(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new qr(`Layer ${this.name} is not connected, no input to return.`);return $n(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new qr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $n(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ot(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const r=ot(this.inputSpec);if(t.length!==r.length)throw new W(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const o=t[s],a=r[s];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new W(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new W(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new W(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new W(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const u=o.shape;for(const c in a.axes){const l=Number(c),h=a.axes[c],d=l>=0?u[l]:u[u.length+l];if(h!=null&&[h,null].indexOf(d)===-1)throw new W(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${h} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){const c=a.shape[u],l=o.shape[u];if(c!=null&&l!=null&&c!==l)throw new W(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const r=ot(e),s=H3(e),o=j3(e);if(s===o)throw new W("Arguments to apply() must be all SymbolicTensors or all Tensors");return Lo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of ot(e))a.push(i.shape);this.build($n(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const i=ot(a),u=[];for(let c of i)r.indexOf(c)!==-1&&(c=c.clone()),u.push(c);if(a=$n(u),this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=U3(e),i=this.computeOutputShape(a);let u;const c=G3(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((l,h)=>new is(c,l,this,ot(e),t,this.name,h)):u=new is(c,i,this,ot(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new ze("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,s)=>{r!=null&&e[s]!=null&&e[s]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new qr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new qr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new gr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ml(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Af(e?this.trainableWeights:this.weights)}setWeights(e){Y(()=>{const t=this.weights;if(t.length!==e.length)throw new W(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const r=[],s=Af(t);for(let o=0;o<s.length;++o){const a=s[o],i=t[o],u=e[o];if(!rt(a.shape,u.shape))throw new W(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);r.push([i,u])}Dx(r)})}addWeight(e,t,r,s,o,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new W(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(s=u!=null?u():xt("zeros"));const c=s.apply(t,r),l=new B3(c,r,e,a,i);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ot(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;const s=this.computeMask(e,r),o=ot(t),a=ot(s);if(o.length!==a.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let i=0;i<o.length;i++)o[i].kerasMask=a[i]}addInboundNode(e,t,r,s,o,a,i=null){const u=ot(e);t=ot(t),r=ot(r),s=ot(s),o=_l(o),a=_l(a);const c=[],l=[],h=[];for(const d of u)c.push(d.sourceLayer),l.push(d.nodeIndex),h.push(d.tensorIndex);new Md({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:h,inputTensors:u,outputTensors:t,inputMasks:r,outputMasks:s,inputShapes:o,outputShapes:a},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function U3(n){n=ot(n);const e=[];for(const t of n)e.push(t.shape);return $n(e)}function G3(n){return"float32"}function IC(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const r=e.inboundNodes[t];if(r.inboundLayers.length===0)return r.inputTensors;{const s=[];for(let o=0;o<r.inboundLayers.length;o++){const a=r.inputTensors[o],i=r.inboundLayers[o],u=r.nodeIndices[o],c=IC(a,i,u);for(const l of c)s.indexOf(l)===-1&&s.push(l)}return s}}}function H3(n){let e=!0;for(const t of ot(n))if(!(t instanceof is)){e=!1;break}return e}function j3(n){let e=!0;for(const t of ot(n))if(t instanceof is){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Lc extends Ge{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Od("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new W("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new W("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new W("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];const s=new is(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Md({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new W(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Lc.className="InputLayer";ce(Lc);function q3(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new W("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Lc({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function K3(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return ye(e,n.dtype)}catch{throw new W(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ws{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ws)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=K3(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new W(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof is){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof is){if(this.id2Value[e.id]==null)throw new W(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new W(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&He(this.id2Mask)}}const Ll=new aC,Pl=new aC;function X3(n){Ll!=null&&Ll.setMaxEntries(n),Pl!=null&&Pl.setMaxEntries(n)}function Xi(n,e,t,r){const s=t==null?!1:t.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),u=[],c=e.names();for(const f of i)c.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);const l=i.join(",")+"|"+e.names().sort().join(",");let h=Ll.get(l),d;if(h==null){const f=Y3(a,e);h=f.sorted,d=f.recipientCounts,Ll.put(l,h),Pl.put(l,d)}d={},s||Object.assign(d,Pl.get(l));const p=new Ws(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof Lc)continue;const x=[],y=[],b=[];let v=!1;for(const S of m.inputs){const N=p.getValue(S),E=p.getMask(S);x.push(N),y.push(E),E!=null&&(v=!0),s||(d[S.name]--,d[S.name]===0&&!e.hasKey(S)&&i.indexOf(S.name)===-1&&!N.isDisposed&&S.sourceLayer.stateful!==!0&&b.push(N))}v&&(t=t||{},t.mask=y[0]);const w=ot(g.apply(x,t));let C=null;g.supportsMasking&&(C=g.computeMask(x,y));const I=Z3(m),k=Array.isArray(I)?I:[I];for(let S=0;S<k.length;++S){p.hasKey(k[S])||p.add(k[S],w[S],Array.isArray(C)?C[0]:C);const N=i.indexOf(k[S].name);N!==-1&&(u[N]=w[S])}s||He(b)}return p.disposeMasks(),o?u:u[0]}function Y3(n,e){$(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],r={};if(n.length===1){const s=zv(n[0],e);t=s.sorted,r=s.recipientMap}else{const s=new Set;for(const o of n){const{sorted:a,recipientMap:i}=zv(o,e);for(const u of a)s.has(u.name)||(t.push(u),s.add(u.name));for(const u in i)r[u]==null&&(r[u]=new Set),i[u].forEach(c=>r[u].add(c))}}return{sorted:t,recipientCounts:Q3(r)}}function Q3(n){const e={};for(const t in n)e[t]=n[t].size;return e}function zv(n,e){const t=new Set,r=[],s={};for(const i of e.names())t.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(t.has(i.name)){o.pop();continue}const u=a[a.length-1]===o.length-1;if(i.inputs.length===0||u)o.pop(),r.push(i),t.add(i.name),u&&a.pop();else{a.push(o.length-1);for(const c of i.inputs)s[c.name]==null&&(s[c.name]=new Set),s[c.name].add(i.name),!t.has(c.name)&&o.push(c)}}return{sorted:r,recipientMap:s}}function Z3(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){t=r;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3=Q();J3.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,X3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fx(n,e){return Y(()=>pn($e(U(n,n),e,!0)))}class Pc extends vi{getConfig(){return{}}}class kC extends Pc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{const t=Fx(e,this.axis),r=sr(t,0,this.maxValue);return U(e,Ae(r,le(Pt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}kC.className="MaxNorm";ce(kC);class SC extends Pc{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>Ae(e,le(Pt(),Fx(e,this.axis))))}getConfig(){return{axis:this.axis}}}SC.className="UnitNorm";ce(SC);class NC extends Pc{apply(e){return la(e)}}NC.className="NonNeg";ce(NC);class TC extends Pc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{const t=Fx(e,this.axis),r=le(U(this.rate,sr(t,this.minValue,this.maxValue)),U(1-this.rate,t));return U(e,Ae(r,le(Pt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}TC.className="MinMaxNorm";ce(TC);const Vv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(n){return Cx(n)}function Wv(n,e={}){return Fc(n,dr.getMap().classNameMap,e,"constraint")}function Vt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Vv?Vv[n]:n,config:{}};return Wv(t)}else return n instanceof Pc?n:Wv(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function wo(n){if(n==null)return;const e=[],t=[],r=[];for(const s in n){const o=n[s];if(typeof o!="number"){const a=o;e.push(a.data()),t.push(s),r.push(a)}}if(e.length>0){const s=await Promise.all(e);for(let o=0;o<s.length;++o)n[t[o]]=s[o][0];He(r)}}function EC(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Uv;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Uv||(Uv={}));const eL=125;class pu{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class tL{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class nL extends pu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const r=t.size==null?0:t.size;this.seen+=r;for(const s in t){const o=t[s];if(typeof o=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+o*r;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;const i=Y(()=>le(this.totals[s],U(o,r)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:Y(()=>{const s=U(Ae(1,this.seen),this.totals[r]);t[r]=s,this.totals[r].dispose(),es(t[r])}))}}class rL extends pu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){const e=[],t=[],r=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const u=a[i];e.push(u.data()),t.push(o),r.push(i)}}const s=await Promise.all(e);for(let o=0;o<s.length;++o)this.history[t[o]][r[o]].dispose(),this.history[t[o]][r[o]]=s[o][0]}}class sL extends pu{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Fw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=eL),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");of(this.yieldEvery)&&(this.maybeWait=x3(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){const s=[];this.yield!=null&&(await wo(r),s.push(this.yield(e,t,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await wo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const r=[];this.epochEnd!=null&&(await wo(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await wo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const r=[];this.batchEnd!=null&&(await wo(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):of(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await wo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await wo(e),await this.trainEnd(e))}}function RC(n,e){return n==null&&(n={}),n instanceof pu?[n]:Array.isArray(n)&&n[0]instanceof pu?n:ot(n).map(r=>new sL(r,e))}class lr{constructor(){}static registerCallbackConstructor(e,t){$(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),lr.checkForDuplicate(t),lr.constructors[e]==null&&(lr.constructors[e]=[]),lr.constructors[e].push(t)}static checkForDuplicate(e){for(const t in lr.constructors)lr.constructors[+t].forEach(s=>{if(s===e)throw new W("Duplicate callback constructor.")})}static clear(){lr.constructors={}}static createCallbacks(e){const t=[];for(const r in lr.constructors){const s=+r;e>=s&&t.push(...lr.constructors[s])}return t.map(r=>new r)}}lr.constructors={};function $C(n,e,t,r,s,o,a,i,u){const c=new rL,l=[new nL,...lr.createCallbacks(e)];n!=null&&l.push(...n),l.push(c);const h=new tL(l);return h.setParams({epochs:t,initialEpoch:r,samples:s,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cs(n,e={},t=!1){return Fc(n,dr.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bl(n,e){return Y(()=>{n.dtype!=="float32"&&(n=ye(n,"float32"));const t=$e(_c(n),e,!0),r=Nd(t.shape,Pt()),s=pn(ho(t,r));return Ae(n,s)})}function Ld(n,e){return Y(()=>_t(_c(Oe(e,n)),-1))}function Ox(n,e){return Y(()=>_t(yn(Oe(e,n)),-1))}function _x(n,e){return Y(()=>{const t=Oe(n,e),r=sr(yn(n),Pt(),Number.MAX_VALUE),s=yn(Ae(t,r));return U(100,_t(s,-1))})}function oL(n,e){return Y(()=>{const t=sr(e,Pt(),Number.MAX_VALUE),r=as(le(1,t)),s=sr(n,Pt(),Number.MAX_VALUE),o=as(le(1,s));return _t(_c(Oe(r,o)),-1)})}function aL(n,e){return Y(()=>{const t=ho(0,Oe(1,U(n,e)));return _t(_c(t),-1)})}function iL(n,e){return Y(()=>{const t=ho(0,Oe(1,U(n,e)));return _t(t,-1)})}function uL(n,e){return Y(()=>{const t=$e(U(n,e),-1),r=Or(U(Oe(1,n),e),-1);return ho(0,le(1,Oe(r,t)))})}function cL(n,e){return Y(()=>{const t=Math.log(2),r=Oe(e,n),s=Oe(le(r,Nc(U(-2,r))),t);return _t(s,-1)})}function fu(n,e,t=!1){return Y(()=>{if(t)e=Bg(e);else{const r=$e(e,e.shape.length-1,!0);e=Ae(e,r)}return e=sr(e,Pt(),1-Pt()),Et($e(U(ye(n,"float32"),as(e)),e.shape.length-1))})}function zl(n,e,t=!1){return Y(()=>{const r=ye(Rd(R3(n)),"int32");e=sr(e,Pt(),1-Pt());const s=e.shape,o=q(tw(r,s[s.length-1]),s);return fu(o,e,t)})}function lL(n,e){if(!rt(n.shape,e.shape))throw new W(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return Y(()=>{const t=la(e),r=Et(yn(e));return le(Oe(t,U(e,n)),Q1(os(r)))})}function Pd(n,e){return Y(()=>{let t;return t=sr(e,Pt(),1-Pt()),t=as(Ae(t,Oe(1,t))),_t(lL(n,t),-1)})}function hL(n,e){return Y(()=>{const t=sr(n,Pt(),1),r=sr(e,Pt(),1);return $e(U(n,as(Ae(t,r))),-1)})}function dL(n,e){return Y(()=>{const t=as(le(Pt(),e));return _t(Oe(e,U(n,t)),-1)})}function AC(n,e){return Y(()=>{const t=Bl(n,-1),r=Bl(e,-1),s=U(t,r);return Et($e(s,-1))})}const Vl={meanSquaredError:Ld,meanAbsoluteError:Ox,meanAbsolutePercentageError:_x,meanSquaredLogarithmicError:oL,squaredHinge:aL,hinge:iL,categoricalHinge:uL,logcosh:cL,categoricalCrossentropy:fu,sparseCategoricalCrossentropy:zl,binaryCrossentropy:Pd,kullbackLeiblerDivergence:hL,poisson:dL,cosineProximity:AC};function Ip(n){if(typeof n=="string"){if(n in Vl)return Vl[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new W(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DC(n,e){return Y(()=>{const t=U(.5,br(e)),r=ns(or(e,t),n.dtype);return _t(ss(n,r),-1)})}function FC(n,e){return Y(()=>ns(ss(uu(n,-1),uu(e,-1)),"float32"))}function pL(n,e){return Y(()=>ye($e(ks(ss(n,1),ss(e,1))),"float32"))}function fL(n,e){return Y(()=>ye($e(ks(ss(n,0),ss(e,1))),"float32"))}function mL(n,e){return Y(()=>{const t=pL(n,e),r=fL(n,e),s=le(t,r);return ye(kn(or(s,0),Ae(t,s),0),"float32")})}function gL(n,e){return Pd(n,e)}function xL(n,e){return n.rank===e.rank&&(n=Ec(n,[n.rank-1])),e=uu(e,-1),e.dtype!==n.dtype&&(e=ye(e,n.dtype)),ye(ss(n,e),"float32")}const yL=Ld,vL=Ld,bL=Ox,wL=Ox,CL=_x,IL=_x,OC=fu,kL=AC,_C=zl,Wl={binaryAccuracy:DC,categoricalAccuracy:FC,precision:mL,categoricalCrossentropy:OC,sparseCategoricalCrossentropy:_C,mse:yL,MSE:vL,mae:bL,MAE:wL,mape:CL,MAPE:IL,cosine:kL};function SL(n){if(typeof n=="string"&&n in Wl)return Wl[n];if(typeof n!="string"&&n!=null)return n;throw new W(`Unknown metric ${n}`)}function nl(n){if(Kr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Vl))if(Vl[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Wl))if(Wl[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NL(n){const e={Adagrad:()=>ka.adagrad(.01),Adadelta:()=>ka.adadelta(1,.95,Pt()),Adam:()=>ka.adam(.001,.9,.999,Pt()),Adamax:()=>ka.adamax(.002,.9,.999,Pt(),0),RMSProp:()=>ka.rmsprop(.001,.9,0,Pt()),SGD:()=>ka.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new W(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Gv=1*1024*1024;function Hv(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Df(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const r=JSON.stringify(n);r.length>Gv&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Gv}.`)}}function Df(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Df(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Df(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function TL(n,e,t,r=console.log){const s=RL(n),o=["Layer (type)","Input Shape","Output shape","Param #"];s?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!s){o.push("Receives inputs"),a=[];for(const l in n.nodesByDepth)a.push(...n.nodesByDepth[l])}r("_".repeat(e)),Ul(o,t,r),r("=".repeat(e));const i=n.layers;for(let l=0;l<i.length;++l)s?$L(i[l],t,r):AL(i[l],t,a,r),r((l===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const u=EL(n),c=Ml(n.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(e))}function EL(n){let e;return n.collectedTrainableWeights!=null?e=Ml(n.collectedTrainableWeights):e=Ml(n.trainableWeights),e}function RL(n){let e=!0;const t=[],r=[];for(const s in n.nodesByDepth)t.push(n.nodesByDepth[s]);for(const s of t){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of n.layers){let o=!1;for(const a of s.inboundNodes)if(r.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function Ul(n,e,t=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);t(r)}function $L(n,e,t){let r,s;try{s=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=n.name,a=n.getClassName(),i=[`${o} (${a})`,s,r,n.countParams().toString()];Ul(i,e,t)}function AL(n,e,t,r){let s,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const a=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${p}[${f}][${m}]`)}const i=n.name,u=n.getClassName(),c=a.length===0?"":a[0],l=[`${i} (${u})`,o,s,n.countParams().toString(),c];Ul(l,e,r);for(let h=1;h<a.length;++h)Ul(["","","","",a[h]],e,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MC(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ff(n,e){if(n===null)return null;if(typeof n=="string")return Ro(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const o=n[s];MC(e,s,o)?t.push(o):t.push(Ff(o,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r];if(r==="name"&&typeof s=="string")t[r]=s;else{const o=Ro(r);t[o]=Ff(s,o)}}return t}}function Of(n,e){if(n==null)return null;if(typeof n=="string")return gs(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const o=n[s];MC(e,s,o)?t.push(o):t.push(Of(o,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r],o=gs(r);(r==="name"||r==="className")&&typeof s=="string"?t[o]=s:t[o]=Of(s,r)}return t}}/** @license See the LICENSE file. */const LC="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DL=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Nr extends Ge{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=Od(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ks(this.inputs).length!==this.inputs.length)throw new W(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ks(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const b=y.sourceLayer,v=y.nodeIndex,w=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(w)}for(const y of this.inputs){const b=y.sourceLayer,v=y.nodeIndex,w=y.tensorIndex;Kr(v===0,"input layer has >1 nodes"),Kr(w===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const b=this.inputLayers[y];if(!(b instanceof Lc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const t={},r={},s={},o={},a={},i=[],u=(y,b,v,w,C,I)=>{(w==null||C==null||I==null)&&(w=y.sourceLayer,C=y.nodeIndex,I=y.tensorIndex);const k=w.inboundNodes[C];if(v.indexOf(k)!==-1)throw new gr(`The tensor ${y.name} at layer "${w.name}" is part of a cycle.`);if(b.indexOf(k)!==-1)return;this.containerNodes.add(Nr.nodeKey(w,C)),w.id in a||(a[w.id]=Object.keys(a).length),v.indexOf(k)===-1&&v.push(k);const S=k.inboundLayers.length;for(let N=0;N<S;N++){const E=k.inputTensors[N],R=k.inboundLayers[N],_=k.nodeIndices[N],O=k.tensorIndices[N];u(E,b,v,R,_,O)}for(b.push(k);v.indexOf(k)>=0;)v.splice(v.indexOf(k),1);i.push(k)},c=[],l=[];for(const y of this.outputs)u(y,c,l);const h=i.slice().reverse();for(const y of h){r[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id];const v=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];b=Math.max(b,v),s[y.outboundLayer.id]=b,o[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let w=0;w<y.inboundLayers.length;w++){const C=y.inboundLayers[w],I=y.nodeIndices[w],k=C.inboundNodes[I],S=t[k.id]==null?0:t[k.id];t[k.id]=Math.max(b+1,S),r[k.id]=k}}const d={};for(const y in t){const b=t[y];b in d||(d[b]=[]),d[b].push(r[y])}const p={};for(const y in s){const b=s[y];b in p||(p[b]=[]),p[b].push(o[y])}let f=Object.keys(p).map(y=>parseInt(y,10)).sort(Jc);this.layers=[];for(const y of f){const b=p[y];b.sort((v,w)=>{const C=a[v.id],I=a[w.id];return C<I?-1:C>I?1:0});for(const v of b)v instanceof Nr&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,f=Object.keys(d).map(y=>parseInt(y,10)).sort(Jc);const m=this.inputs.slice(),g=[];for(const y of f)for(const b of d[y]){const v=b.outboundLayer;if(v!=null){for(const w of b.inputTensors)if(m.indexOf(w)===-1)throw new gr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(const w of b.outputTensors)m.push(w);g.push(v.name)}}this.nodesByDepth=d;const x=this.layers.map(y=>y.name);for(const y of x){const b=x.filter(v=>v===y).length;if(b!==1)throw new gr(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Md({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new W("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const r={};let s=0;const o=DL(e);o&&this.parseWeights(e);for(const i of this.layers)for(const[u,c]of i.weights.entries()){const l=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(r[l]!=null)throw new W(`Duplicate weight name: ${l}`);r[l]=c,s++}const a=[];for(const i in e){let u=i;if(r[i]==null){const c=i.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(r[u]!=null)a.push([r[u],e[i]]);else if(t)throw new W(`Provided weight data has no target variable: ${i}`);delete r[u]}if(t){const i=[];for(const u in r)i.push(u);if(i.length>0)throw new W(`${i.length} of ${s} weights are not set: ${i}`)}Dx(a)}parseWeights(e){for(const t in Object.keys(e)){const r=t.split("/"),s=["vars","layer_checkpoint_dependencies"],o=r.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!s.includes(a)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${LC}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const r=Of(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return Y(()=>{e=ot(e);const r=new Ws;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],e[s]);return Xi(this.outputs,r,t)})}computeMask(e,t){return Y(()=>{e=ot(e);let r;return t==null?r=Zo(null,e.length):r=ot(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){const t=_l(e);if(t.length!==this.inputLayers.length)throw new W(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let i=0;i<t.length;i++){const u=this.inputLayers[i],c=t[i],l=u.name+"_0_0";r[l]=c}const s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Jc);if(s.length>1)for(const i of s){const u=this.nodesByDepth[i];for(const c of u){const l=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],x=c.nodeIndices[m],y=c.tensorIndices[m],b=`${g.name}_${x}_${y}`,v=r[b];h.push(v)}const d=l.computeOutputShape($n(h)),p=_l(d),f=l.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;r[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const u=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],h=`${u.name}_${c}_${l}`;a.push(h)}for(let i=0;i<a.length;i++){const u=a[i];Kr(u in r),o.push(r[u])}return $n(o)}runInternalGraph(e,t){t==null&&(t=Zo(null,e.length));const r={};for(let u=0;u<this.inputs.length;++u){const c=this.inputs[u],l=e[u],h=t[u];r[c.id]=[l,h]}const s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Jc);for(const u of s){const c=this.nodesByDepth[u];for(const l of c){const h=l.outboundLayer,d=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of d)m.id in r&&f.push(r[m.id]);if(f.length===d.length){let m={},g,x,y,b;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[v,w]=f[0];m.mask==null&&(m.mask=w),y=ot(h.call(v,m)),b=ot(h.computeMask(v,w)),g=[v],x=[w]}else g=f.map(v=>v[0]),x=f.map(v=>v[1]),m.mask==null&&(m.mask=x),y=ot(h.call(g,m)),b=ot(h.computeMask(g,x));if(h.activityRegularizer)throw new ze("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const w=p[v],C=y[v],I=b[v];r[w.id]=[C,I]}}}}const o=[],a=[],i=[];for(const u of this.outputs){Kr(u.id in r,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=r[u.id];i.push(c.shape),o.push(c),a.push(l)}return[o,a,i]}buildNodeConversionMap(e){const t={};let r;for(const s of this.layers){r=s instanceof Nr?1:0;for(let o=0;o<s.inboundNodes.length;o++){const a=Nr.nodeKey(s,o);this.containerNodes.has(a)&&(t[a]=r,r+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new W("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const r of this.layers)if(r.name===e)return r;throw new W(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new W(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Y(()=>{const e=[];for(const t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){const s=Nr.nodeKey(t,r);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(const a of this.layers){const i=a.getClassName(),u=a.getConfig(),c=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=Nr.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],y=d.nodeIndices[g],b=d.tensorIndices[g],v=Nr.nodeKey(x,y);let w=t[v];w==null&&(w=0),m.push([x.name,w,b,f])}c.push(m)}}}const l={};l.name=a.name,l.className=i,l.config=u,l.inboundNodes=c,r.push(l)}e.layers=r;const s=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],c=Nr.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const h=this.inputLayersTensorIndices[a];s.push([i.name,l,h])}e.inputLayers=s;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=Nr.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const h=this.outputLayersTensorIndices[a];o.push([i.name,l,h])}return e.outputLayers=o,e}static fromConfig(e,t,r={},s=!1){const o={},a={};function i(g,x){g.name in a?a[g.name].push(x):a[g.name]=[x]}function u(g,x){const y=[];let b;for(const v of x){const w=v[0],C=v[1],I=v[2];if(b=v[3]==null?{}:v[3],!(w in o)){i(g,x);return}const k=o[w];if(k.inboundNodes.length<=C){i(g,x);return}const S=k.inboundNodes[C];y.push(S.outputTensors[I])}y.length>0&&g.apply($n(y),b)}function c(g){const x=g.name,y=Cs(g,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),o[x]=y,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new W(`Corrupted configuration, expected array for nodeData: ${v}`);i(y,v)})}const l=t.name,h=t.layers;for(const g of h)c(g);for(;!g3(a);)for(const g of h){const x=o[g.name];if(x.name in a){const y=a[x.name];delete a[x.name];for(const b of y)u(x,b)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const x=g[0],y=g[1],b=g[2];Kr(x in o);const w=o[x].inboundNodes[y].outputTensors;d.push(w[b])}const m=t.outputLayers;for(const g of m){const x=g[0],y=g[1],b=g[2];Kr(x in o);const w=o[x].inboundNodes[y].outputTensors;p.push(w[b])}return new e({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new W("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Y(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FL(n,e,t){const r=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const s=[];return e.forEach(o=>{o in n?s.push(n[o]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${t} must be either an array with ${r} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function PC(n,e){return FL(n,e,"classWeight")}async function BC(n,e,t,r){if(t!=null){const s=Y(()=>{if(n.shape.length===1)return Mo(n);if(n.shape.length===2){if(n.shape[1]>1)return uu(n,1);if(n.shape[1]===1)return q(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await s.data());He(s);const a=[];return o.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Vn(a,"float32")}else return null}function OL(n,e){return U(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _L=32;function zC(n,e){let t,r;const s=e;t=s.xs,r=s.ys,$(t!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=jv("input",n.inputNames,t),a=jv("output",n.outputNames,r),i=o[0].shape[0];$(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),$(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<o.length;u++)$(o[u].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let u=0;u<a.length;u++)$(a[u].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function jv(n,e,t){if(t instanceof Lt)return[t];if(Array.isArray(t))return $(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const r=[];for(const s of e){if(t[s]==null)throw new W(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(t[s])}return r}}function ML(n){if(n.length===3)throw new ze("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function LL(n,e,t){const r=t.batchesPerEpoch!=null;if($(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),$(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),$(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),$(!r||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),$(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=t.validationData!=null;let o,a;if(s)if(qv(t.validationData))$(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=ML(t.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;s?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();const l=RC(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=$C(l,h,t.epochs,null,null,PL(e,t),null,s,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let x=0,y=0;for(r||(m=await e.iterator());!r||x<t.batchesPerEpoch;){const b=await m.next();if(r&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(b.value!=null){const{xs:v,ys:w}=zC(n,b.value),C={};C.batch=y,C.size=v[0].shape[0],await d.onBatchBegin(y,C);const I=[];if(t.classWeight!=null){const N=PC(t.classWeight,n.outputNames);for(let E=0;E<N.length;++E)I.push(await BC(w[E],null,N[E]))}const k=v.concat(w).concat(I),S=i(k);He(k);for(let N=0;N<u.length;++N){const E=u[N],R=S[N];C[E]=R,es(R)}await d.onBatchEnd(y,C),EC(C),y++,x++}if(r?x>=t.batchesPerEpoch:b.done){if(s){let v;qv(t.validationData)?v=ot(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=ot(n.evaluate(o,a,{batchSize:t.validationBatchSize==null?_L:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)g[`val_${n.metricsNames[w]}`]=v[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function PL(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function qv(n){return typeof n.iterator=="function"}function BL(n){return typeof n.next=="function"}async function zL(n,e,t){t=t||{};const r=t.batches!=null,s=n.testFunction;let o=[];if(t.verbose>0)throw new ze("Verbose mode is not implemented yet.");$(!r||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=BL(e)?e:await e.iterator();let i=0,u=0;for(;!r||u<t.batches;){const c=await a.next();if(o=Y(()=>{if(c.value){const{xs:l,ys:h}=zC(n,c.value),d=l.concat(h),p=Y(()=>s(d));if(He(d),u===0)for(let m=0;m<p.length;++m)o.push(nt(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=o[m];o[m]=Y(()=>le(o[m],U(f,g))),u>0&&He(x)}He(p),i+=f,++u}return o}),c.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const l=o[c];o[c]=Ae(o[c],i),He(l)}return $n(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kp(n){$(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function zi(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(r=>Po(r,e,t-e)):Po(n,e,t-e)}function _f(n,e){return Y(()=>n==null?null:Array.isArray(n)?n.map(t=>_f(t,e)):fC(n,e.dtype==="int32"?e:ye(e,"int32")))}function Sp(n,e){const t=[];let r=0,s=null;for(;r<n;)s=r+e,s>=n&&(s=n),t.push([r,s]),r=s;return t}function VC(n){const e=[];n instanceof Lt&&(n=[n]);for(let t=0;t<n.length;++t){const r=n[t];if(r.rank===1)e.push(Oc(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Sr(n,e){if(n==null)return;const t=[];if(e instanceof Lt)t.push(e.id);else if(Array.isArray(e))e.forEach(s=>t.push(s.id));else if(e!=null)for(const s in e){const o=e[s];t.push(o.id)}const r=[];if(n instanceof Lt)t.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{t.indexOf(s.id)===-1&&r.push(s)});else if(n!=null)for(const s in n){const o=n[s];t.indexOf(o.id)===-1&&r.push(o)}r.forEach(s=>{s.isDisposed||s.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VL(n){return n instanceof Lt}function Mf(n){return Array.isArray(n)}function Kv(n){return!VL(n)&&!Mf(n)}function Xv(n,e,t,r=!0,s=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(Mf(n)&&n.length>0)a=!0;else if(Kv(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new W(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let o;if(Kv(n)){n=n,o=[];for(const a of e){if(n[a]==null)throw new W(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(n[a])}}else if(Mf(n)){if(n=n,n.length!==e.length)throw new W(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new W(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=VC(o),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new W(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!r)continue;const c=i.shape[u],l=t[a][u];if(l!=null&&l>=0&&c!==l)throw new W(`${s} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function WL(n,e,t){const r=Ks(n.map(o=>o.shape[0]));r.sort();const s=Ks(e.map(o=>o.shape[0]));if(s.sort(),r.length>1)throw new W(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(s.length>1)throw new W(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(r.length>0&&s.length>0&&!rt(r,s))throw new W(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function UL(n,e,t){const r=[Ld,Pd,fu];for(let s=0;s<n.length;++s){const o=n[s],a=e[s],i=t[s];if(a!=null){if(a===fu&&o.shape[o.shape.length-1]===1)throw new W(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(a)!==-1){const u=o.shape.slice(1),c=i.slice(1);for(let l=0;l<u.length;++l){const h=u[l],d=c[l];if(d!=null&&h!==d)throw new W(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Yv(n,e,t,r=!0,s=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new W(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new W(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new W(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!r)continue;const c=i.shape[u],l=t[a][u];if(l!=null&&l!==c)throw new W(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function GL(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(r=>t);{const r=[];for(const s of e){let o=t.hasOwnProperty(s)?t[s]:[];Array.isArray(o)||(o=[o]),r.push(o)}return r}}const HL="layers-model";class Ua extends Nr{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new W("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");TL(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=NL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof fo))throw new W("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new W(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Ip(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new W(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Ip(i))}else{const a=Ip(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Lo("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const s=GL(e.metrics,this.outputNames),o=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};Lo("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const i=s[a];(c=>{const l="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Pd?["accuracy","acc"].indexOf(f)!==-1?d=DC:["crossentropy","ce"].indexOf(f)!==-1&&(d=gL):this.lossFunctions[a]===zl?["accuracy","acc"].indexOf(f)!==-1?d=xL:["crossentropy","ce"].indexOf(f)!==-1&&(d=_C):["accuracy","acc"].indexOf(f)!==-1?d=FC:["crossentropy","ce"].indexOf(f)!==-1&&(d=OC);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=l+x}else p=SL(f),h=l+nl(f);let m;Lo(h,()=>{m=p}),o(a,h,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){const s=r.batchSize==null?32:r.batchSize;kp(s);const a=this.standardizeUserDataXY(e,t,!0,s);try{const i=a[0].concat(a[1]);this.makeTestFunction();const u=this.testFunction,c=this.testLoop(u,i,s,r.verbose,r.steps);return $n(c)}finally{Sr(a[0],e),Sr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),zL(this,e,t)}checkNumSamples(e,t,r,s="steps"){let o;if(r!=null){if(o=null,t!=null)throw new W(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new W(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new W("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(t),s=r?t:[t],o=this.retrieveSymbolicTensors(s),a=new Ws;if(e instanceof Lt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new W(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(c==null)throw new W(`No value is provided for the model's input ${u.name}`);a.add(u,c)}const i=Xi(o,a);return r?i:i[0]}retrieveSymbolicTensors(e){const t=Zo(null,e.length);let r=e.length;for(const s of this.layers){const o=Array.isArray(s.output)?s.output:[s.output],a=o.map(i=>i.name);for(let i=0;i<e.length;++i){const u=a.indexOf(e[i]);if(u!==-1&&(t[i]=o[u],r--),r===0)break}if(r===0)break}if(r>0){const s=[];throw t.forEach((o,a)=>{o==null&&s.push(e[a])}),new W(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,r=!1){return Y(()=>{const s=this.checkNumSamples(e);if(r)throw new ze("Verbose predictLoop() is not implemented yet.");const o=Sp(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)Y(()=>{const c=o[i][0],l=o[i][1],h=zi(e,c,l),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Ws(d);return Xi(this.outputs,p)}).forEach((c,l)=>a[l].push(c));return $n(a.map(i=>Dn(i,0)))})}predict(e,t={}){const r=VC(e);Yv(r,this.inputNames,this.feedInputShapes,!1);try{const s=t.batchSize==null?32:t.batchSize;return kp(s),this.predictLoop(r,s)}finally{Sr(r,e)}}predictOnBatch(e){Yv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,s){if(this.optimizer_==null)throw new gr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===zl?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(e=Xv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xv(t,this.feedOutputNames,o,!1,"target"),WL(e,t),UL(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new W(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,s,o=!0,a){const[i,u]=this.standardizeUserDataXY(e,t,o,a);if(r!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){const l=PC(s,this.outputNames);c=[];for(let h=0;h<l.length;++h)c.push(await BC(u[h],null,l[h]))}return[i,u,c]}testLoop(e,t,r,s=0,o){return Y(()=>{const a=this.checkNumSamples(t,r,o,"steps"),i=[];if(s>0)throw new ze("Verbose mode is not implemented yet.");if(o!=null)throw new ze("steps mode in testLoop() is not implemented yet");{const u=Sp(a,r),c=Vn(Lr(0,a));for(let l=0;l<u.length;++l){const h=u[l][0],d=u[l][1],p=Po(c,h,d-h),f=_f(t,p),m=e(f);if(l===0)for(let g=0;g<m.length;++g)i.push(nt(0));for(let g=0;g<m.length;++g){const x=m[g];i[g]=le(i[g],U(d-h,x))}}for(let l=0;l<i.length;++l)i[l]=Ae(i[l],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){const s=e[r];let o=s;if(Ov(e,s)>1){const a=Ov(e.slice(0,r),s);o+=`_${a}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:r[m]});const d=new Ws(h),p=Xi(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(s[m],p[m]);o[m]!=null&&(x=OL(x,o[m]));const y=_t(x);t.push(y),m===0?f=x:f=le(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const x=this.metricsTensors[m][0],y=this.metricsTensors[m][1];g=_t(x(s[y],p[y]))}es(g),a.push(g)}return f=_t(f),this.calculateLosses().forEach(m=>{f=le(f,m)}),f},u=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(i,!0,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>Y(()=>{const t=[];let r;const s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:s[c]});const i=new Ws(a),u=Xi(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const l=this.lossFunctions[c],h=_t(l(o[c],u[c]));c===0?r=h:r=le(r,h),t.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const l=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=_t(l(o[h],u[h]));t.push(d)}return t})}async fit(e,t,r={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,o,a,i,u,c,l,h,d;try{const p=r.batchSize==null?32:r.batchSize;kp(p);const m=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,!1,p);s=m[0],o=m[1],d=m[2];let g=!1,x;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)u=r.validationData[0],c=r.validationData[1];else throw r.validationData.length===3?new ze("validationData including sample weights is not supported yet."):new W(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const N=await this.standardizeUserData(u,c,null,null,!0,p);l=N[0],h=N[1],x=l.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;const S=Math.floor(s[0].shape[0]*(1-r.validationSplit)),N=s[0].shape[0];l=zi(s,S,N),a=s,s=zi(s,0,S),h=zi(o,S,N),i=o,o=zi(o,0,S),x=l.concat(h)}else r.validationSteps!=null&&(g=!0);const y=s.concat(o).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let w,C;g?(this.makeTestFunction(),w=this.testFunction,C=v.slice().concat(v.map(S=>"val_"+S))):(w=null,x=[],C=v.slice());const I=RC(r.callbacks,r.yieldEvery);return await this.fitLoop(b,y,v,p,r.epochs,r.verbose,I,w,x,r.shuffle,C,r.initialEpoch,null,null)}finally{this.isTraining=!1,Sr(s,e),Sr(o,t),Sr(a,e),Sr(i,t),Sr(l,u),Sr(h,c),d!=null&&He(d)}}async fitLoop(e,t,r,s,o,a,i,u,c,l,h,d,p,f){s==null&&(s=32),o==null&&(o=1),l==null&&(l=!0),d==null&&(d=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new W("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,s,p,"steps_per_epoch");let x;g!=null&&(x=Lr(0,g)),a==null&&(a=1);const{callbackList:y,history:b}=$C(i,a,o,d,g,p,s,m,h);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<o;++v){await y.onEpochBegin(v);const w={};if(p!=null)throw new ze("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new ze("batch shuffling is not implemneted yet");l&&EE(x);const C=Vn(x),I=Sp(g,s);for(let k=0;k<I.length;++k){const S={};if(await y.onBatchBegin(k,S),Y(()=>{const N=I[k][0],E=I[k][1],R=Po(C,N,E-N);S.batch=k,S.size=E-N;const _=_f(t,R),O=e(_);for(let F=0;F<r.length;++F){const L=r[F],B=O[F];S[L]=B,es(B)}if(k===I.length-1&&m){const F=this.testLoop(u,c,s);for(let L=0;L<r.length;++L){const B=r[L],M=F[L];es(M),w["val_"+B]=M}}}),await y.onBatchEnd(k,S),EC(S),this.stopTraining_)break}C.dispose()}if(await y.onEpochEnd(v,w),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return LL(this,e,t)}async trainOnBatch(e,t){const r=await this.standardizeUserData(e,t),s=r[0],o=r[1],i=this.makeTrainFunction()(s.concat(o)),u=[];for(const c of i){const l=await c.data();u.push(l[0])}return He(i),Sr(r[0],e),Sr(r[1],t),$n(u)}getNamedWeights(e){const t=[],r=e!=null&&e.trainableOnly,s=r?this.trainableWeights:this.weights,o=this.getWeights(r);for(let a=0;a<s.length;++a)r&&!s[a].trainable||t.push({name:s[a].originalName,tensor:o[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=gv().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-gv().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=gs(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>gs(t))}else{const t=Object.keys(this.loss);e={};const r=this.loss;for(const s of t)if(typeof r[s]=="string")e[s]=gs(r[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[gs(nl(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>gs(nl(e)));{const e={};for(const t in this.metrics)e[t]=gs(nl(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ff(e.optimizer_config),r=Cs(t);let s;if(typeof e.loss=="string")s=Ro(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Ro(a));else if(e.loss!=null){s={};for(const a in e.loss)s[a]=Ro(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>Ro(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=Ro(e.metrics[a])}this.compile({loss:s,metrics:o,optimizer:r})}async save(e,t){if(typeof e=="string"){const c=SR(e);if(c.length===0)throw new W(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new W(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new W("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await yv(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:HL,generatedBy:`TensorFlow.js tfjs-layers v${LC}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:l,specs:h}=await yv(await this.optimizer.getWeights(),c);r.specs.push(...h),r.data=kR([r.data,l])}return this.userDefinedMetadata!=null&&(Hv(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=r.data,i.weightSpecs=r.specs,e.save(i)}setUserDefinedMetadata(e){Hv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ua.className="Model";ce(Ua);class WC extends Ua{}WC.className="Functional";ce(WC);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mu extends Ua{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Od("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new W(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof mu||e instanceof Ua;let r;if(t){if(r=e,r.outputs.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new W("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new W("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const s=q3({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new W(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=IC(this.outputs[0])}this.inboundNodes=[],new Md({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{const s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(et(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ua({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new gr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new gr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new gr("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new gr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},s=!1){let o,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new W("Legacy serialization format not supported yet.");o=t}else $(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof mu))throw new ze(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const u of o){const l=Cs(u,void 0,s);s&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new W("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new W("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}}mu.className="Sequential";ce(mu);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let mn=class extends vi{getConfig(){return{}}};class UC extends mn{apply(e,t=1){return A3(e,t)}}UC.className="elu";ce(UC);class GC extends mn{apply(e){return iw(e)}}GC.className="selu";ce(GC);class HC extends mn{apply(e){return la(e)}}HC.className="relu";ce(HC);class jC extends mn{apply(e){return Y(()=>hu(6,la(e)))}}jC.className="relu6";ce(jC);class qC extends mn{apply(e){return e}}qC.className="linear";ce(qC);class KC extends mn{apply(e){return gi(e)}}KC.className="sigmoid";ce(KC);class XC extends mn{apply(e){return F3(e)}}XC.className="hardSigmoid";ce(XC);class YC extends mn{apply(e){return Nc(e)}}YC.className="softplus";ce(YC);class QC extends mn{apply(e){return D3(e)}}QC.className="softsign";ce(QC);class ZC extends mn{apply(e){return kd(e)}}ZC.className="tanh";ce(ZC);let Mx=class extends mn{apply(e,t=-1){return Bg(e,t)}};Mx.className="softmax";ce(Mx);class JC extends mn{apply(e,t=-1){return Z1(e,t)}}JC.className="logSoftmax";ce(JC);class eI extends mn{apply(e){return Y(()=>Y(()=>{const t=Math.sqrt(2),r=U(.5,le(1,q1(Ae(e,t))));return U(e,r)}))}}eI.className="gelu";ce(eI);class tI extends mn{apply(e){return Y(()=>U(.5,U(e,le(1,kd(U(pn(Ae(2,Math.PI)),le(e,U(.044715,Xo(e,3)))))))))}}tI.className="gelu_new";ce(tI);class nI extends mn{apply(e){return Y(()=>U(e,kd(Nc(e))))}}nI.className="mish";ce(nI);class rI extends mn{apply(e,t=1){return Y(()=>U(gi(U(e,t)),e))}}rI.className="swish";ce(rI);function to(n){return n.getClassName()}function Np(n,e={}){return Fc(n,dr.getMap().classNameMap,e,"activation")}function no(n){if(n==null){const e={};return e.className="linear",e.config={},Np(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Np(e)}else return n instanceof mn?n:Np(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jL(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class sI extends vi{}class oI extends sI{constructor(e){super(),jL(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Y(()=>{let t=Kt([1]);return this.hasL1&&(t=le(t,$e(U(this.l1,yn(e))))),this.hasL2&&(t=le(t,$e(U(this.l2,_c(e))))),q(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}oI.className="L1L2";ce(oI);const Qv={l1l2:"L1L2"};function ut(n){return Cx(n)}function Zv(n,e={}){return Fc(n,dr.getMap().classNameMap,e,"regularizer")}function yt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Qv?Qv[n]:n,config:{}};return Zv(t)}else return n instanceof sI?n:Zv(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aI extends Ge{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=_e(e);let r=la(e);return this.maxValue!=null&&(r=sr(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}aI.className="ReLU";ce(aI);class iI extends Ge{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=_e(e);return Ig(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}iI.className="LeakyReLU";ce(iI);class uI extends Ge{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yt(e.alphaRegularizer),this.alphaConstraint=Vt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new W(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=et(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)r[s]=e[s];this.inputSpec=[new Bt({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=_e(e),Rg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:vt(this.alphaInitializer),alphaRegularizer:ut(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}uI.className="PReLU";ce(uI);let cI=class extends Ge{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ze(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=_e(e);return Td(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cI.className="ELU";ce(cI);class lI extends Ge{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const r=_e(e);return U(r,ye(or(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}lI.className="ThresholdedReLU";ce(lI);class hI extends Ge{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Mx().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return Y(()=>{let r=_e(e);const s=t.mask;if(s!=null){const o=U(Oe(po(r.shape),ye(s,r.dtype)),nt(-1e9));r=le(r,o)}return this.axis instanceof Array?this.axis.length>1?os(Oe(r,J1(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}hI.className="Softmax";ce(hI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ga(n,e,t){if(typeof n=="number")return Zo(n,e);if(n.length!==e)throw new W(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let r=0;r<e;++r){const s=n[r];if(!T3(s))throw new W(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function _r(n,e,t,r,s=1){if(n==null)return n;const o=e+(e-1)*(s-1);let a;return t==="same"?a=n:a=n-o+1,Math.floor((a+r-1)/r)}function Xr(n,e,t,r){if(n==null)return null;if(r==="valid")n=n*e+eo([t-e,0]);else if(r==="same")n=n*e;else throw new W(`Unsupport padding mode: ${r}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lx(n,e){return Y(()=>(Dt(e),e==="channelsFirst"?Ye(n,[0,2,3,1]):n))}function dI(n,e){return Y(()=>(Dt(e),e==="channelsFirst"?Ye(n,[0,2,3,4,1]):n))}function qL(n,e,t,r=1,s="valid",o,a=1){return Y(()=>{if(o==null&&(o=Pr()),Dt(o),n.shape.length!==3)throw new W(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new W(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new W(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Ye(n,[0,2,1])),s==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=W1(n,e,r,s==="same"?"same":"valid","NWC",a);return t!=null&&(i=Vr(i,t)),i})}function Jv(n,e,t,r=[1,1],s="valid",o,a,i=null){return Y(()=>{if(o==null&&(o=Pr()),Dt(o),n.rank!==3&&n.rank!==4)throw new W(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new W(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=Lx(n,o);if(s==="causal")throw new ze("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=nO({x:u,filter:e,strides:r,pad:s==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),o==="channelsFirst"&&(u=Ye(u,[0,3,1,2])),u})}function KL(n,e,t,r=[1,1,1],s="valid",o,a){return Y(()=>{if(o==null&&(o=Pr()),Dt(o),n.rank!==4&&n.rank!==5)throw new W(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new W(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=dI(n,o);if(s==="causal")throw new ze("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=tA(i,e,r,s==="same"?"same":"valid","NDHWC",a),t!=null&&(i=Vr(i,t)),o==="channelsFirst"&&(i=Ye(i,[0,4,1,2,3])),i})}class Bd extends Ge{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Bd.verifyArgs(t),this.rank=e,Yt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ze(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ga(t.kernelSize,e,"kernelSize"),this.strides=Ga(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ar(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Dt(this.dataFormat),this.activation=no(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=xt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Vt(t.biasConstraint),this.biasRegularizer=yt(t.biasRegularizer),this.activityRegularizer=yt(t.activityRegularizer),this.dilationRate=Ga(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new W(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new W(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new W(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Kr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Ix(e.kernelSize,"number",1,3))throw new W(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:to(this.activation),useBias:this.useBias,biasInitializer:vt(this.biasInitializer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class bi extends Bd{constructor(e,t){super(e,t),this.kernel=null,bi.verifyArgs(t),this.filters=t.filters,Yt(this.filters,"filters"),this.kernelInitializer=xt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Vt(t.kernelConstraint),this.kernelRegularizer=yt(t.kernelRegularizer)}build(e){e=et(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[t]}`);const r=e[t],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return Y(()=>{e=_e(e);let r;const s=this.bias==null?null:this.bias.read(),o=uC(this.activation.getClassName());if(o!=null&&this.rank===2)r=Jv(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)r=qL(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=Jv(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=KL(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ze("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=et(e);const t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<r.length;++o){const a=_r(r[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:vt(this.kernelInitializer),kernelRegularizer:ut(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new W(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Bc extends bi{constructor(e){super(2,e),Bc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ix(e.kernelSize,"number",1,2))throw new W(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Bc.className="Conv2D";ce(Bc);class zc extends bi{constructor(e){super(3,e),zc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new W(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}zc.className="Conv3D";ce(zc);class pI extends Bc{constructor(e){if(super(e),this.inputSpec=[new Bt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==4)throw new W("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bt({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return Y(()=>{let r=_e(e);if(r.shape.length!==4)throw new W(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,o=s[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const u=s[a],c=s[i],l=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Xr(u,d,l,this.padding),m=Xr(c,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(r=Ye(r,[0,2,3,1]));let x=U1(r,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ye(x,[0,3,1,2])),this.bias!=null&&(x=Vr(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=et(e);const t=e.slice();let r,s,o;this.dataFormat==="channelsFirst"?(r=1,s=2,o=3):(r=3,s=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return t[r]=this.filters,t[s]=Xr(t[s],u,a,this.padding),t[o]=Xr(t[o],c,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pI.className="Conv2DTranspose";ce(pI);class fI extends zc{constructor(e){if(super(e),this.inputSpec=[new Bt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new W(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=et(e),e.length!==5)throw new W("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new W("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bt({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return Y(()=>{let r=_e(e);if(r.shape.length!==5)throw new W(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,o=s[0];let a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);const c=s[u],l=s[a],h=s[i],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],y=Xr(c,m,d,this.padding),b=Xr(l,g,p,this.padding),v=Xr(h,x,f,this.padding),w=[o,y,b,v,this.filters];this.dataFormat!=="channelsLast"&&(r=Ye(r,[0,2,3,4,1]));let C=sA(r,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Ye(C,[0,4,1,2,3])),this.bias!==null&&(C=Vr(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=et(e);const t=e.slice();let r,s,o,a;this.dataFormat==="channelsFirst"?(r=1,s=2,o=3,a=4):(r=4,s=1,o=2,a=3);const i=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],h=this.strides[1],d=this.strides[2];return t[r]=this.filters,t[s]=Xr(t[s],l,i,this.padding),t[o]=Xr(t[o],h,u,this.padding),t[a]=Xr(t[a],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}fI.className="Conv3DTranspose";ce(fI);class mI extends bi{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new W("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new W("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new W(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yt(t.depthwiseRegularizer),this.depthwiseConstraint=Vt(t.depthwiseConstraint),this.pointwiseInitializer=xt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yt(t.pointwiseRegularizer),this.pointwiseConstraint=Vt(t.pointwiseConstraint)}build(e){if(e=et(e),e.length<this.rank+2)throw new W(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const r=e[t],s=this.kernelSize.concat([r,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Bt({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return Y(()=>{e=_e(e);let r;if(this.rank===1)throw new ze("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ye(e,[0,2,3,1])),r=uw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Vr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Ye(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.pointwiseInitializer=vt(this.pointwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.pointwiseRegularizer=ut(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}}mI.className="SeparableConv";class gI extends mI{constructor(e){super(2,e)}}gI.className="SeparableConv2D";ce(gI);class zd extends bi{constructor(e){super(1,e),zd.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ix(e.kernelSize,"number",1,1))throw new W(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}zd.className="Conv1D";ce(zd);class xI extends Ge{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Y(()=>{if(e=_e(e),this.dataFormat==="channelsLast"){const r=tl(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return tl(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=tl(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return tl(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}xI.className="Cropping2D";ce(xI);class yI extends Ge{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Dt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,k3(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{const t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return Y(()=>{let r=_e(e);const s=r.shape;if(this.dataFormat==="channelsFirst"){r=Ye(r,[0,2,3,1]);const o=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?ws.resizeNearestNeighbor(r,[o,a]):ws.resizeBilinear(r,[o,a]);return Ye(i,[0,3,1,2])}else{const o=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?ws.resizeNearestNeighbor(r,[o,a]):ws.resizeBilinear(r,[o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}yI.className="UpSampling2D";ce(yI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XL(n,e,t=[1,1],r="valid",s,o){return Y(()=>{s==null&&(s=Pr()),Dt(s);let a=Lx(n,s);if(n.rank!==4)throw new W(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new W(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=vg(a,e,t,r==="same"?"same":"valid","NHWC",o),s==="channelsFirst"&&(a=Ye(a,[0,3,1,2])),a})}class vI extends Bd{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=xt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Vt(e.depthwiseConstraint),this.depthwiseRegularizer=yt(e.depthwiseRegularizer)}build(e){if(e=et(e),e.length<4)throw new W(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new W(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const r=e[t],s=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{e=_e(e);let r=XL(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Vr(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=et(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=_r(t,this.kernelSize[0],this.padding,this.strides[0]),a=_r(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,o,a]:[e[0],o,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}}vI.className="DepthwiseConv2D";ce(vI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bI(n,e,t,r){if(Array.isArray(n)){if(e!=null||t!=null)throw new W("When inputs is an array, neither initialState or constants should be provided");r!=null&&(t=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function s(o){return o==null||Array.isArray(o)?o:[o]}return e=s(e),t=s(t),{inputs:n,initialState:e,constants:t}}function wI(n,e,t,r=!1,s,o,a=!1,i=!1){return Y(()=>{const u=e.shape.length;if(u<3)throw new W(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Lr(2,u));e=Ye(e,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=ye(ye(s,"bool"),"float32"),s.rank===u-1&&(s=Rn(s,-1)),s=Ye(s,c)),r&&(e=Yo(e,0),s!=null&&(s=Yo(s,0)));const l=[];let h,d=t;const p=e.shape[0],f=Qo(e);let m;s!=null&&(m=Qo(s));for(let x=0;x<p;++x){const y=f[x],b=Y(()=>n(y,d));if(s==null)h=b[0],d=b[1];else{const v=Y(()=>{const w=m[x],C=Oe(br(w),w),I=le(U(b[0],w),U(d[0],C)),k=d.map((S,N)=>le(U(b[1][N],w),U(S,C)));return{output:I,newStates:k}});h=v.output,d=v.newStates}i&&l.push(h)}let g;return i&&(g=Ss(l,1)),[h,g,d]})}class mo extends Ge{constructor(e){super(e);let t;if(e.cell==null)throw new W("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new zx({cells:e.cell}):t=e.cell,t.stateSize==null)throw new W("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Bt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Lr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){$f(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const r=t[0];let s;if(this.returnSequences?s=[e[0],e[1],r]:s=[e[0],r],this.returnState){const o=[];for(const a of t)o.push([e[0],a]);return[s].concat(o)}else return s}computeMask(e,t){return Y(()=>{Array.isArray(t)&&(t=t[0]);const r=this.returnSequences?t:null;if(this.returnState){const s=this.states.map(o=>null);return[r].concat(s)}else return r})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ze("Constants support is not implemented in RNN yet.");$f(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Bt({shape:[t,null,...r]});const s=[e[0]].concat(e.slice(2));this.cell.build(s);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!rt(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new W(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Bt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Kt([r,s])):this.states_=[Kt([r,this.cell.stateSize])];else if(e==null)He(this.states_),this.keptStates!=null&&(He(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Kt([r,s])):this.states_[0]=Kt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):He(this.states_);for(let s=0;s<this.states_.length;++s){const o=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[r,a];if(!rt(o.shape,i))throw new W(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[s]=o}}this.states_=this.states_.map(s=>es(s.clone()))})}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const o=bI(e,r,s,this.numConstants);e=o.inputs,r=o.initialState,s=o.constants;let a=[],i=[];if(r!=null){t.initialState=r,a=a.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new Bt({shape:c.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof is){const c=[e].concat(a),l=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Y(()=>{const r=t==null?null:t.mask,s=t==null?null:t.training;let o=t==null?null:t.initialState;e=_e(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new W(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},c=wI((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,o,this.goBackwards,r,null,this.unroll,this.returnSequences),l=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,s);const p=this.returnSequences?h:l;return this.returnState?[p].concat(d):p})}getInitialState(e){return Y(()=>{let t=Kt(e.shape);return t=$e(t,[1,2]),t=Oc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?Ef(t,[1,r]):t):this.cell.stateSize>1?[Ef(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===mo.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}static fromConfig(e,t,r={}){const s=t.cell,o=Cs(s,r);return new e(Object.assign(t,{cell:o}))}}mo.className="RNN";ce(mo);class Vd extends Ge{}class Px extends Vd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=no(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=ri([1,eo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ri([1,eo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new W(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>br(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>br(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=rs(U(e,a),this.kernel.read()):o=rs(e,this.kernel.read()),this.bias!=null&&(o=Vr(o,this.bias.read())),i!=null&&(r=U(r,i));let u=le(o,rs(r,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Px.className="SimpleRNNCell";ce(Px);class CI extends mo{constructor(e){e.cell=new Px(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(He(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(He(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return new e(t)}}CI.className="SimpleRNN";ce(CI);class Bx extends Vd{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new W("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Yt(this.units,"units"),this.activation=no(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=no(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=ri([1,eo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ri([1,eo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=et(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new W(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training==null?!1:t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>br(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>br(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(e=U(e,o[0]));let l=rs(e,this.kernel.read());this.useBias&&(l=Vr(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=U(s,a[0]));const h=this.recurrentKernel.read(),[d,p]=rr(h,[2*this.units,this.units],h.rank-1),f=rs(s,d),[m,g,x]=rr(l,3,l.rank-1),[y,b]=rr(f,2,f.rank-1);i=this.recurrentActivation.apply(le(m,y)),u=this.recurrentActivation.apply(le(g,b));const v=rs(U(u,s),p);c=this.activation.apply(le(x,v));const w=le(U(i,s),U(le(1,Et(i)),c));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),recurrentActivation:to(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Bx.className="GRUCell";ce(Bx);class II extends mo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Bx(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(He(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(He(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}II.className="GRU";ce(II);class Wd extends Vd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yt(this.units,"units"),this.activation=no(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=no(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=ri([1,eo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ri([1,eo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=et(e);const r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;s=new(t=class extends Ir{apply(u,c){const l=o.apply([a]),h=new Sx().apply([a]),d=o.apply([a*2]);return Mv(Mv(l,h),d)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Y(()=>{const r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new W(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>br(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>br(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,h;0<this.dropout&&this.dropout<1&&(e=U(e,a[0]));let d=rs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=U(s,i[0])),d=le(d,rs(s,this.recurrentKernel.read())),this.useBias&&(d=Vr(d,this.bias.read()));const[p,f,m,g]=rr(d,4,d.rank-1);u=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=le(U(c,o),U(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=U(h,this.activation.apply(l));return[x,x,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),recurrentActivation:to(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Wd.className="LSTMCell";ce(Wd);class kI extends mo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wd(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(He(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(He(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}kI.className="LSTM";ce(kI);class zx extends Vd{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Y(()=>{e=e;let r=e.slice(1);const s=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(r.splice(0,i.stateSize.length)):s.push(r.splice(0,1));s.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const u=this.cells[i];r=s[i],i===0?a=[e[0]].concat(r):a=[a[0]].concat(r),a=u.call(a,t),o.push(a.slice(1))}r=[];for(const i of o.slice().reverse())r.push(...i);return[a[0]].concat(r)})}build(e){$f(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,s)=>{Lo(`RNNCell_${s}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),s={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),s)}static fromConfig(e,t,r={}){const s=[];for(const o of t.cells)s.push(Cs(o,r));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Af(e)}setWeights(e){const t=[];for(const r of this.cells){const s=r.weights.length,o=e.splice(s);for(let a=0;a<r.weights.length;++a)t.push([r.weights[a],o[a]])}Dx(t)}}zx.className="StackedRNNCells";ce(zx);function ro(n){const{ones:e,rate:t,training:r=!1,count:s=1,dropoutFunc:o}=n,a=()=>o!=null?o(e(),t):mC(e(),t),i=()=>Mc(a,e,r);return!s||s<=1?es(i().clone()):Array(s).fill(void 0).map(i).map(c=>es(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var YL=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(n);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(t[r[s]]=n[r[s]]);return t};class SI extends mo{constructor(e){if(e.unroll)throw new ze("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ze("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Bt({ndim:5})]}call(e,t){return Y(()=>{if(this.cell.dropoutMask!=null&&(He(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(He(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new W("ConvRNN2D cell does not support constants");const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Y(()=>{const{stateSize:t}=this.cell,r=e.shape,s=this.computeSingleOutputShape(r),o=[s[0],...s.slice(2)],a=Kt(o);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),o=[s[0],...s.slice(2)];if(r[0]==null)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Kt(o)):this.states_=[Kt(o)];else if(e==null)He(this.states_),this.keptStates!=null&&(He(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Kt(o)):this.states_[0]=Kt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):He(this.states_);for(let i=0;i<this.states_.length;++i){const u=e[i],c=o;if(!rt(u.shape,c))throw new W(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>es(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:r,kernelSize:s,padding:o,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",c=e[u?3:2],l=e[u?4:3],h=_r(c,s[0],o,a[0],i[0]),d=_r(l,s[1],o,a[1],i[1]);return[...e.slice(0,2),...u?[r,h,d]:[h,d,r]]}}SI.className="ConvRNN2D";class Vx extends Wd{constructor(e){const{filters:t,kernelSize:r,strides:s,padding:o,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Yt(this.filters,"filters"),this.kernelSize=Ga(r,2,"kernelSize"),this.kernelSize.forEach(u=>Yt(u,"kernelSize")),this.strides=Ga(s||1,2,"strides"),this.strides.forEach(u=>Yt(u,"strides")),this.padding=o||"valid",ar(this.padding),this.dataFormat=a||"channelsLast",Dt(this.dataFormat),this.dilationRate=Ga(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>Yt(u,"dilationRate"))}build(e){var t;e=et(e);const r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new W(`The channel dimension of the input should be defined. Found ${e[r]}`);const s=e[r],o=4,a=this.kernelSize.concat([s,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,l=this.filters;u=new(t=class extends Ir{apply(d,p){const f=c.apply([l]),m=po([l]),g=c.apply([l*2]);return kx([f,m,g])}},t.className="CustomInit",t)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Y(()=>{if(e.length!==3)throw new W(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training||!1,s=e[0],o=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>br(s),rate:this.dropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(H,X,Z)=>!X||!X[Z]?H:U(X[Z],H);let l=c(s,u,0),h=c(s,u,1),d=c(s,u,2),p=c(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>br(o),rate:this.recurrentDropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),x=c(o,f,2),y=c(o,f,3);const b=3,[v,w,C,I]=rr(this.kernel.read(),i,b),[k,S,N,E]=this.useBias?rr(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,v,k,this.padding),h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,C,N,this.padding),p=this.inputConv(p,I,E,this.padding);const[R,_,O,F]=rr(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,R),g=this.recurrentConv(g,_),x=this.recurrentConv(x,O),y=this.recurrentConv(y,F);const L=this.recurrentActivation.apply(le(l,m)),B=this.recurrentActivation.apply(le(h,g)),M=le(U(B,a),U(L,this.activation.apply(le(d,x)))),z=U(this.recurrentActivation.apply(le(p,y)),this.activation.apply(M));return[z,z,M]})}getConfig(){const e=super.getConfig(),{units:t}=e,r=YL(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),s)}inputConv(e,t,r,s){const o=Ko(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Vr(o,r,this.dataFormat):o}recurrentConv(e,t){return Ko(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Vx.className="ConvLSTM2DCell";ce(Vx);class NI extends SI{constructor(e){const t=new Vx(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}NI.className="ConvLSTM2D";ce(NI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wx extends Ge{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return r}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e);if(0<this.rate&&this.rate<1){const s=t.training==null?!1:t.training,o=this.getNoiseShape(r);return Mc(()=>mC(r,this.rate,o,this.seed),()=>r,s)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Wx.className="Dropout";ce(Wx);class TI extends Wx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}TI.className="SpatialDropout1D";ce(TI);class EI extends Ge{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Yt(this.units,"units"),this.activation=no(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=xt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Vt(e.kernelConstraint),this.biasConstraint=Vt(e.biasConstraint),this.kernelRegularizer=yt(e.kernelRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=et(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=et(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e),s=uC(this.activation.getClassName());let o;return s!=null?o=rs(r,this.kernel.read(),s,this.bias?this.bias.read():null):(o=rs(r,this.kernel.read()),this.bias!=null&&(o=Vr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:to(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}EI.className="Dense";ce(EI);class RI extends Ge{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=et(e);for(const t of e.slice(1))if(t==null)throw new W(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xs(e,1)]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let r=_e(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){const s=[0];for(let o=2;o<r.rank;++o)s.push(o);s.push(1),r=Ye(r,s)}return $3(r)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}RI.className="Flatten";ce(RI);class $I extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.activation=no(e.activation)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e);return this.activation.apply(r)})}getConfig(){const e={activation:to(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}$I.className="Activation";ce($I);class AI extends Ge{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Y(()=>(e=_e(e),E3(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}AI.className="RepeatVector";ce(AI);class DI extends Ge{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const r="Total size of new array must be unchanged.",s=t.slice();let o=1,a=null;for(let u=0;u<s.length;++u){const c=s[u];if(this.isUnknown(c))if(a===null)a=u;else throw new W("Can only specifiy one unknown dimension.");else o*=c}const i=Xs(e);if(a!==null){if(o===0||i%o!==0)throw new W(r);s[a]=i/o}else if(i!==o)throw new W(r);return s}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e),s=r.shape,o=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return q(r,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}DI.className="Reshape";ce(DI);class FI extends Ge{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Lr(1,e.dims.length+1);if(!rt(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Bt({ndim:this.dims.length+1})]}computeOutputShape(e){e=et(e);const t=e.slice();return this.dims.forEach((r,s)=>{t[s+1]=e[r]}),t}call(e,t){return Ye(_e(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}FI.className="Permute";ce(FI);class OI extends Ge{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const r=_e(e);return wf(Dl(r,this.maskValue),-1)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e),a=wf(Dl(r,this.maskValue),-1,!0);return U(r,ye(a,r.dtype))})}}OI.className="Masking";ce(OI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _I extends Ge{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ot(e.inputLength))}this.inputDim=e.inputDim,Yt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Yt(this.outputDim,"outputDim"),this.embeddingsInitializer=xt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yt(e.embeddingsRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.embeddingsConstraint=Vt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Y(()=>this.maskZero?(e=_e(e),Dl(e,Qe(e))):null)}computeOutputShape(e){if(e=et(e),this.inputLength==null)return[...e,this.outputDim];const t=ot(this.inputLength);if(t.length!==e.length-1)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let s=0;s<t.length;++s){const o=t[s],a=e[s+1];if(o!=null&&a!=null&&o!==a)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[r]=a),r++}}return[e[0],...t,this.outputDim]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let r=_e(e);r.dtype!=="int32"&&(r=ns(r,"int32"));const s=fC(this.embeddings.read(),q(r,[r.size]));return q(s,et(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vt(this.embeddingsInitializer),embeddingsRegularizer:ut(this.embeddingsRegularizer),activityRegularizer:ut(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}_I.className="Embedding";ce(_I);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pa extends Ge{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ze}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const r=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const o=e[e.length-t.length+s],a=t[s];if(o==null||a==null||o<0||a<0)r.push(null);else if(o===1)r.push(a);else if(a===1)r.push(o);else{if(o!==a)throw new W("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(o)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[et(e)]),e=e,e.length<2)throw new W(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Ks(t),t.length>1)throw new W(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);r=this.computeElementwiseOpOutputShape(r,a)}const s=e.map(o=>o.length);e.indexOf(null)===-1&&Ks(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Y(()=>{if(e=e,this.reshapeRequired){const r=[],s=e.map(o=>o.rank);if(s.indexOf(null)===-1){const o=eo(s);for(let a of e){const i=a.rank;for(let u=0;u<o-i;++u)a=Oc(a,1);r.push(a)}return this.mergeFunction(r)}else{let o=!1;for(const u of e){const c=u.rank;if(c==null){const l=u.shape,h=l[0],d=l.slice(1).concat([h]);let p=q(u,[h].concat(Xs(l.slice(1))));p=Ye(p,[1,0]),p=q(p,d),r.push(p),o=!0}else if(c>1){const l=Lr(1,c).concat([0]);r.push(Ye(u,l)),o=!0}else r.push(u)}let a=this.mergeFunction(r);const i=a.rank;if(o){if(i==null){const u=a.shape,c=u.length,l=u[c-1],h=[l].concat(u.slice(0,u.length-1));a=q(Ye(q(a,[-1,l]),[1,0]),h)}else if(i>1){const u=[i-1].concat(Lr(0,i-1));a=Ye(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){const o=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let r=[];for(const s of e)s!=null&&s[0]!==null&&r.push(s[0]);return r=Ks(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return Y(()=>{if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an Array");if(!Array.isArray(e))throw new W("`inputs` should be an Array");if(t.length!==e.length)throw new W(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Rn(s,0));let r=t[0];for(let s=1;s<t.length-1;++s)r=ks(r,t[s]);return r})}}class MI extends pa{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return t})}}MI.className="Add";ce(MI);class LI extends pa{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=U(t,e[r]);return t})}}LI.className="Multiply";ce(LI);class PI extends pa{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return U(1/e.length,t)})}}PI.className="Average";ce(PI);class BI extends pa{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=ho(t,e[r]);return t})}}BI.className="Maximum";ce(BI);class zI extends pa{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=hu(t,e[r]);return t})}}zI.className="Minimum";ce(zI);class VI extends pa{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new W("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const s of e)if(s!=null){t=!1;break}if(t)return;const r=[];for(let s=0;s<e.length;++s){const o=e[s].slice();o.splice(this.axis,1);let a=!1;for(const i of r)if(rt(i,o)){a=!0;break}a||r.push(o)}if(r.length>1)throw new W("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Y(()=>kx(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new W("A `Concatenate` layer should be called on a list of inputs.");const t=e,r=t[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(const o of t.slice(1)){if(r[s]==null||o[s]==null){r[s]=null;break}r[s]+=o[s]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new W("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new W("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new W(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Y(()=>{let r=!0;if(t.forEach(a=>{if(a!=null){r=!1;return}}),r)return null;const s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ye(br(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Rn(t[a],-1)):s.push(t[a]);const o=Dn(s,this.axis);return V1(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}VI.className="Concatenate";ce(VI);function Vi(n,e){for(;n<0;)n+=e;return n}function QL(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ze("batchDot is not implemented for tensors of 4D or higher rank yet");if($(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),$(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ze("batchDot is not implemented for complex64-type Tensors yet.");const r=n.shape.length,s=e.shape.length;t==null&&(t=[r-1,s-2]);const o=t;return Y(()=>{let a;if(r>s){a=r-s;const u=[];for(let c=0;c<a;++c)u.push(1);e=q(e,e.shape.concat(u))}else if(s>r){a=s-r;const u=[];for(let c=0;c<a;++c)u.push(1);n=q(n,n.shape.concat(u))}else a=0;let i;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?i=$e(U(n,e),o[0]):i=$e(U(Ye(n,[1,0]),e),o[1]);else{const u=o[0]!==n.shape.length-1,c=o[1]===e.shape.length-1;i=tt(n,e,u,c)}if(a>0){let u;r>s?u=r+s-3:u=r-1;const c=[];for(let l=u;l<u+a;++l)c.push(l);i=Ec(i,c)}return i.shape.length===1&&(i=Rn(i,1)),i})}class WI extends pa{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],r=e[1];if(t.length>3||r.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);if(t[s[0]]!==r[s[1]])throw new W(`Dimension incompatibility: ${t[s[0]]} !== ${r[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new W(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((o,a)=>Vi(o,e[a].shape.length)):s=[Vi(this.axes,t.shape.length),Vi(this.axes,r.shape.length)],this.normalize&&(t=Bl(t,s[0]),r=Bl(r,s[1])),QL(t,r,s)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[Vi(this.axes,e.length),Vi(this.axes,t.length)],r}computeOutputShape(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new ze("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);t.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);const o=t.concat(r);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WI.className="Dot";ce(WI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class UI extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e);return Mc(()=>le(_d(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}}UI.className="GaussianNoise";ce(UI);class GI extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);const r=_e(e);return this.rate>0&&this.rate<1?Mc(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return U(r,_d(r.shape,1,o))},()=>r,t.training||!1):r})}}GI.className="GaussianDropout";ce(GI);class HI extends Ge{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||_e(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return Mc(()=>{const o=_e(e),i=-1.6732632423543772*1.0507009873554805;let u=ua(Tc(r),this.rate);u=ns(u,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-c*i*this.rate,h=le(U(o,u),U(le(u,-1),i));return le(U(h,c),l)},()=>_e(e),t.training||!1)}return e})}}HI.className="AlphaDropout";ce(HI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gu(n,e,t,r,s,o=.001){let a;if(n.rank===2)a=A$(n,e,t,r,s,o);else if(n.rank===3)a=F$(n,e,t,r,s,o);else if(n.rank===4)a=_$(n,e,t,r,s,o);else throw new ze(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function ZL(n,e,t,r,s=.001){return Y(()=>{const o=Ng(n,r),a=o.mean,i=o.variance;return[gu(n,a,i,t,e,s),a,i]})}function JL(n,e,t,r,s=.001){return Y(()=>{const o=Ng(n,r),a=o.mean,i=o.variance,u=[];for(const f of Lr(0,n.rank))r.indexOf(f)!==-1?u.push(1):u.push(n.shape[f]);const c=q(a,u),l=q(i,u),h=e==null?null:q(e,u),d=t==null?null:q(t,u);return[gu(n,c,l,d,h,s),a,i]})}function eP(n,e,t,r,s=.001){return rt(r.slice().sort(),Lr(0,n.rank-1))?ZL(n,e,t,r,s):JL(n,e,t,r,s)}class jI extends Ge{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.movingMeanInitializer=xt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Vt(e.betaConstraint),this.gammaConstraint=Vt(e.gammaConstraint),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer)}build(e){e=et(e);const t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new W(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Bt({ndim:e.length,axes:{[t]:r}})];const s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Y(()=>{const r=t.training==null?!1:t.training,s=_e(e),o=s.shape,a=o.length,i=Lr(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);const c=Zo(1,a);c[u]=o[u];const l=i.slice();l.sort();const h=!rt(l,Lr(0,a).slice(0,a-1)),d=()=>{if(h){const y=q(this.movingMean.read(),c),b=q(this.movingVariance.read(),c),v=this.center?q(this.beta.read(),c):null,w=this.scale?q(this.gamma.read(),c):null;return gu(s,y,b,v,w,this.epsilon)}else return gu(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return d();const[p,f,m]=eP(s,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(y,b,v)=>{Y(()=>{const w=1-v,C=y.read(),I=U(Oe(C,b),w);y.write(Oe(C,I))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),movingMeanInitializer:vt(this.movingMeanInitializer),movingVarianceInitializer:vt(this.movingVarianceInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}jI.className="BatchNormalization";ce(jI);class qI extends Ge{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=xt(e.betaInitializer||"zeros"),this.gammaInitializer=xt(e.gammaInitializer||"ones"),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=et(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Ks(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(o=>e[o]),s=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const r=_e(e),s=r.shape,o=s.length;return Y(()=>{let{mean:i,variance:u}=Ng(r,this.axis,!0);const c=Zo(1,o);for(const m of this.axis)c[m]=s[m];const l=m=>m!=null&&m.shape.length!==o?q(m,c):m;let h=this.scale?l(this.gamma.read()):null,d=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(s[m]),f.push(1)):(p.push(1),f.push(s[m]));return i=Dr(i,p),u=Dr(u,p),h!=null&&(h=Dr(h,f)),d!=null&&(d=Dr(d,f)),gu(r,i,u,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}qI.className="LayerNormalization";ce(qI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tP(n,e,t){return Y(()=>{if(n.rank!==4)throw new W(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new W("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Pr()),t!=="channelsLast"&&t!=="channelsFirst")throw new W(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return t==="channelsFirst"?r=[[0,0],[0,0],e[0],e[1]]:r=[[0,0],e[0],e[1],[0,0]],Tg(n,r)})}class KI extends Ge{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Pr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new W(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new W(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new W(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Bt({ndim:4})]}computeOutputShape(e){e=et(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return Y(()=>tP(_e(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}KI.className="ZeroPadding2D";ce(KI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ud(n,e,t,r,s,o){return Y(()=>{Dt(s),lC(o),ar(r),t==null&&(t=[1,1]),r==null&&(r="valid"),s==null&&(s=Pr()),o==null&&(o="max"),n=Lx(n,s);let a;const i=r==="same"?"same":"valid";return o==="max"?a=Sg(n,e,t,i):a=mg(n,e,t,i),s==="channelsFirst"&&(a=Ye(a,[0,3,1,2])),a})}function XI(n,e,t,r,s,o){return Y(()=>{Dt(s),lC(o),ar(r),t==null&&(t=[1,1,1]),r==null&&(r="valid"),s==null&&(s=Pr()),o==null&&(o="max"),n=dI(n,s);let a;const i=r==="same"?"same":"valid";return o==="max"?a=vD(n,e,t,i):a=w$(n,e,t,i),s==="channelsFirst"&&(a=Ye(a,[0,4,1,2,3])),a})}class YI extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new W(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Yt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new W(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Yt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ar(this.padding),this.inputSpec=[new Bt({ndim:3})]}computeOutputShape(e){e=et(e);const t=_r(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Y(()=>{this.invokeCallHook(e,t),e=Oc(_e(e),2);const r=this.poolingFunction(_e(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ec(r,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class QI extends YI{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),Ud(e,t,r,s,o,"max")}}QI.className="MaxPooling1D";ce(QI);class ZI extends YI{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),Ud(e,t,r,s,o,"avg")}}ZI.className="AveragePooling1D";ce(ZI);class JI extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new W(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Dt(this.dataFormat),ar(this.padding),this.inputSpec=[new Bt({ndim:4})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=_r(t,this.poolSize[0],this.padding,this.strides[0]),r=_r(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class e2 extends JI{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),Ud(e,t,r,s,o,"max")}}e2.className="MaxPooling2D";ce(e2);class t2 extends JI{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),Ud(e,t,r,s,o,"avg")}}t2.className="AveragePooling2D";ce(t2);class n2 extends Ge{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new W(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Yt(this.poolSize,"poolSize"),Yt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Dt(this.dataFormat),ar(this.padding),this.inputSpec=[new Bt({ndim:5})]}computeOutputShape(e){e=et(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=_r(t,this.poolSize[0],this.padding,this.strides[0]),r=_r(r,this.poolSize[1],this.padding,this.strides[1]),s=_r(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,s]:[e[0],t,r,s,e[4]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(_e(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class r2 extends n2{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),XI(e,t,r,s,o,"max")}}r2.className="MaxPooling3D";ce(r2);class s2 extends n2{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Dt(o),ar(s),XI(e,t,r,s,o,"avg")}}s2.className="AveragePooling3D";ce(s2);class o2 extends Ge{constructor(e){super(e),this.inputSpec=[new Bt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ze}}class a2 extends o2{constructor(e){super(e||{})}call(e,t){return Y(()=>{const r=_e(e);return _t(r,1)})}}a2.className="GlobalAveragePooling1D";ce(a2);class i2 extends o2{constructor(e){super(e||{})}call(e,t){return Y(()=>{const r=_e(e);return Or(r,1)})}}i2.className="GlobalMaxPooling1D";ce(i2);class u2 extends Ge{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Dt(this.dataFormat),this.inputSpec=[new Bt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ze}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class c2 extends u2{call(e,t){return Y(()=>{const r=_e(e);return this.dataFormat==="channelsLast"?_t(r,[1,2]):_t(r,[2,3])})}}c2.className="GlobalAveragePooling2D";ce(c2);class l2 extends u2{call(e,t){return Y(()=>{const r=_e(e);return this.dataFormat==="channelsLast"?Or(r,[1,2]):Or(r,[2,3])})}}l2.className="GlobalMaxPooling2D";ce(l2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class h2 extends Ge{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){const s=t.layer,o=Cs(s,r);delete t.layer;const a={layer:o};return Object.assign(a,t),new e(a)}}class d2 extends h2{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=et(e),e.length<3)throw new W(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=et(e);const t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),s=e[1];return[r[0],s].concat(r.slice(1))}call(e,t){return Y(()=>(e=_e(e),wI((a,i)=>[_e(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}d2.className="TimeDistributed";ce(d2);function nP(n){da(I3,"BidirectionalMergeMode",n)}const rP="concat";class p2 extends h2{constructor(e){super(e);const t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=Cs(r),t.goBackwards=t.goBackwards!==!0;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Cs(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?rP:e.mergeMode,nP(this.mergeMode),e.weights)throw new ze("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,s,o;return this.returnState&&(o=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,s=[r]):this.mergeMode==null?s=[r,r.slice()]:s=[r],this.returnState?this.mergeMode==null?s.concat(o).concat(o.slice()):[r].concat(o).concat(o.slice()):$n(s)}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const o=bI(e,r,s,this.numConstants);if(e=o.inputs,r=o.initialState,s=o.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&s==null)return super.apply(e,t);const a=[],i=[];if(r!=null){const c=r.length;if(c%2>0)throw new W("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,a.push(...r);const l=r.map(h=>new Bt({shape:h.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),i.push(...l)}if(s!=null)throw new ze("Support for constants in Bidirectional layers is not implemented yet.");const u=a[0]instanceof is;for(const c of a)if(c instanceof is!==u)throw new W("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(a),l=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Y(()=>{const r=t.initialState;let s,o;if(r==null)s=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(o.slice(1))),s=s[0],o=o[0]),this.returnSequences&&(o=Yo(o,1));let i;return this.mergeMode==="concat"?i=kx([s,o]):this.mergeMode==="sum"?i=le(s,o):this.mergeMode==="ave"?i=U(.5,le(s,o)):this.mergeMode==="mul"?i=U(s,o):this.mergeMode==null&&(i=[s,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Lo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Lo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(o).concat(o):[r].concat(o).concat(o)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const r=Cs(t.layer);if(delete t.layer,t.numConstants!=null)throw new ze("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=r,new e(s)}}p2.className="Bidirectional";ce(p2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class f2 extends Ge{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Y(()=>(e=_e(e),e.dtype!=="float32"&&(e=ns(e,"float32")),le(U(e,this.scale),this.offset)))}}f2.className="Rescaling";ce(f2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:sP,cropAndResize:oP}=ws;class m2 extends Ge{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,s,o,a,i,u){return Y(()=>{let c,l=!1;const h=t/a,d=r/i,p=(s+t)/a,f=(o+r)/i,m=[h,d,p,f],g=[];e.rank===3?(l=!0,c=Ss([e])):c=e;for(let w=0;w<c.shape[0];w++)g.push(m);const x=A1(g,[g.length,4]),y=du(0,g.length,1,"int32"),v=oP(c,x,y,[s,o],"nearest");return ns(l?_e(Qo(v)):v,u)})}upsize(e,t,r,s){return Y(()=>{const o=sP(e,[t,r]);return ns(o,s)})}call(e,t){return Y(()=>{const r=_e(e),s=r.dtype,o=r.shape,a=o[o.length-3],i=o[o.length-2];let u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(r,u,c,this.height,this.width,a,i,s):this.upsize(e,this.height,this.width,s)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=et(e);const t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}m2.className="CenterCrop";ce(m2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aP(n,e,t,r){let s=_e(n);if(s.dtype!=="int32"&&(s=ns(s,"int32")),e==="int")return s;const o=s.shape;if(s.rank===0&&(s=Rn(s,-1)),e==="oneHot"&&s.shape[s.shape.length-1]!==1&&(s=Rn(s,-1)),s.rank>2)throw new W(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(e),i=s;let u;if(typeof r<"u"&&e==="count"?u=wv(i,r,t,a):u=wv(i,[],t,a),e!=="tfIdf")return u;if(r)return U(u,r);throw new W("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class g2 extends Ge{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=et(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Y(()=>{e=_e(e),e.dtype!=="int32"&&(e=ns(e,"int32"));let r;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new W(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=_e(t.countWeights)}const s=Or(e),o=$l(e),a=or(this.numTokens,s).bufferSync().get(0),i=ua(o,0).bufferSync().get(0);if(!(a&&i))throw new W(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return aP(e,this.outputMode,this.numTokens,r)})}}g2.className="CategoryEncoding";ce(g2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const iP=["bilinear","nearest"],e0=new Set(iP);class x2 extends Ge{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(e0.has(e.interpolation))this.interpolation=e.interpolation;else throw new W(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=et(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Y(()=>{const r=[this.height,this.width];if(this.interpolation==="bilinear")return ws.resizeBilinear(e,r,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ws.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...e0]} are supported`)})}}x2.className="Resizing";ce(x2);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class y2{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}y2.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class v2 extends Ge{constructor(e){super(e),this.randomGenerator=new y2(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}v2.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const uP=["bilinear","nearest"],t0=new Set(uP);class b2 extends v2{constructor(e){super(e);const{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new W(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new W(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new W(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r)if(t0.has(r))this.interpolation=r;else throw new W(`Invalid interpolation parameter: ${r} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=et(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Y(()=>{const r=_e(e);this.imgHeight=r.shape[r.shape.length-3];const s=r.shape[r.shape.length-2];this.widthFactor=Tc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*s;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return ws.resizeBilinear(e,a);case"nearest":return ws.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...t0]} are supported`)}})}}b2.className="RandomWidth";ce(b2);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP=Q();cP.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var n0;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(n0||(n0={}));var r0;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(r0||(r0={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var s0;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(s0||(s0={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP=gw;class Gd extends ym{nextDataId(){return Gd.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new _b(this,Gr())}write(e,t,r){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&Zn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Ru(r[0])){const o=r.map(a=>qs(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,r,s,o){this.data.set(e,{values:t,dtype:s,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){const s=this.readSync(r.real.dataId),o=this.readSync(r.imag.dataId);return Ns(s,o)}return OE(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Js(s));return We(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}makeOutput(e,t,r){return Gr().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=En();return e(),{kernelMs:En()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){we([e],"where");const t=this.readSync(e.dataId);return lP(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Gd.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const hP=n=>{const{x:e}=n.inputs,t=n.backend;we(e,"abs");let r=new Float32Array(ne(e.shape));const s=t.data.get(e.dataId).values;return r=w2(s),t.makeOutput(r,e.shape,e.dtype)},dP={kernelName:wh,backendName:"cpu",kernelFunc:hP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n){return(e,t,r,s,o)=>{const a=Be(e,t),i=a.length,u=Re(a),c=ne(a),l=hn(o,c),h=e.length,d=t.length,p=Re(e),f=Re(t),m=ti(e,a),g=ti(t,a);if(m.length+g.length===0)for(let x=0;x<l.length;++x)l[x]=n(r[x%r.length],s[x%s.length]);else for(let x=0;x<l.length;++x){const y=pi(x,i,u),b=y.slice(-h);m.forEach(I=>b[I]=0);const v=Jr(b,h,p),w=y.slice(-d);g.forEach(I=>w[I]=0);const C=Jr(w,d,f);l[x]=n(r[v],s[C])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,i=t.makeTensorInfo(r.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(r.shape,"float32",o),imag:t.makeTensorInfo(s.shape,"float32",a)},i}const pP={kernelName:Am,backendName:"cpu",kernelFunc:Pn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n,e,t="float32"){if(t==="complex64"){const s=Gl(n,e,"float32"),o=Gl(n,e,"float32");return Pn({inputs:{real:s,imag:o},backend:n})}const r=dn(ne(e),t);return n.makeTensorInfo(e,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const fP={kernelName:Yu,backendName:"cpu",kernelFunc:us};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.real,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const mP={kernelName:tg,backendName:"cpu",kernelFunc:Jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=ia([0],t),[o,a]=Ft((i,u)=>i!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}function so(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return us({inputs:{x:s},backend:t});const l=Gl(t,s.shape,s.dtype),h=so({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),d=Pn({inputs:{real:h,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),d}if(s.dtype==="complex64"){const l=Jo({inputs:{input:s},backend:t}),h=so({inputs:{x:l},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(l),h}if(!Pb(s.dtype,o)){const l=us({inputs:{x:s},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:o}}const a=t.data.get(s.dataId).values,[i,u,c]=C2(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}const gP={kernelName:Lu,backendName:"cpu",kernelFunc:so};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n,e,t,r){return t==null?({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;we([a,i],n);const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=a.dtype==="string"?Ts(c):c,d=a.dtype==="string"?Ts(l):l,p=r||a.dtype,[f,m]=e(a.shape,i.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=so({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),h=l.complexTensorInfos.real,d=l.complexTensorInfos.imag,p=u.data.get(h.dataId).values,f=u.data.get(d.dataId).values,m=so({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,b=u.data.get(x.dataId).values,v=u.data.get(y.dataId).values,[w,C,I]=t(a.shape,i.shape,p,f,b,v),k=u.makeTensorInfo(I,"float32",w),S=u.makeTensorInfo(I,"float32",C),N=Pn({inputs:{real:k,imag:S},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(k),u.disposeIntermediateTensorInfo(S),N}else{const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=r||a.dtype,[d,p]=e(a.shape,i.shape,c,l,h);return u.makeTensorInfo(p,h,d)}}}function Ux(n){return(e,t,r,s,o,a)=>{const i=Be(e,t),u=ne(i),c=i.length,l=Re(i),h=hn("float32",u),d=hn("float32",u),p=ti(e,i),f=ti(t,i),m=Ns(r,s),g=Ns(o,a),x=e.length,y=Re(e),b=t.length,v=Re(t);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const C=w%m.length,I=w%g.length,k=n(m[C*2],m[C*2+1],g[I*2],g[I*2+1]);h[w]=k.real,d[w]=k.imag}else for(let w=0;w<h.length;w++){const C=pi(w,c,l),I=C.slice(-x);p.forEach(R=>I[R]=0);const k=Jr(I,x,y),S=C.slice(-b);f.forEach(R=>S[R]=0);const N=Jr(S,b,v),E=n(m[k*2],m[k*2+1],g[N*2],g[N*2+1]);h[w]=E.real,d[w]=E.imag}return[h,d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2=Ft((n,e)=>n+e),xP=Ux((n,e,t,r)=>({real:n+t,imag:e+r})),si=Ut(fi,I2,xP),yP={kernelName:fi,backendName:"cpu",kernelFunc:si};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gx(n,e,t,r,s){const o=ne(r),a=dn(s,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function k2(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=We([s,t],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S2=Ft((n,e)=>n&e),vP=Ut($m,S2),bP={kernelName:$m,backendName:"cpu",kernelFunc:vP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(n){return(e,t,r)=>{const s=Tt(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n,e,t){const r=ls(e);return go(n,r,t)}function go(n,e,t){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;we(a,n);const i=o,u=i.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=Ts(u)}else c=u;const l=t||a.dtype,h=e(c,l,s);return i.makeTensorInfo(a.shape,l,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N2=ls(n=>Math.ceil(n)),wP=go(Pu,N2),CP={kernelName:Pu,backendName:"cpu",kernelFunc:wP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n,e,t,r){const s=Tt(t,ne(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const i=ne(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?Ts(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let h=0;h<a.shape[1];++h)s[l+h]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E2=Ft((n,e)=>n===e?1:0),R2=Ut(Mh,E2,null,"bool"),IP={kernelName:Mh,backendName:"cpu",kernelFunc:R2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $2=ls(n=>Math.exp(n)),A2=go(Hu,$2,"float32"),kP={kernelName:Hu,backendName:"cpu",kernelFunc:A2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D2=ls(n=>Math.expm1(n)),SP=go(ju,D2),NP={kernelName:ju,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F2=ls(n=>Math.floor(n)),TP=go(qu,F2),EP={kernelName:qu,backendName:"cpu",kernelFunc:TP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2=Ft((n,e)=>Math.floor(n/e)),RP=Ut(Ku,O2,null,"int32"),$P={kernelName:Ku,backendName:"cpu",kernelFunc:RP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,e,t,r,s,o,a,i,u){const c=We([r,o],t);for(let l=0;l<r;l++){const h=[];let d=0;for(let p=0;p<s;p++){const f=n[l*s+p];d+=f*a[p],h.push(f)}if(d<0||d>=u/o)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<o;p++)c.values[l*o+p]=e.get(...e.indexToLoc(d*o+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,e,t){const r=We(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(r.values[s]=n.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L2=Ft((n,e)=>n>e?1:0),AP=Ut(zh,L2,null,"bool"),DP={kernelName:zh,backendName:"cpu",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P2=Ft((n,e)=>n>=e?1:0),FP=Ut(Xu,P2,null,"bool"),OP={kernelName:Xu,backendName:"cpu",kernelFunc:FP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B2=Ft((n,e)=>n<e?1:0),_P=Ut(Wh,B2,null,"bool"),MP={kernelName:Wh,backendName:"cpu",kernelFunc:_P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z2=Ft((n,e)=>n<=e?1:0),LP=Ut(Uh,z2,null,"bool"),PP={kernelName:Uh,backendName:"cpu",kernelFunc:LP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n,e,t){const r=(e-n)/(t-1),s=dn(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W2=ls(n=>Math.log(n)),BP=go(ec,W2),zP={kernelName:ec,backendName:"cpu",kernelFunc:BP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e,t,r){const s=hn(r,ne(t));for(let o=0;o<s.length;++o){const a=o*e;let i=n[a];for(let u=0;u<e;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G2=Ft((n,e)=>Math.max(n,e)),VP=Ut(nc,G2),WP={kernelName:nc,backendName:"cpu",kernelFunc:VP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H2=Ft((n,e)=>Math.min(n,e)),UP=Ut(rc,H2),GP={kernelName:rc,backendName:"cpu",kernelFunc:UP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hx=Ft((n,e)=>n*e),HP=Ux((n,e,t,r)=>({real:n*t-e*r,imag:n*r+e*t})),Hd=Ut(oc,Hx,HP),jP={kernelName:oc,backendName:"cpu",kernelFunc:Hd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n,e,t){const r=uo(-1,t);return Hx([],e,r,n,t)}function qP(n){const{inputs:e,backend:t}=n,{x:r}=e;we(r,"neg");const s=t.data.get(r.dataId).values,[o,a]=j2(s,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,o)}const KP={kernelName:ed,backendName:"cpu",kernelFunc:qP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q2=Ft((n,e)=>n!==e?1:0),XP=Ut(td,q2,null,"bool"),YP={kernelName:td,backendName:"cpu",kernelFunc:XP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,e,t,r,s){const o=e.length,a=ne(e),i=Re(e),u=Re(s),c=hn(t,ne(s));for(let l=0;l<a;++l){const h=pi(l,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[r[f]];const p=Jr(d,o,u);c[p]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n){const{inputs:e,attrs:t,backend:r}=n,{x:s}=e,{perm:o}=t;we(s,"transpose");const a=s.shape.length,i=new Array(a);for(let h=0;h<i.length;h++)i[h]=s.shape[o[h]];const u=r.data.get(s.dataId).values,c=jx(u,s.shape,s.dtype,o,i);return{dataId:r.write(c,i,s.dtype),shape:i,dtype:s.dtype}}const QP={kernelName:Va,backendName:"cpu",kernelFunc:On};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e,t,r){const[s,o]=Zt(n,r),a=Gn(e,"int32"),i=dn(ne(s),a),u=ne(o);for(let c=0;c<i.length;++c){const l=c*u;let h=1;for(let d=0;d<u;++d)h*=t[l+d];i[c]=h}return{outVals:i,outShape:s,outDtype:a}}function ZP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;we(s,"prod");const i=s.shape.length,u=Ue(o,s.shape),c=bt(u,i);let l=u,h=s;const d=[];c!=null&&(h=On({inputs:{x:s},backend:t,attrs:{perm:c}}),d.push(h),l=At(l.length,i));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=K2(h.shape,h.dtype,p,l);let x=m;return a&&(x=Mt(m,u)),d.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,g,f)}const JP={kernelName:id,backendName:"cpu",kernelFunc:ZP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=pi(s,e.length,Re(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function tB(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function nB(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);tB(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let h=1;h<u+1;++h)i[c].push(h*l)}for(let c=0;c<n.length;++c){let l=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let x=l;x<h;++x)i[f].push(p[x+1]+g)}l=p[l],h=p[h]}h!==l&&(s.push([l,h]),o+=h-l)}return{outSplits:i,valueSlices:s,numValues:o}}function rB(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=Tt("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function o0(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function sB(n,e,t,r,s,o){const a=o0(e,2)[1],i=o0(o,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let h=0;h<r;++h)s[u*i+h]=n[l*a+h];++u}}function oB(n,e,t,r,s){const o=e.slice();o[0]=s;const a=Tt(t,ne(o)),i=n.length,u=i===0?0:i/e[0];return sB(n,e,r,u,a,o),[a,o]}function X2(n,e,t,r,s,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(eB(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:h,numValues:d}=nB(o,a,n,c),p=rB(l),f=oB(t,r,s,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0=2147483647;function Y2(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=l.length===0?1:l[0],d=Tt("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=i?n[0]:n[g],y=u?r[0]:r[g],b=c?o[0]:o[g];if(b===0)throw new Error("Requires delta != 0");let v;if(b>0&&y<x||b<0&&y>x)v=0;else if(v=Math.ceil(Math.abs((y-x)/b)),v>a0)throw new Error(`Requires ((limit - start) / delta) <= ${a0}`);d[g+1]=d[g]+v}const p=d[h],f=Tt(t,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let y=i?n[0]:n[g];const b=c?o[0]:o[g];for(let v=0;v<x;++v)f[m++]=y,y+=b}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cr=Rr;class Hl{constructor(e,t,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=_w(l),this.raggedRank=Mw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===cr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===cr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case cr.VALUE_ROWIDS:return Hl.getMaxWidthValueRowID(t);case cr.ROW_SPLITS:return Hl.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${cr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return u0(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;Lw(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Ow(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=t)o.push(a);for(let i=s;i<e;++i)o.push(-1);return $(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=t[i];l===-1&&(c=0);for(let h=0;h<c;++h)a.push(l),l+=r;for(let h=0;h<u-c;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];a.push(c);for(let l=1;l<o;++l){const h=e[l];if(h===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case cr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case cr.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${cr[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case cr.FIRST_DIM_SIZE:return e[0];case cr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case cr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${cr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=u0(r,!1),a=Tt(this.valuesDType,ne(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=ne(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const f=this.defaultValueShape;Y(()=>{const m=q(l,f);l=nu(m,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let m=f<c?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=o.subarray(h*u),x=a.subarray(d*u),y=(p-d)*u;i0(x,g,y)}if(f>=c){const g=r.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*u);i0(g,l,u),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function i0(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function u0(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function Q2(n,e,t,r,s,o,a,i,u,c){return new Hl(n,e,t,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return dn(0,r);const i=Math.abs(Math.ceil((e-n)/t)),u=dn(i,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J2=ls(n=>1/Math.sqrt(n)),aB=go(hc,J2),iB={kernelName:hc,backendName:"cpu",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(n,e,t,r,s,o,a,i,u,c){const l=[r/s,s],h=n.values,d=e.values;if(r===0)return We(t,e.dtype);const p=u instanceof sn?u:We(l,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<o;f++){const m=[];let g=0;for(let x=0;x<a;x++){const y=h[f*a+x];m.push(y),g+=y*i[x]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let x=0;x<s;x++)c?p.values[g*s+x]+=d[f*s+x]:p.values[g*s+x]=e.rank===0?d[0]:d[f*s+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uB=ls(n=>1/(1+Math.exp(-n))),ek=at(gc,n=>1/(1+Math.exp(-n))),cB={kernelName:gc,backendName:"cpu",kernelFunc:ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e,t,r,s){const o=Jg(r,e,t),a=ne(t),i=Re(r);if(o){const h=ex(e,i);return s==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const u=s==="string"?Ts(n):n,c=We(r,s,u),l=We(t,s);for(let h=0;h<l.size;++h){const d=l.indexToLoc(h),p=d.map((f,m)=>f+e[m]);l.set(c.get(...p),...d)}return s==="string"?rC(l.values):l.values}function ea(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r;we(s,"slice");const[i,u]=$d(s,o,a);Qg(s,i,u);const c=t.data.get(s.dataId).values,l=tk(c,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,l)}const lB={kernelName:pd,backendName:"cpu",kernelFunc:ea};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e,t,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),h=e[1];if(u===0){if(i!==0)throw new Error(Gw(i));const g=Tt(t,0),x=Tt(s,0);return[g,[0,h],x,c,l]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const x=n[g*h];if(x<0)throw new Error(Hw(g,x));if(x>=u)throw new Error(jw(g,x,u));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<u;++g){const x=f[g]===0;c[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=r;for(let y=0;y<i;++y)l[y]=y;return[g,[i,h],x,c,l]}else{const g=f[u-1],x=Tt(t,g*h),y=Tt(s,g),b=new Array(u).fill(0);for(let v=0;v<i;++v){const w=n[v*h],C=b[w],I=(w===0?0:f[w-1])+C;b[w]++;for(let k=0;k<h;++k)x[I*h+k]=n[v*h+k];y[I]=r[v],l[v]=I}for(let v=0;v<u;++v)if(b[v]===0){const C=v===0?0:f[v-1];x[C*h+0]=v;for(let I=1;I<h;++I)x[C*h+I]=0;y[C]=a}return[x,[g,h],y,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n,e,t,r,s){const o=ne(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let g=0;g<i;++g){const x=s[g];if(x===-1){if(l!==-1)throw new Error(qw(l,g));l=g,u.push(1)}else{if(x<0)throw new Error(Kw(g,x));c*=x,u.push(x)}}if(l!==-1){if(c<=0)throw new Error(Xw());const g=Math.trunc(o/c);if(c*g!==o)throw new Error(Yw(r,u));u[l]=g}if(ne(u)!==o)throw new Error(Qw(r,u));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*r[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}const m=Tt(t,a*i);for(let g=0;g<a;++g){let x=0;for(let y=0;y<d;++y)x+=n[g*d+y]*p[y];for(let y=0;y<i;++y)m[g*i+y]=Math.trunc(x/f[y]),x%=f[y]}return[m,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n,e,t,r,s,o=!1,a=0){const i=r.length,u=[e[0],n.length/e[0]],c=u[1],h=i>0?s[i-1]+1:0;if(h<0)throw new Error(Nf());const d=e.slice();d[0]=h;const p=d.reduce((b,v)=>b*v,1),f=Tt(t,p);if(i===0)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(Nf());let m=0,g=1,x=0,y=s[m];for(;;){let b=0;if(g<i){if(b=s[g],y===b){++g;continue}if(y>=b)throw new Error(Zw())}if(y<0||y>=h)throw new Error(Jw(y,h));y>x&&f.fill(a,x*c,y*c);for(let v=m;v<g;++v){const w=r[v];if(w<0||w>=u[0])throw new Error(eC(v,r[v],u[0]));for(let C=0;C<c;C++)f[y*c+C]+=n[w*c+C]}if(o)for(let v=0;v<c;v++)f[y*c+v]/=g-m;if(m=g,++g,x=y+1,y=b,g>i)break}return x<h&&f.fill(a,x*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB=ls(n=>Math.sqrt(n)),dB=at(yc,n=>Math.sqrt(n)),pB={kernelName:yc,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sk=Ft((n,e)=>{const t=n-e;return t*t}),fB=Ut(vc,sk),mB={kernelName:vc,backendName:"cpu",kernelFunc:fB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok=ls((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)}),gB=go(og,ok),xB={kernelName:og,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,e,t,r){const s=We(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yB{constructor(e,t,r,s,o,a){this.separator=qs(e),this.nGramWidths=t,this.leftPad=qs(r),this.rightPad=qs(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),h=a-(c+l),d=t+(c>0?0:i-u);let p=0;p+=c*this.leftPad.length;for(let y=0;y<h;++y)p+=e[d+y].length;p+=l*this.rightPad.length;const f=c+l+h-1;p+=f*this.separator.length,r[s+i]=new Uint8Array(p);const m=r[s+i];let g=0;const x=y=>y.forEach(b=>m[g++]=b);for(let y=0;y<c;++y)x(this.leftPad),x(this.separator);for(let y=0;y<h-1;++y)x(e[d+y]),x(this.separator);if(h>0){x(e[d+h-1]);for(let y=0;y<l;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<l-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=t[c]>=u;if(l=l&&t[c]<=r,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=Tt("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=t[u];let l=a[u];if(this.nGramWidths.forEach(h=>{const d=t[u+1]-t[u],p=this.getNumNGrams(d,h);this.createNGrams(e,c,i,l,p,h),l+=p}),this.preserveShort&&l===a[u]){const h=t[u+1]-t[u];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,i,l,1,d)}}return[i,a]}}function ik(n,e,t,r,s,o,a,i){return new yB(t,r,s,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&r.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function uk(n,e,t){const r=n.length,s=[];let o=0,a=0;const i=new Array(r);for(let d=0;d<r;++d){const p=s.length;vB(n[d],e,t,s);const f=s.length-p;i[d]=f,o+=f,a=Math.max(a,f)}const u=Tt("int32",o*2),c=new Array(o),l=[r,a];let h=0;for(let d=0;d<r;++d)for(let p=0;p<i[d];++p)u[h*2]=d,u[h*2+1]=p,c[h]=s[h],++h;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n,e){const t=Tt("int32",n.length);for(let r=0;r<n.length;++r)t[r]=tR(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=Ft((n,e)=>n-e),bB=Ux((n,e,t,r)=>({real:n-t,imag:e-r})),Kx=Ut(bc,lk,bB),wB={kernelName:bc,backendName:"cpu",kernelFunc:Kx};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=We(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);r.values[s]=n.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yi=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function dk(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const i=r-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),d=Math.max(t,Math.floor(e-u*l/i+h)),p=Math.min(r,Math.floor(e+(i-u)*l/i+h));dk(n,e,d,p)}const s=n[e];let o=t,a=r;for($a(n,t,e),Yi(n[r],s)>0&&$a(n,t,r);o<a;){for($a(n,o,a),o++,a--;Yi(n[o],s)<0;)o=o+1;for(;Yi(n[a],s)>0;)a=a-1}Yi(n[t],s)===0?$a(n,t,a):(a=a+1,$a(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function pk(n,e,t,r,s){const o=e[e.length-1],[a,i]=[n.length/o,o],u=hn(t,a*r),c=hn("int32",a*r);for(let h=0;h<a;h++){const d=h*i,p=n.subarray(d,d+i);let f=new Array(p.length);p.forEach((y,b)=>f[b]={value:y,index:b}),r<f.length&&(dk(f,r),f=f.slice(0,r)),s&&f.sort(Yi);const m=h*r,g=u.subarray(m,m+r),x=c.subarray(m,m+r);for(let y=0;y<r;y++)g[y]=f[y].value,x[y]=f[y].index}const l=e.slice();return l[l.length-1]=r,[We(l,t,u),We(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n,e,t,r){const s=Ue(e,t)[0],o=[1,t[0],1];for(let f=0;f<s;f++)o[0]*=t[f];o[1]=t[s];for(let f=s+1;f<t.length;f++)o[2]*=t[f];const a=new Map,i=new Int32Array(t[s]),u=new sn(o,r,n),c=[],l=o[0]===1&&o[2]===1;for(let f=0;f<t[s];f++){let m;if(l)m=n[f].toString();else{const x=[];for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)x.push(u.get(y,f,b));m=x.join(",")}const g=a.get(m);if(g!=null)i[f]=g;else{const x=a.size;a.set(m,x),i[f]=x,c.push(f)}}const h=o.slice();h[1]=a.size;const d=new sn(h,r);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let x=0;x<o[2];x++)d.set(u.get(g,f,x),g,m,x)});const p=t.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CB=Object.freeze(Object.defineProperty({__proto__:null,addImpl:I2,bincountImpl:Gx,bincountReduceImpl:k2,bitwiseAndImpl:S2,castImpl:C2,ceilImpl:N2,concatImpl:T2,equalImpl:E2,expImpl:$2,expm1Impl:D2,floorDivImpl:O2,floorImpl:F2,gatherNdImpl:_2,gatherV2Impl:M2,greaterEqualImpl:P2,greaterImpl:L2,lessEqualImpl:z2,lessImpl:B2,linSpaceImpl:V2,logImpl:W2,maxImpl:U2,maximumImpl:G2,minimumImpl:H2,multiplyImpl:Hx,negImpl:j2,notEqualImpl:q2,prodImpl:K2,raggedGatherImpl:X2,raggedRangeImpl:Y2,raggedTensorToTensorImpl:Q2,rangeImpl:Z2,rsqrtImpl:J2,scatterImpl:Fo,sigmoidImpl:uB,simpleAbsImpl:w2,sliceImpl:tk,sparseFillEmptyRowsImpl:nk,sparseReshapeImpl:rk,sparseSegmentReductionImpl:qx,sqrtImpl:hB,squaredDifferenceImpl:sk,staticRegexReplaceImpl:ok,stridedSliceImpl:ak,stringNGramsImpl:ik,stringSplitImpl:uk,stringToHashBucketFastImpl:ck,subImpl:lk,tileImpl:hk,topKImpl:pk,transposeImpl:jx,uniqueImpl:fk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D1("cpu",()=>new Gd,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk=at(Uu,n=>n>=0?n:Math.exp(n)-1),IB={kernelName:Uu,backendName:"cpu",kernelFunc:mk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r;we([s],"leakyRelu");const a=ne(s.shape),i=t.data.get(s.dataId).values,u=hn("float32",a);for(let c=0;c<i.length;c++)u[c]=i[c]<0?o*i[c]:i[c];return t.makeTensorInfo(s.shape,"float32",u)}const kB={kernelName:Vh,backendName:"cpu",kernelFunc:gk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=Ft((n,e)=>n<0?e*n:n);function xk(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e;we([r,s],"prelu");const o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,[i,u]=SB(r.shape,s.shape,o,a,"float32");return t.makeTensorInfo(u,"float32",i)}const NB={kernelName:ad,backendName:"cpu",kernelFunc:xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=at(uc,n=>Math.max(0,n)),TB={kernelName:uc,backendName:"cpu",kernelFunc:yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk=at(cc,n=>Math.min(Math.max(0,n),6)),EB={kernelName:cc,backendName:"cpu",kernelFunc:vk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(n,e,t,r,s){if(t==="linear")return us({inputs:{x:e},backend:n});if(t==="relu")return yk({inputs:{x:e},backend:n});if(t==="elu")return mk({inputs:{x:e},backend:n});if(t==="relu6")return vk({inputs:{x:e},backend:n});if(t==="prelu")return xk({inputs:{x:e,alpha:r},backend:n});if(t==="leakyrelu")return gk({inputs:{x:e},backend:n,attrs:{alpha:s}});if(t==="sigmoid")return ek({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=ne(s.shape),i=Lb(o,a),u=ne(i);$(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(s.dataId);const c=t.data.get(s.dataId);if(c.complexTensorInfos!=null){const l=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;l.shape=i,h.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const RB={kernelName:ud,backendName:"cpu",kernelFunc:ht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;we([s,o],"matMul");const u=s.shape.length,c=o.shape.length,l=a?s.shape[u-2]:s.shape[u-1],h=i?o.shape[c-1]:o.shape[c-2],d=a?s.shape[u-1]:s.shape[u-2],p=i?o.shape[c-2]:o.shape[c-1],f=s.shape.slice(0,-2),m=o.shape.slice(0,-2),g=ne(f),x=ne(m),b=Be(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);$(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const v=a?[g,l,d]:[g,d,l],w=i?[x,p,h]:[x,h,p],C=ht({inputs:{x:s},backend:t,attrs:{shape:v}}),I=ht({inputs:{x:o},backend:t,attrs:{shape:w}}),k=a?C.shape[1]:C.shape[2],S=a?C.shape[2]:C.shape[1],N=i?I.shape[1]:I.shape[2],E=Math.max(g,x),R=t.data.get(C.dataId).values,_=t.data.get(I.dataId).values,O=Re(C.shape),F=Re(I.shape),[L,B,M]=a?[O[0],1,O[1]]:[O[0],O[1],1],[z,H,X]=i?[1,F[1],F[0]]:[F[1],1,F[0]],Z=S*N,ee=We([E,S,N],C.dtype),ae=ee.values,oe=t.blockSize;for(let ue=0;ue<E;ue++){const he=ue%g,pe=ue%x;for(let de=0;de<S;de+=oe){const Ce=Math.min(de+oe,S);for(let ge=0;ge<N;ge+=oe){const Te=Math.min(ge+oe,N);for(let Ee=0;Ee<k;Ee+=oe){const Le=Math.min(Ee+oe,k);for(let Fe=de;Fe<Ce;Fe++)for(let De=ge;De<Te;De++){let Xe=0;for(let Ke=Ee;Ke<Le;Ke++){const wt=R[he*L+Fe*B+Ke*M],gt=_[Ke*z+De*H+pe*X];Xe+=wt*gt}ae[ue*Z+(Fe*N+De)]+=Xe}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo(I),t.makeTensorInfo(b,ee.dtype,ee.values)}const $B={kernelName:Nh,backendName:"cpu",kernelFunc:bk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=bk({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:c},backend:t}),a&&(p=si({inputs:{a:d,b:a},backend:t}),m.push(d),d=p),l&&(f=jl(t,d,l,i,h),m.push(d),d=f);for(const x of m)t.disposeIntermediateTensorInfo(x);return d}const DB={kernelName:Sl,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=at($u,n=>Math.acos(n)),OB={kernelName:$u,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=at(Au,n=>Math.acosh(n)),MB={kernelName:Au,backendName:"cpu",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t}=n,r=e;we(e,"addN");const s=r.map(i=>t.data.get(i.dataId).values),o=We(r[0].shape,r[0].dtype),a=o.values;for(let i=0;i<r.length;i++){const u=s[i];for(let c=0;c<a.length;c++)a[c]+=u[c]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const PB={kernelName:km,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;we(s,"all");const i=Ue(o,s.shape);let u=i;const c=bt(u,s.shape.length);let l=s;c!=null&&(l=On({inputs:{x:s},backend:t,attrs:{perm:c}}),u=At(u.length,s.shape.length)),an("all",u,l.shape.length);const[h,d]=Zt(l.shape,u),p=ne(d),f=dn(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];b=b&&w}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Mt(h,i),y=ht({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const zB={kernelName:Sm,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;we(s,"any");const i=Ue(o,s.shape);let u=i;const c=bt(u,s.shape.length);let l=s;c!=null&&(l=On({inputs:{x:s},backend:t,attrs:{perm:c}}),u=At(u.length,s.shape.length)),an("any",u,l.shape.length);const[h,d]=Zt(l.shape,u),p=ne(d),f=dn(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];b=b||w}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Mt(h,i),y=ht({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const WB={kernelName:Nm,backendName:"cpu",kernelFunc:VB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;we(s,"argMax");let a=Ue(o,s.shape);const i=bt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=On({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=At(a.length,u.shape.length)),a=[a[0]],an("argMax",a,u.shape.length);const[l,h]=Zt(u.shape,a),d=ne(l),p=dn(d,"int32"),f=ne(h),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],b=0;for(let v=0;v<f;++v){const w=m[x+v];w>y&&(y=w,b=v)}p[g]=b}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const GB={kernelName:Ch,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;we(s,"argMin");let a=Ue(o,s.shape);const i=bt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=On({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=At(a.length,u.shape.length)),a=[a[0]],an("argMin",a,u.shape.length);const[l,h]=Zt(u.shape,a),d=ne(l),p=dn(d,"int32"),f=ne(h),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],b=0;for(let v=0;v<f;++v){const w=m[x+v];w<y&&(y=w,b=v)}p[g]=b}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const jB={kernelName:Ih,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qB=at(Du,n=>Math.asin(n)),KB={kernelName:Du,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XB=at(Fu,n=>Math.asinh(n)),YB={kernelName:Fu,backendName:"cpu",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB=at(Ou,n=>Math.atan(n)),ZB={kernelName:Ou,backendName:"cpu",kernelFunc:QB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB=Ft((n,e)=>Math.atan2(n,e)),e4=Ut(Mu,JB),t4={kernelName:Mu,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4=at(_u,n=>Math.atanh(n)),r4={kernelName:_u,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n,e,t,r,s,o){const a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(s.outShape,t),g=m.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],b=s.outShape[3];for(let v=0;v<s.batchSize;++v){const w=v*x,C=v*r[0];for(let I=0;I<s.inChannels;++I)for(let k=0;k<s.outHeight;++k){const S=k*a-d,N=Math.max(0,S),E=Math.min(s.inHeight,l+S),R=w+k*y;for(let _=0;_<s.outWidth;++_){const O=_*i-p,F=Math.max(0,O),L=Math.min(s.inWidth,h+O);let B=f,M=0,z=0;for(let X=N;X<E;X+=u){const Z=C+X*r[1];for(let ee=F;ee<L;ee+=c){const ae=Z+ee*r[2],oe=n[ae+I];o==="max"&&oe>B?B=oe:o==="avg"&&(M+=oe,z++)}if(isNaN(B))break}const H=R+_*b+I;g[H]=o==="avg"?M/z:B}}}return m}function wk(n,e,t,r,s=!1,o=!1){const a=We(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=We(e,t,n);for(let g=0;g<r.batchSize;++g)for(let x=0;x<r.inChannels;++x)for(let y=0;y<r.outHeight;++y){const b=y*i-p;let v=b;for(;v<0;)v+=c;const w=Math.min(r.inHeight,h+b);for(let C=0;C<r.outWidth;++C){const I=C*u-f;let k=I;for(;k<0;)k+=l;const S=Math.min(r.inWidth,d+I);let N=Number.NEGATIVE_INFINITY,E=-1;for(let R=v;R<w;R+=c){const _=R-b;for(let O=k;O<S;O+=l){const F=O-I,L=m.get(g,R,O,x);L>N&&(N=L,s?E=o?((g*r.inHeight+R)*r.inWidth+O)*r.inChannels+x:(R*r.inWidth+O)*r.inChannels+x:E=_*d+F)}}a.set(E,g,y,C,x)}}return a}function Ck(n,e,t,r,s,o){const a=s.strideDepth,i=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,l=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,x=s.padInfo.left,y=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=We(s.outShape,t),v=b.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],k=s.outShape[4];for(let S=0;S<s.batchSize;++S){const N=S*w,E=S*r[0];for(let R=0;R<s.inChannels;++R)for(let _=0;_<s.outDepth;++_){const O=_*a-m;let F=O;for(;F<0;)F+=c;const L=Math.min(s.inDepth,d+O),B=N+_*C;for(let M=0;M<s.outHeight;++M){const z=M*i-g;let H=z;for(;H<0;)H+=l;const X=Math.min(s.inHeight,p+z),Z=B+M*I;for(let ee=0;ee<s.outWidth;++ee){const ae=ee*u-x;let oe=ae;for(;oe<0;)oe+=h;const ue=Math.min(s.inWidth,f+ae),he=Z+ee*k;let pe=y,de=0,Ce=0;for(let Te=F;Te<L;Te+=c){const Ee=E+Te*r[1];for(let Le=H;Le<X;Le+=l){const Fe=Ee+Le*r[2];for(let De=oe;De<ue;De+=h){const Xe=Fe+De*r[3],Ke=n[Xe+R];if(o==="max"&&Ke>pe?pe=Ke:o==="avg"&&(de+=Ke,Ce++),isNaN(pe))break}if(isNaN(pe))break}if(isNaN(pe))break}const ge=he+R;v[ge]=o==="avg"?de/Math.max(Ce,1):pe}}}}return b}function s4(n,e){const t=We(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const y=x*r-d;let b=y;for(;b<0;)b+=a;const v=Math.min(e.inDepth,c+y);for(let w=0;w<e.outHeight;++w){const C=w*s-p;let I=C;for(;I<0;)I+=i;const k=Math.min(e.inHeight,l+C);for(let S=0;S<e.outWidth;++S){const N=S*o-f;let E=N;for(;E<0;)E+=u;const R=Math.min(e.inWidth,h+N);let _=Number.NEGATIVE_INFINITY,O=-1;for(let F=b;F<v;F+=a){const L=F-y;for(let B=I;B<k;B+=i){const M=B-C;for(let z=E;z<R;z+=u){const H=z-N,X=n.get(m,F,B,z,g);X>=_&&(_=X,O=L*l*h+M*l+H)}}}t.set(O,m,x,w,S,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;we(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;$(fn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Cr(s.shape,o,a,c,i,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&rt(l.inShape,l.outShape))h=us({inputs:{x:s},backend:t});else{const d=t.data.get(s.dataId).values,p=Re(s.shape),f=Xx(d,s.shape,s.dtype,p,l,"avg");h=t.makeTensorInfo(l.outShape,s.dtype,f.values)}return h}const a4={kernelName:kh,backendName:"cpu",kernelFunc:o4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;we(s,"avgPool3d");const l=Fs(s.shape,o,a,1,i,u,c),h=t.data.get(s.dataId).values,d=Ck(h,s.shape,s.dtype,Re(s.shape),l,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const u4={kernelName:Sh,backendName:"cpu",kernelFunc:i4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;we([s,o],"avgPool3DGrad");const l=Fs(o.shape,a,i,1,u,c),h=l.strideDepth,d=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,x=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,C=l.effectiveFilterWidth,I=v-1-l.padInfo.front,k=C-1-l.padInfo.left,S=w-1-l.padInfo.top,N=We(o.shape,"float32"),E=1/(f*m*g),R=t.bufferSync(s);for(let _=0;_<l.batchSize;++_)for(let O=0;O<l.inChannels;++O)for(let F=0;F<l.inDepth;++F)for(let L=0;L<l.inHeight;++L)for(let B=0;B<l.inWidth;++B){const M=F-I,z=L-S,H=B-k;let X=0;for(let Z=0;Z<v;Z+=x){const ee=(M+Z)/h;if(!(ee<0||ee>=l.outDepth||Math.floor(ee)!==ee))for(let ae=0;ae<w;ae+=y){const oe=(z+ae)/d;if(!(oe<0||oe>=l.outHeight||Math.floor(oe)!==oe))for(let ue=0;ue<C;ue+=b){const he=(H+ue)/p;if(he<0||he>=l.outWidth||Math.floor(he)!==he)continue;const pe=R.get(_,ee,oe,he,O);X+=pe}}}N.set(X*E,_,F,L,B,O)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const l4={kernelName:Em,backendName:"cpu",kernelFunc:c4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;we([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Cr(a.shape,i,u,1,c),h=l.strideHeight,d=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,x=l.effectiveFilterHeight,y=l.effectiveFilterWidth,b=y-1-l.padInfo.left,v=x-1-l.padInfo.top,w=We(a.shape,"float32"),C=1/(p*f),I=t.data.get(s.dataId).values,k=We(s.shape,"float32",I);for(let S=0;S<l.batchSize;++S)for(let N=0;N<l.inChannels;++N)for(let E=0;E<l.inHeight;++E)for(let R=0;R<l.inWidth;++R){const _=E-v,O=R-b;let F=0;for(let L=0;L<x;L+=m){const B=(_+L)/h;if(!(B<0||B>=l.outHeight||Math.floor(B)!==B))for(let M=0;M<y;M+=g){const z=(O+M)/d;if(z<0||z>=l.outWidth||Math.floor(z)!==z)continue;const H=k.get(S,B,z,N);F+=H}}w.set(F*C,S,E,R,N)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const d4={kernelName:Tm,backendName:"cpu",kernelFunc:h4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,scale:o,offset:a,mean:i,variance:u}=e;$(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),we([s,i,u,o,a],"batchNorm");let{varianceEpsilon:c}=r;c==null&&(c=.001);const l=t.data.get(s.dataId).values,h=t.data.get(i.dataId).values,d=t.data.get(u.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,x=p.length,y=d.length,b=h.length;let v=0,w=0,C=0,I=0;for(let k=0;k<l.length;++k)m[k]=f[v++]+(l[k]-h[w++])*p[C++]/Math.sqrt(d[I++]+c),v>=g&&(v=0),w>=b&&(w=0),C>=x&&(C=0),I>=y&&(I=0);return t.makeTensorInfo(s.shape,s.dtype,m)}const f4={kernelName:Ph,backendName:"cpu",kernelFunc:p4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;we([s],"batchToSpaceND");const i=o.reduce((x,y)=>x*y),u=$c(s.shape,o,i),c=Ac(u.length,o.length),l=Dc(s.shape,o,i),h=ox(a,o.length),d=ax(l,a,o.length),p=ht({inputs:{x:s},backend:t,attrs:{shape:u}}),f=On({inputs:{x:p},backend:t,attrs:{perm:c}}),m=ht({inputs:{x:f},backend:t,attrs:{shape:l}}),g=ea({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const g4={kernelName:Th,backendName:"cpu",kernelFunc:m4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,c=Gx(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const y4={kernelName:Rm,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,i=Be(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const b4={kernelName:Ub,backendName:"cpu",kernelFunc:v4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4=at(Bu,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),C4={kernelName:Bu,backendName:"cpu",kernelFunc:w4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4=n=>{const{x:e}=n.inputs,t=n.backend,r=new Float32Array(ne(e.shape)),s=t.data.get(e.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const l=i[c],h=u[c];r[c]=Math.hypot(l,h)}return t.makeOutput(r,e.shape,"float32")},k4={kernelName:Eh,backendName:"cpu",kernelFunc:I4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.imag,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const S4={kernelName:qm,backendName:"cpu",kernelFunc:oi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=Ue(s,e[0].shape)[0],a=e.map(m=>m.shape);nx(a,o);let i=ts(e.map(m=>m.shape),o);if(ne(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(m=>ne(m.shape)>0);if(u.length===1)return us({inputs:{x:u[0]},backend:t});if(u[0].dtype==="complex64"){const m=u.map(v=>Jo({inputs:{input:v},backend:t})),g=u.map(v=>oi({inputs:{input:v},backend:t})),x=ai({inputs:m,backend:t,attrs:{axis:o}}),y=ai({inputs:g,backend:t,attrs:{axis:o}}),b=Pn({inputs:{real:x,imag:y},backend:t});return m.forEach(v=>t.disposeIntermediateTensorInfo(v)),g.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),b}const c=u.map(m=>{const x=[-1,ne(m.shape.slice(o))];return ht({inputs:{x:m},backend:t,attrs:{shape:x}})}),l=c.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));i=ts(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=T2(l,i,e[0].dtype,h),p=ts(u.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const N4={kernelName:Rh,backendName:"cpu",kernelFunc:ai};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r;we([s,o],"conv2d");const h=Os(u),d=on(s.shape,o.shape,a,c,i,l,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,b=d.dataFormat==="channelsLast",v=new sn(d.outShape,s.dtype),w=Re(s.shape),C=Re(o.shape),I=w[0],k=b?w[1]:w[2],S=b?w[2]:1,N=b?1:w[1],E=v.strides[0],R=b?v.strides[1]:v.strides[2],_=b?v.strides[2]:1,O=b?1:v.strides[1],F=t.data.get(s.dataId).values,L=t.data.get(o.dataId).values,B=v.values;for(let M=0;M<d.batchSize;++M){const z=M*I,H=M*E;for(let X=0;X<d.outHeight;++X){const Z=H+X*R,ee=X*d.strideHeight-y;for(let ae=0;ae<p;++ae){const oe=ee+ae*m;if(oe<0||oe>=d.inHeight)continue;const ue=ae*C[0],he=z+oe*k;for(let pe=0;pe<d.outWidth;++pe){const de=Z+pe*_,Ce=pe*d.strideWidth-x;for(let ge=0;ge<f;++ge){const Te=Ce+ge*g;if(Te<0||Te>=d.inWidth)continue;const Ee=ue+ge*C[1],Le=he+Te*S;let Fe=Ee;for(let De=0;De<d.inChannels;++De){const Xe=F[Le+De*N];for(let Ke=0;Ke<d.outChannels;++Ke)B[de+Ke*O]+=Xe*L[Fe+Ke];Fe+=d.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,B)}const T4={kernelName:$h,backendName:"cpu",kernelFunc:Ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;we([s,o],"conv2dBackpropFilter");const h=Os(u),d=on(s.shape,l,a,1,i,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",y=new sn(d.filterShape,"float32"),b=d.padInfo.left,v=d.padInfo.top,w=t.data.get(s.dataId).values,C=t.data.get(o.dataId).values,I=new sn(s.shape,s.dtype,w),k=new sn(o.shape,o.dtype,C);for(let S=0;S<m;++S){const N=Math.max(0,Math.ceil((v-S)/p)),E=Math.min(d.outHeight,(d.inHeight+v-S)/p);for(let R=0;R<g;++R){const _=Math.max(0,Math.ceil((b-R)/f)),O=Math.min(d.outWidth,(d.inWidth+b-R)/f);for(let F=0;F<d.inChannels;++F)for(let L=0;L<d.outChannels;++L){let B=0;for(let M=0;M<d.batchSize;++M)for(let z=N;z<E;++z){const H=S+z*p-v;for(let X=_;X<O;++X){const Z=R+X*f-b;x?B+=I.get(M,H,Z,F)*k.get(M,z,X,L):B+=I.get(M,F,H,Z)*k.get(M,L,z,X)}}y.set(B,S,R,F,L)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const R4={kernelName:Dm,backendName:"cpu",kernelFunc:E4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r;we([s,o],"conv2dBackpropInput");const h=Re(o.shape),d=Re(s.shape);let p=Os(c);const f=on(a,o.shape,i,1,u,l,!1,p),m=new sn(f.inShape,"float32"),g=m.values,x=t.data.get(s.dataId).values,y=t.data.get(o.dataId).values,[b,v,w]=h,{batchSize:C,filterHeight:I,filterWidth:k,inChannels:S,inHeight:N,inWidth:E,outChannels:R,outHeight:_,outWidth:O,strideHeight:F,strideWidth:L}=f;p=f.dataFormat;const B=I-1-f.padInfo.top,M=k-1-f.padInfo.left,z=p==="channelsLast",H=m.strides[0],X=z?m.strides[1]:m.strides[2],Z=z?m.strides[2]:1,ee=z?1:m.strides[1],ae=d[0],oe=z?d[1]:d[2],ue=z?d[2]:1,he=z?1:d[1];for(let pe=0;pe<C;++pe)for(let de=0;de<S;++de)for(let Ce=0;Ce<N;++Ce){const ge=Ce-B,Te=Math.max(0,Math.ceil(ge/F)),Ee=Math.min(_,(I+ge)/F);for(let Le=0;Le<E;++Le){const Fe=Le-M,De=Math.max(0,Math.ceil(Fe/L)),Xe=Math.min(O,(k+Fe)/L);let Ke=0;for(let gt=Te;gt<Ee;++gt){const Jt=gt*F-ge;for(let St=De;St<Xe;++St){const cn=St*L-Fe,en=ae*pe+oe*gt+ue*St,Ht=b*(I-1-Jt)+v*(k-1-cn)+w*de;for(let ir=0;ir<R;++ir){const Tn=x[en+he*ir],jt=y[Ht+ir];Ke+=Tn*jt}}}const wt=H*pe+X*Ce+Z*Le+ee*de;g[wt]=Ke}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const A4={kernelName:Ah,backendName:"cpu",kernelFunc:$4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r;we([s,o],"conv3d");const c=co(s.shape,o.shape,a,u,i),{filterDepth:l,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,x=g.front,y=g.left,b=g.top,v=new sn(c.outShape,s.dtype),w=t.data.get(s.dataId).values,C=t.data.get(o.dataId).values,I=v.values,k=Re(s.shape),S=Re(o.shape);for(let N=0;N<c.batchSize;++N){const E=N*k[0],R=N*v.strides[0];for(let _=0;_<c.outDepth;++_){const O=R+_*v.strides[1],F=_*c.strideDepth-x;for(let L=0;L<l;++L){const B=F+L*p;if(B<0||B>=c.inDepth)continue;const M=L*S[0],z=E+B*k[1];for(let H=0;H<c.outHeight;++H){const X=O+H*v.strides[2],Z=H*c.strideHeight-b;for(let ee=0;ee<h;++ee){const ae=Z+ee*f;if(ae<0||ae>=c.inHeight)continue;const oe=M+ee*S[1],ue=z+ae*k[2];for(let he=0;he<c.outWidth;++he){const pe=X+he*c.outChannels,de=he*c.strideWidth-y;for(let Ce=0;Ce<d;++Ce){const ge=de+Ce*m;if(ge<0||ge>=c.inWidth)continue;const Te=oe+Ce*S[2],Ee=ue+ge*c.inChannels;let Le=Te;for(let Fe=0;Fe<c.inChannels;++Fe){const De=w[Ee+Fe];for(let Xe=0;Xe<c.outChannels;++Xe)I[pe+Xe]+=De*C[Le+Xe];Le+=c.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const F4={kernelName:Dh,backendName:"cpu",kernelFunc:D4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r;we([s,o],"conv3dBackpropFilterV2");const c=Re(s.shape),l=Re(o.shape),h=co(s.shape,u,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new sn(h.filterShape,"float32"),b=y.values,[v,w,C,I]=y.strides,k=t.data.get(o.dataId).values,[S,N,E,R]=l,_=t.data.get(s.dataId).values,[O,F,L,B]=c,M=h.padInfo.front,z=h.padInfo.left,H=h.padInfo.top;for(let X=0;X<m;++X){const Z=Math.max(0,Math.ceil((M-X)/d)),ee=Math.min(h.outDepth,(h.inDepth+M-X)/d),ae=X*v;for(let oe=0;oe<g;++oe){const ue=Math.max(0,Math.ceil((H-oe)/p)),he=Math.min(h.outHeight,(h.inHeight+H-oe)/p),pe=oe*w+ae;for(let de=0;de<x;++de){const Ce=Math.max(0,Math.ceil((z-de)/f)),ge=Math.min(h.outWidth,(h.inWidth+z-de)/f),Te=de*C+pe;for(let Ee=0;Ee<h.inChannels;++Ee){const Le=Ee*I+Te;for(let Fe=0;Fe<h.outChannels;++Fe){let De=0;for(let Xe=0;Xe<h.batchSize;++Xe){const Ke=Xe*O,wt=Xe*S;for(let gt=Z;gt<ee;++gt){const St=(X+gt*d-M)*F+Ke,cn=gt*N+wt;for(let en=ue;en<he;++en){const ir=(oe+en*p-H)*L+St,Tn=en*E+cn;for(let jt=Ce;jt<ge;++jt){const Oi=(de+jt*f-z)*B+ir,_i=jt*R+Tn;De+=_[Oi+Ee]*k[_i+Fe]}}}}b[Le+Fe]=De}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const _4={kernelName:Fm,backendName:"cpu",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r;we([s],"conv3dBackpropInputV2");const c=Re(s.shape),l=Re(o.shape),h=co(u,o.shape,i,1,a),d=new sn(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=t.data.get(s.dataId).values,[b,v,w,C]=c,I=t.data.get(o.dataId).values,[k,S,N,E]=l,{batchSize:R,filterDepth:_,filterHeight:O,filterWidth:F,inChannels:L,inDepth:B,inHeight:M,inWidth:z,outChannels:H,outDepth:X,outHeight:Z,outWidth:ee,strideDepth:ae,strideHeight:oe,strideWidth:ue}=h,he=_-1-h.padInfo.front,pe=O-1-h.padInfo.top,de=F-1-h.padInfo.left;for(let Ce=0;Ce<R;++Ce)for(let ge=0;ge<L;++ge)for(let Te=0;Te<B;++Te){const Ee=Te-he,Le=Math.max(0,Math.ceil(Ee/ae)),Fe=Math.min(X,(_+Ee)/ae);for(let De=0;De<M;++De){const Xe=De-pe,Ke=Math.max(0,Math.ceil(Xe/oe)),wt=Math.min(Z,(O+Xe)/oe);for(let gt=0;gt<z;++gt){const Jt=gt-de,St=Math.max(0,Math.ceil(Jt/ue)),cn=Math.min(ee,(F+Jt)/ue);let en=0;for(let Ht=Le;Ht<Fe;++Ht){const ir=Ht*ae-Ee;for(let Tn=Ke;Tn<wt;++Tn){const jt=Tn*oe-Xe;for(let fs=St;fs<cn;++fs){const Oi=fs*ue-Jt,_i=b*Ce+v*Ht+w*Tn+C*fs,fp=k*(_-1-ir)+S*(O-1-jt)+N*(F-1-Oi)+E*ge;for(let Ps=0;Ps<H;++Ps){const Mi=y[_i+Ps],Li=I[fp+Ps];en+=Mi*Li}}}}p[f*Ce+m*Te+g*De+x*gt+ge]=en}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const L4={kernelName:Om,backendName:"cpu",kernelFunc:M4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4=at(zu,n=>Math.cos(n)),B4={kernelName:zu,backendName:"cpu",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4=at(Vu,n=>Math.cosh(n)),V4={kernelName:Vu,backendName:"cpu",kernelFunc:z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,[l,h,d,p]=s.shape,f=o.shape[0],[m,g]=i,x=We([f,m,g,p],"float32"),y=t.data.get(o.dataId).values,b=t.data.get(a.dataId).values,v=t.data.get(s.dataId).values,w=Re(s.shape),C=Re(x.shape);for(let I=0;I<f;I++){const k=I*4,S=y[k],N=y[k+1],E=y[k+2],R=y[k+3],_=b[I];if(_>=l)continue;const O=m>1?(E-S)*(h-1)/(m-1):0,F=g>1?(R-N)*(d-1)/(g-1):0;for(let L=0;L<m;L++){const B=m>1?S*(h-1)+L*O:.5*(S+E)*(h-1);if(B<0||B>h-1){for(let M=0;M<g;M++)for(let z=0;z<p;z++){const H=z+M*C[2]+L*C[1]+I*C[0];x.values[H]=c}continue}if(u==="bilinear"){const M=Math.floor(B),z=Math.ceil(B),H=B-M;for(let X=0;X<g;X++){const Z=g>1?N*(d-1)+X*F:.5*(N+R)*(d-1);if(Z<0||Z>d-1){for(let ue=0;ue<p;ue++){const he=ue+X*C[2]+L*C[1]+I*C[0];x.values[he]=c}continue}const ee=Math.floor(Z),ae=Math.ceil(Z),oe=Z-ee;for(let ue=0;ue<p;ue++){let he=ue+ee*w[2]+M*w[1]+_*w[0];const pe=v[he];he=ue+ae*w[2]+M*w[1]+_*w[0];const de=v[he];he=ue+ee*w[2]+z*w[1]+_*w[0];const Ce=v[he];he=ue+ae*w[2]+z*w[1]+_*w[0];const ge=v[he],Te=pe+(de-pe)*oe,Ee=Ce+(ge-Ce)*oe;he=ue+X*C[2]+L*C[1]+I*C[0],x.values[he]=Te+(Ee-Te)*H}}}else for(let M=0;M<g;++M){const z=g>1?N*(d-1)+M*F:.5*(N+R)*(d-1);if(z<0||z>d-1){for(let Z=0;Z<p;Z++){const ee=Z+M*C[2]+L*C[1]+I*C[0];x.values[ee]=c}continue}const H=Math.round(z),X=Math.round(B);for(let Z=0;Z<p;Z++){const ee=Z+H*w[2]+X*w[1]+_*w[0],ae=Z+M*C[2]+L*C[1]+I*C[0];x.values[ae]=v[ee]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const U4={kernelName:Mm,backendName:"cpu",kernelFunc:W4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;we(s,"cumprod");const u=bt([o],s.shape.length);let c=s;u!=null&&(c=On({inputs:{x:s},backend:t,attrs:{perm:u}}));const l=At(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Gn(c.dtype,"int32"),d=wm(ne(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const b=m(x,y);if(y===0)d[b]=a?1:p[b];else{const v=m(x,y-1);d[b]=a?p[v]*d[v]:p[b]*d[v]}}const g=t.makeTensorInfo(c.shape,h,d);if(u!=null){const x=lo(u),y=On({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),y}return g}const H4={kernelName:_m,backendName:"cpu",kernelFunc:G4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;we(s,"cumsum");const u=bt([o],s.shape.length);let c=s;u!=null&&(c=On({inputs:{x:s},backend:t,attrs:{perm:u}}));const l=At(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Gn(c.dtype,"int32"),d=dn(ne(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const b=m(x,y);if(y===0)d[b]=a?0:p[b];else{const v=m(x,y-1);d[b]=a?p[v]+d[v]:p[b]+d[v]}}const g=t.makeTensorInfo(c.shape,h,d);if(u!=null){const x=lo(u),y=On({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),y}return g}const q4={kernelName:Fh,backendName:"cpu",kernelFunc:j4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=Gx(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=k2(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const X4={kernelName:Lm,backendName:"cpu",kernelFunc:K4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r;$(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=s.shape[0],u=s.shape[1],c=s.shape[2],l=s.shape[3],h=u*o,d=c*o,p=l/(o*o),f=t.data.get(s.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let x=0;x<i;++x)for(let y=0;y<h;++y){const b=Math.floor(y/o),v=y%o;for(let w=0;w<d;++w){const C=Math.floor(w/o),I=w%o,k=(v*o+I)*p;for(let S=0;S<p;++S){const E=S+k+l*(C+c*(b+u*x));m[g++]=f[E]}}}return t.makeTensorInfo([i,h,d,p],s.dtype,m)}const Q4={kernelName:Pm,backendName:"cpu",kernelFunc:Y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;we([s,o],"depthwiseConv2DNative");const l=Re(s.shape),h=Re(o.shape);let d=u;d==null&&(d=[1,1]),$(fn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=on(s.shape,o.shape,a,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,b=y.left,v=y.top,w=p.outChannels/p.inChannels,C=new sn(p.outShape,s.dtype),I=t.data.get(s.dataId).values,k=t.data.get(o.dataId).values,S=C.values;for(let N=0;N<p.batchSize;++N){const E=N*l[0],R=N*C.strides[0];for(let _=0;_<p.outHeight;++_){const O=R+_*C.strides[1],F=_*p.strideHeight-v;for(let L=0;L<f;++L){const B=F+L*g;if(B<0||B>=p.inHeight)continue;const M=L*h[0],z=E+B*l[1];for(let H=0;H<p.outWidth;++H){const X=O+H*C.strides[2],Z=H*p.strideWidth-b;for(let ee=0;ee<m;++ee){const ae=Z+ee*x;if(ae<0||ae>=p.inWidth)continue;const oe=M+ee*h[1],ue=z+ae*p.inChannels;let he=X,pe=oe;for(let de=0;de<p.inChannels;++de){const Ce=I[ue+de];for(let ge=0;ge<w;++ge)S[he+ge]+=Ce*k[pe+ge];he+=w,pe+=w}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const Z4={kernelName:Oh,backendName:"cpu",kernelFunc:kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r;we([s,o],"depthwiseConv2dNativeBackpropFilter");const h=on(s.shape,l,a,i,u,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new sn(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,v=t.data.get(s.dataId).values,w=new sn(s.shape,s.dtype,v),C=t.data.get(o.dataId).values,I=new sn(o.shape,o.dtype,C);for(let k=0;k<f;++k){const S=Math.max(0,Math.ceil((y-k)/d)),N=Math.min(h.outHeight,(h.inHeight+y-k)/d);for(let E=0;E<m;++E){const R=Math.max(0,Math.ceil((x-E)/p)),_=Math.min(h.outWidth,(h.inWidth+x-E)/p);for(let O=0;O<h.outChannels;++O){const F=Math.trunc(O/b),L=O%b;let B=0;for(let M=0;M<h.batchSize;++M)for(let z=S;z<N;++z){const H=k+z*d-y;for(let X=R;X<_;++X){const Z=E+X*p-x;B+=w.get(M,H,Z,F)*I.get(M,z,X,O)}}g.set(B,k,E,F,L)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const ez={kernelName:Bm,backendName:"cpu",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r;we([s,o],"depthwiseConv2DNativeBackpropInput");const h=Re(s.shape),d=Re(o.shape),p=on(l,o.shape,a,i,u,c,!0),f=new sn(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,b=t.data.get(s.dataId).values,[v,w,C]=h,I=t.data.get(o.dataId).values,[k,S,N]=d,{batchSize:E,filterHeight:R,filterWidth:_,inChannels:O,inHeight:F,inWidth:L,outChannels:B,outHeight:M,outWidth:z,strideHeight:H,strideWidth:X}=p,Z=R-1-p.padInfo.top,ee=_-1-p.padInfo.left,ae=B/O;for(let oe=0;oe<E;++oe)for(let ue=0;ue<O;++ue)for(let he=0;he<F;++he){const pe=he-Z,de=Math.max(0,Math.ceil(pe/H)),Ce=Math.min(M,(R+pe)/H);for(let ge=0;ge<L;++ge){const Te=ge-ee,Ee=Math.max(0,Math.ceil(Te/X)),Le=Math.min(z,(_+Te)/X);let Fe=0;for(let De=de;De<Ce;++De){const Xe=De*H-pe;for(let Ke=Ee;Ke<Le;++Ke){const wt=Ke*X-Te,gt=v*oe+w*De+C*Ke,Jt=k*(R-1-Xe)+S*(_-1-wt)+N*ue;for(let St=0;St<ae;++St){const cn=ue*ae+St,en=b[gt+cn],Ht=I[Jt+St];Fe+=en*Ht}}}m[g*oe+x*he+y*ge+ue]=Fe}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const nz={kernelName:zm,backendName:"cpu",kernelFunc:tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const{inputs:e,backend:t}=n,{x:r}=e,s=ne(r.shape),o=t.data.get(r.dataId).values,a=We([s,s],r.dtype),i=a.values;for(let c=0;c<o.length;c++)i[c*s+c]=o[c];const u=[...r.shape,...r.shape];return t.makeTensorInfo(u,a.dtype,a.values)}const sz={kernelName:Gb,backendName:"cpu",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz={kernelName:_h,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s}=n,{strides:o,pad:a,dilations:i}=t,u=e,c=u.data.get(r.dataId).values,l=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:C,filterWidth:I,dilationHeight:k,dilationWidth:S,outShape:N}=Sc(r.shape,s.shape,o,a,"NHWC",i),E=ne(N),R=N.length,_=Tt(r.dtype,E);for(let F=0;F<p;++F)for(let L=0;L<x;++L){const B=L*v-b.top;for(let M=0;M<y;++M){const z=M*w-b.left;for(let H=0;H<g;++H){let X=Number.MIN_SAFE_INTEGER;for(let ee=0;ee<C;++ee){const ae=B+ee*k;if(ae>=0&&ae<f)for(let oe=0;oe<I;++oe){const ue=z+oe*S;if(ue>=0&&ue<m){const he=Jr([F,ae,ue,H],l,Re(r.shape)),pe=Jr([ee,oe,H],d,Re(s.shape)),de=c[he]+h[pe];de>X&&(X=de)}}}const Z=Jr([F,L,M,H],R,Re(N));_[Z]=X}}}return{dataId:u.write(ia(_,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const az={kernelName:lf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:i,dilations:u}=t,c=e,l=Fr(r.shape,c.data.get(r.dataId).values),h=Fr(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:C,dilationHeight:I,dilationWidth:k,outShape:S}=Sc(r.shape,s.shape,a,i,"NHWC",u);$(o.rank===S.length,()=>`Error in ${lf}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const N=Fr(S,c.data.get(o.dataId).values),E=zb(s.shape,s.dtype);for(let _=0;_<d;++_)for(let O=0;O<g;++O){const F=O*b-y.top;for(let L=0;L<x;++L){const B=L*v-y.left;for(let M=0;M<m;++M){let z=Number.MIN_SAFE_INTEGER,H=0,X=0;for(let Z=0;Z<w;++Z){const ee=F+Z*I;if(ee>=0&&ee<p)for(let ae=0;ae<C;++ae){const oe=B+ae*k;if(oe>=0&&oe<f){const ue=l[_][ee][oe][M]+h[Z][ae][M];ue>z&&(z=ue,H=Z,X=ae)}}}E[H][X][M]+=N[_][O][L][M]}}}return{dataId:c.write(ia(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz={kernelName:cf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:i,dilations:u}=t,c=e,l=Fr(r.shape,c.data.get(r.dataId).values),h=Fr(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:C,dilationHeight:I,dilationWidth:k,outShape:S}=Sc(r.shape,s.shape,a,i,"NHWC",u);$(o.rank===S.length,()=>`Error in ${cf}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const N=Fr(S,c.data.get(o.dataId).values),E=zb(r.shape,r.dtype);for(let _=0;_<d;++_)for(let O=0;O<g;++O){const F=O*b-y.top;for(let L=0;L<x;++L){const B=L*v-y.left;for(let M=0;M<m;++M){let z=Number.MIN_SAFE_INTEGER,H=F<0?0:F,X=B<0?0:B;for(let Z=0;Z<w;++Z){const ee=F+Z*I;if(ee>=0&&ee<p)for(let ae=0;ae<C;++ae){const oe=B+ae*k;if(oe>=0&&oe<f){const ue=l[_][ee][oe][M]+h[Z][ae][M];ue>z&&(z=ue,H=ee,X=oe)}}}E[_][H][X][M]+=N[_][O][L][M]}}}return{dataId:c.write(ia(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:o,options:a}=r,{contextOptions:i,imageOptions:u}=a||{},c=(u==null?void 0:u.alpha)||1,l=(i==null?void 0:i.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const h=o.getContext(l,(i==null?void 0:i.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${l} type.`);const[d,p]=s.shape.slice(0,2),f=s.shape.length===2?1:s.shape[2],m=t.data.get(s.dataId).values,g=s.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let b=0;b<d*p;++b){const v=[0,0,0,255*c];for(let C=0;C<f;C++){const I=m[b*f+C];if(s.dtype==="float32"){if(I<0||I>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${I}.`)}else if(s.dtype==="int32"&&(I<0||I>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${I}.`);f===1?(v[0]=I*g,v[1]=I*g,v[2]=I*g):v[C]=I*g}const w=b*4;x[w+0]=Math.round(v[0]),x[w+1]=Math.round(v[1]),x[w+2]=Math.round(v[2]),x[w+3]=Math.round(v[3])}o.width=p,o.height=d;const y=new ImageData(x,p,d);return h.putImageData(y,0,0),s}const cz={kernelName:WE,backendName:"cpu",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;we(s,"sum");let i;s.dtype==="bool"?i=so({inputs:{x:s},backend:t,attrs:{dtype:"int32"}}):i=us({inputs:{x:s},backend:t});const u=i.shape.length,c=Ue(o,i.shape),l=bt(c,u);let h=c,d=i;l!=null&&(d=On({inputs:{x:i},backend:t,attrs:{perm:l}}),h=At(h.length,u)),an("sum",h,d.shape.length);const[p,f]=Zt(d.shape,h),m=Gn(d.dtype,"int32");let g=Gl(t,p,m);const x=ne(f),y=t.data.get(g.dataId).values,b=t.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const w=v*x;let C=0;for(let I=0;I<x;++I)C+=b[w+I];y[v]=C}if(a){const v=Mt(g.shape,c),w=g;g=ht({inputs:{x:g},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(d),g}const lz={kernelName:fd,backendName:"cpu",kernelFunc:Vc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=fx(s,o.length);gx(a.length,u,o);const{path:c,steps:l}=xx(i,u),h=l.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:x,expandDims:y}=mx(p,u[g]);let b;yx(x)?b=o[g]:(b=On({inputs:{x:o[g]},backend:t,attrs:{perm:x}}),f.push(b));const v=b.shape.slice();for(let w=0;w<y.length;++w)v.splice(y[w],0,1);rt(b.shape,v)||(b=ht({inputs:{x:b},backend:t,attrs:{shape:v}}),f.push(b)),d===null?d=b:(d=Hd({inputs:{a:b,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=Vc({inputs:{x:d},backend:t,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const dz={kernelName:Vm,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const{inputs:e,backend:t}=n,{dy:r,y:s}=e;we([r,s],"eluGrad");const o=new Float32Array(ne(s.shape)),a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const c=a[u];c>=0?o[u]=i[u]:o[u]=i[u]*(c+1)}return t.makeTensorInfo(s.shape,"float32",o)}const fz={kernelName:Wm,backendName:"cpu",kernelFunc:pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz=ix,gz=ux,xz=cx,yz=lx,vz=hx,bz=dx,wz=at(Gu,n=>{const e=Math.sign(n),t=Math.abs(n),r=1/(1+mz*t);return e*(1-((((bz*r+vz)*r+yz)*r+xz)*r+gz)*r*Math.exp(-t*t))}),Cz={kernelName:Gu,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ql(n){const{inputs:e,backend:t,attrs:r}=n,{input:s}=e,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let u=o;return o<0&&($(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),ht({inputs:{x:s},backend:t,attrs:{shape:i}})}const Iz={kernelName:Lh,backendName:"cpu",kernelFunc:ql};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kz=Ft((n,e)=>n/e),Yx=Ut(Wu,kz),Lf={kernelName:Wu,backendName:"cpu",kernelFunc:Yx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,e,t){const r=n.shape,s=r[0],o=r[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,c=[s,o],l=ne(c),h=hn("float32",l),d=hn("float32",l);for(let g=0;g<s;g++){const x=ea({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,o]}}),y=ea({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,o]}}),b=Pn({inputs:{real:x,imag:y},backend:t}),{real:v,imag:w}=Sz(b,e,t),C=Ns(v,w);for(let I=0;I<o;I++){const k=px(C,I);h[g*o+I]=k.real,d[g*o+I]=k.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b)}const p=t.makeTensorInfo(c,"float32",h),f=t.makeTensorInfo(c,"float32",d),m=Pn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function Sz(n,e,t){const r=ne(n.shape),s=t.data.get(n.dataId),o=t.data.get(s.complexTensorInfos.real.dataId).values,a=t.data.get(s.complexTensorInfos.imag.dataId).values;if(Nz(r)){const i=Pf(o,a,r,e,t),u=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(u,"float32",i.real),l=t.makeTensorInfo(u,"float32",i.imag),h=t.makeTensorInfo([],"float32",uo(r,"float32")),d=us({inputs:{x:h},backend:t}),p=Lf.kernelFunc({inputs:{a:c,b:h},backend:t}),f=Lf.kernelFunc({inputs:{a:l,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=Ns(o,a),u=Tz(i,r,e);return Pw(u)}}function Nz(n){return(n&n-1)===0}function Pf(n,e,t,r,s){if(t===1)return{real:n,imag:e};const o=Ns(n,e),a=t/2,i=Bw(o),u=i.real,c=i.imag,l=[u.length],h=s.makeTensorInfo(l,"float32",u),d=s.makeTensorInfo(l,"float32",c),p=Pn({inputs:{real:h,imag:d},backend:s}),f=zw(o),m=f.real,g=f.imag,x=[m.length],y=s.makeTensorInfo(x,"float32",m),b=s.makeTensorInfo(x,"float32",g),v=Pn({inputs:{real:y,imag:b},backend:s}),w=Pf(u,c,a,r,s),C=w.real,I=w.imag,k=[C.length],S=s.makeTensorInfo(k,"float32",C),N=s.makeTensorInfo(k,"float32",I),E=Pn({inputs:{real:S,imag:N},backend:s}),R=Pf(m,g,a,r,s),_=R.real,O=R.imag,F=[_.length],L=s.makeTensorInfo(F,"float32",_),B=s.makeTensorInfo(F,"float32",O),M=Pn({inputs:{real:L,imag:B},backend:s}),z=Ww(t,r),H=[z.real.length],X=s.makeTensorInfo(H,"float32",z.real),Z=s.makeTensorInfo(H,"float32",z.imag),ee=Pn({inputs:{real:X,imag:Z},backend:s}),ae=Hd({inputs:{a:ee,b:M},backend:s}),oe=si({inputs:{a:E,b:ae},backend:s}),ue=Kx({inputs:{a:E,b:ae},backend:s}),he=Jo({inputs:{input:oe},backend:s}),pe=Jo({inputs:{input:ue},backend:s}),de=oi({inputs:{input:oe},backend:s}),Ce=oi({inputs:{input:ue},backend:s}),ge=ai({inputs:[he,pe],backend:s,attrs:{axis:0}}),Te=ai({inputs:[de,Ce],backend:s,attrs:{axis:0}}),Ee=s.data.get(ge.dataId).values,Le=s.data.get(Te.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(ee),s.disposeIntermediateTensorInfo(ae),s.disposeIntermediateTensorInfo(oe),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(he),s.disposeIntermediateTensorInfo(de),s.disposeIntermediateTensorInfo(pe),s.disposeIntermediateTensorInfo(Ce),s.disposeIntermediateTensorInfo(ge),s.disposeIntermediateTensorInfo(Te),{real:Ee,imag:Le}}function Tz(n,e,t){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let o=0,a=0;for(let i=0;i<e;i++){const u=Uw(s*i,e,t),c=px(n,i);o+=c.real*u.real-c.imag*u.imag,a+=c.real*u.imag+c.imag*u.real}t&&(o/=e,a/=e),Vw(r,o,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ne(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=ht({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=Sk(i,!1,t),c=ht({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const Rz={kernelName:Um,backendName:"cpu",kernelFunc:Ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n){const{backend:e,attrs:t}=n,{shape:r,value:s,dtype:o}=t,a=o||di(s),i=Tt(a,ne(r));return Az(i,s,a),e.makeTensorInfo(r,a,i)}const $z={kernelName:Gm,backendName:"cpu",kernelFunc:Qx};function Az(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz={kernelName:Hm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,s=t,o=hn(r.dtype,ne(r.shape)),[a,i,u,c]=r.shape,l=s.data.get(r.dataId).values;for(let d=0;d<a;d++){const p=d*u*i*c;for(let f=0;f<i;f++){const m=f*(u*c);for(let g=0;g<u;g++){const x=g*c;for(let y=0;y<c;y++){const b=Math.round(u-g-1),v=p+m+x+y;let w=l[v];if(b>=0&&b<u){const C=b*c,I=p+m+C+y;w=l[I]}o[v]=w}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Ik({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(a){const g=m;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const x=ht({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=si({inputs:{a:m,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else m=si({inputs:{a:m,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const x=ht({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=jl(t,m,p,x,f),t.disposeIntermediateTensorInfo(x)}else m=jl(t,m,p,i,f);t.disposeIntermediateTensorInfo(g)}return m}const Oz={kernelName:Nl,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=kk({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=si({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=jl(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const Mz={kernelName:c1,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=ne(r.shape),a=s.shape,i=a[a.length-1],[u,c,l,h]=Yg(r,s);if(c===0)return t.makeTensorInfo(u,r.dtype,[]);const d=t.data.get(s.dataId).values,p=t.bufferSync(r),f=_2(d,p,r.dtype,c,i,l,h,r.shape,o);return t.makeTensorInfo(u,r.dtype,f.values)}const Pz={kernelName:Hb,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r;we([s,o],"gatherV2");const u=Ue(a,s.shape)[0],c=t.data.get(o.dataId).values,l=s.shape[u];for(let v=0;v<c.length;++v){const w=c[v];$(w<=l-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${l-1}]`)}let h=i;i==null&&(h=0);const d=ne(o.shape),p=bx(s,o,u,h),f=ht({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ht({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(m),y=t.bufferSync(f),b=M2(y,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,b.dtype,b.values)}const zz={kernelName:Bh,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ne(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=ht({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=Sk(i,!0,t),c=ht({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const Wz={kernelName:jm,backendName:"cpu",kernelFunc:Vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=at(Qu,n=>Number.isFinite(n)?1:0,"bool"),Gz={kernelName:Qu,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz=at(Zu,n=>Math.abs(n)===1/0?1:0,"bool"),jz={kernelName:Zu,backendName:"cpu",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qz=at(Ju,n=>Number.isNaN(n)?1:0,"bool"),Kz={kernelName:Ju,backendName:"cpu",kernelFunc:qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=V2(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const Yz={kernelName:jb,backendName:"cpu",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz=at(tc,n=>Math.log1p(n)),Zz={kernelName:tc,backendName:"cpu",kernelFunc:Qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=Ft((n,e)=>n&&e),eV=Ut(Gh,Jz,null,"bool"),tV={kernelName:Gh,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV=at(Hh,n=>n?0:1,"bool"),rV={kernelName:Hh,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV=Ft((n,e)=>n||e),oV=Ut(jh,sV,null,"bool"),aV={kernelName:jh,backendName:"cpu",kernelFunc:oV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r;we(s,"LRN");const c=s.shape[3],l=c-1,h=t.data.get(s.dataId).values,d=ne(s.shape),p=new Float32Array(d);function f(m){const g=m%c;let x=m-g+Math.max(0,g-o);const y=m-g+Math.min(g+o,l);let b=0;for(;x<=y;x++){const v=h[x];b+=v*v}return b}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(a+i*g,-u);p[m]=x}return t.makeTensorInfo(s.shape,s.dtype,p)}const uV={kernelName:qh,backendName:"cpu",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r;we(a,"LRNGrad");const h=ne(a.shape),d=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(s.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(h),x=h;for(let y=0;y<x;y++){const b=y%d,v=y-b+Math.max(0,b-i),w=y-b+Math.min(d,b+i+1);let C=0;for(let I=v;I<w;I++)C+=Math.pow(f[I],2);C=c*C+u;for(let I=v;I<w;I++){let k=-2*c*l*f[I]*m[y]/C;y===I&&(k+=Math.pow(C,-l)),k*=p[y],g[I]+=k}}return t.makeTensorInfo(a.shape,s.dtype,g)}const lV={kernelName:Km,backendName:"cpu",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=t;let u=s.shape;const c=u.length,l=Ue(o,u);let h=l;const d=bt(h,c);let p=i.data.get(s.dataId).values;if(d!=null){const v=new Array(c);for(let w=0;w<v.length;w++)v[w]=u[d[w]];p=jx(p,u,s.dtype,d,v),h=At(h.length,c),u=v}we(s,"max"),an("max",h,c);const[f,m]=Zt(u,h),g=ne(m),x=U2(p,g,f,s.dtype),y=i.write(x,f,s.dtype);let b=f;return a&&(b=Mt(f,l)),{dataId:y,shape:b,dtype:s.dtype}}const hV={kernelName:Kh,backendName:"cpu",kernelFunc:Nk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;we(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;$(fn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Cr(s.shape,o,a,c,i,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&rt(l.inShape,l.outShape))h=us({inputs:{x:s},backend:t});else{const d=t.data.get(s.dataId).values,p=Re(s.shape),f=Xx(d,s.shape,s.dtype,p,l,"max");h=t.makeTensorInfo(l.outShape,s.dtype,f.values)}return h}const pV={kernelName:Xh,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;we(s,"maxPool3d");const l=Fs(s.shape,o,a,1,i,u,c),h=t.data.get(s.dataId).values,d=Ck(h,s.shape,s.dtype,Re(s.shape),l,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const mV={kernelName:Yh,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;we([s,o],"maxPool3DGrad");const l=Fs(o.shape,a,i,1,u,c),h=t.bufferSync(o),d=s4(h,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,x=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,v=l.effectiveFilterHeight,w=l.effectiveFilterWidth,C=b-1-l.padInfo.front,I=w-1-l.padInfo.left,k=v-1-l.padInfo.top,S=We(o.shape,"float32"),N=t.bufferSync(s);for(let E=0;E<l.batchSize;++E)for(let R=0;R<l.inChannels;++R)for(let _=0;_<l.inDepth;++_)for(let O=0;O<l.inHeight;++O)for(let F=0;F<l.inWidth;++F){const L=_-C,B=O-k,M=F-I;let z=0;for(let H=0;H<b;H+=g){const X=(L+H)/p;if(!(X<0||X>=l.outDepth||Math.floor(X)!==X))for(let Z=0;Z<v;Z+=x){const ee=(B+Z)/f;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let ae=0;ae<w;ae+=y){const oe=(M+ae)/m;if(oe<0||oe>=l.outWidth||Math.floor(oe)!==oe)continue;const ue=b*v*w-1-d.get(E,X,ee,oe,R),he=H*v*w+Z*w+ae,pe=ue===he?1:0;if(pe===0)continue;const de=N.get(E,X,ee,oe,R);z+=de*pe}}}S.set(z,E,_,O,F,R)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const xV={kernelName:Ym,backendName:"cpu",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;we([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=Cr(i.shape,u,c,1,l,h),p=t.data.get(i.dataId).values,f=We(d.outShape,i.dtype,wk(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,C=b-1-d.padInfo.top,I=We(i.shape,"float32"),k=t.data.get(s.dataId).values,S=We(s.shape,"float32",k);for(let N=0;N<d.batchSize;++N)for(let E=0;E<d.inChannels;++E)for(let R=0;R<d.inHeight;++R)for(let _=0;_<d.inWidth;++_){const O=R-C,F=_-w;let L=0;for(let B=0;B<b;B+=x){const M=(O+B)/m;if(!(M<0||M>=d.outHeight||Math.floor(M)!==M))for(let z=0;z<v;z+=y){const H=(F+z)/g;if(H<0||H>=d.outWidth||Math.floor(H)!==H)continue;const X=b*v-1-f.get(N,M,H,E),Z=B*v+z,ee=X===Z?1:0;if(ee===0)continue;const ae=S.get(N,M,H,E);L+=ae*ee}}I.set(L,N,R,_,E)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const vV={kernelName:Xm,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n,e,t,r,s){const o=Re(e),a=Xx(n,e,t,o,s,"max"),i=wk(n,e,t,s,!0,r);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV={kernelName:qb,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;we(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=Cr(r.shape,s,o,[1,1],a),[h,d]=bV(c,r.shape,r.dtype,i,l),p=u.write(h,l.outShape,r.dtype),f=u.write(d,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=Ue(o,s.shape),c=Zt(s.shape,i)[1],l=ne(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([l]));h.push(d);const p=so({inputs:{x:s},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=Yx({inputs:{a:p,b:d},backend:t});h.push(f);const m=Vc({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:a}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const IV={kernelName:Qh,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;we(s,"min");const i=Ue(o,s.shape);let u=i;const c=bt(u,s.shape.length);let l=s;c!=null&&(l=On({inputs:{x:s},backend:t,attrs:{perm:c}}),u=At(u.length,s.shape.length)),an("min",u,l.shape.length);const[h,d]=Zt(l.shape,u),p=ne(d),f=dn(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];(Number.isNaN(w)||w<b)&&(b=w)}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Mt(h,i),y=ht({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const SV={kernelName:Zh,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,mode:a}=r;we(s,"mirrorPad");const i=o.map((b,v)=>b[0]+s.shape[v]+b[1]),u=o.map(b=>b[0]),c=o.map((b,v)=>b[0]+s.shape[v]),l=a==="reflect"?0:1,h=t.data.get(s.dataId).values,d=s.shape.length,p=Re(s.shape),f=ne(i),m=i.length,g=Re(i),x=hn(s.dtype,f);for(let b=0;b<f;b++){let v=pi(b,m,g);for(let C=0;C<m;C++)v[C]<u[C]?v[C]=u[C]*2-v[C]-l:v[C]>=c[C]&&(v[C]=(c[C]-1)*2-v[C]+l);v=v.map((C,I)=>C-u[I]);const w=Jr(v,d,p);x[b]=h[w]}return{dataId:t.write(x,i,s.dtype),shape:i,dtype:s.dtype}}const TV={kernelName:Jh,backendName:"cpu",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV=Ft((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),RV=Ut(sc,EV),$V={kernelName:sc,backendName:"cpu",kernelFunc:RV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=s.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=Ue([i],s.shape),c=Nk({inputs:{x:s},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),l=Mt(c.shape,u),h=ht({inputs:{x:c},backend:t,attrs:{shape:l}}),d=Kx({inputs:{a:s,b:h},backend:t}),p=A2({inputs:{x:d},backend:t}),f=Vc({inputs:{x:p},backend:t,attrs:{axis:u,keepDims:!1}}),m=ht({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Yx({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const AV={kernelName:xd,backendName:"cpu",kernelFunc:Tk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r;we(s,"multinomial");const u=i?s:Tk({inputs:{logits:s},backend:t,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=t.data.get(u.dataId).values,d=[c,o],p=dn(ne(d),"int32");for(let f=0;f<c;++f){const m=f*l,g=new Float32Array(l-1);g[0]=h[m];for(let b=1;b<g.length;++b)g[b]=g[b-1]+h[m+b];const x=Mg.alea(a.toString()),y=f*o;for(let b=0;b<o;++b){const v=x();p[y+b]=g.length;for(let w=0;w<g.length;w++)if(v<g[w]){p[y+b]=w;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(d,"int32",p)}const FV={kernelName:Kb,backendName:"cpu",kernelFunc:DV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV=Hg;function _V(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r;we(s,"NonMaxSuppression");const c=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,{selectedIndices:h}=OV(c,l,a,i,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const MV={kernelName:Qm,backendName:"cpu",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV=jg;function PV(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r;we(s,"NonMaxSuppressionPadded");const l=t.data.get(s.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=LV(l,h,a,i,u,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const BV={kernelName:Zm,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=qg;function VV(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r;we(s,"NonMaxSuppressionWithScore");const l=t.data.get(s.dataId).values,h=t.data.get(o.dataId).values,d=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:x}=zV(l,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const WV={kernelName:Jm,backendName:"cpu",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r;we(s,"oneHot");const c=ne(s.shape),l=new Float32Array(c*a);l.fill(u);const h=t.data.get(s.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<a&&(l[d*a+h[d]]=i);return t.makeTensorInfo([...s.shape,a],o,l)}const GV={kernelName:rd,backendName:"cpu",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kl(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Jo({inputs:{input:r},backend:t}),o=Kl({inputs:{x:s},backend:t}),a=oi({inputs:{input:r},backend:t}),i=Kl({inputs:{x:a},backend:t}),u=Pn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Qx({backend:t,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const HV={kernelName:bd,backendName:"cpu",kernelFunc:Kl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Jo({inputs:{input:r},backend:t}),o=Ek({inputs:{x:s},backend:t}),a=oi({inputs:{input:r},backend:t}),i=Kl({inputs:{x:a},backend:t}),u=Pn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Qx({backend:t,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const jV={kernelName:nd,backendName:"cpu",kernelFunc:Ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return ql({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{bm(o,l.shape,"All tensors passed to stack must have matching shapes"),$(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=ql({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(h),h}),c=ai({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const qV={kernelName:sd,backendName:"cpu",kernelFunc:Rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;we(s,"pad");const i=o.map((y,b)=>y[0]+s.shape[b]+y[1]),u=o.map(y=>y[0]),c=t.data.get(s.dataId).values,l=ne(s.shape),h=s.shape.length,d=Re(s.shape),p=ne(i),f=i.length,m=Re(i),g=hn(s.dtype,p);a!==0&&g.fill(a);for(let y=0;y<l;y++){const v=pi(y,h,d).map((C,I)=>C+u[I]),w=Jr(v,f,m);g[w]=c[y]}return{dataId:t.write(g,i,s.dtype),shape:i,dtype:s.dtype}}const $k={kernelName:od,backendName:"cpu",kernelFunc:KV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV=Ft((n,e)=>Math.pow(n,e)),YV=Ut(ac,XV),QV={kernelName:ac,backendName:"cpu",kernelFunc:YV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(x=>t.data.get(x.dataId).values),c=s.map(x=>x.shape),l=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,[d,p,f]=X2(u,c,l,o.shape,o.dtype,h,a.shape),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const JV={kernelName:Xb,backendName:"cpu",kernelFunc:ZV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=Y2(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const tW={kernelName:Yb,backendName:"cpu",kernelFunc:eW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=i.map(g=>t.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=Q2(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,p,u);return t.makeTensorInfo(f,o.dtype,m)}const rW={kernelName:Qb,backendName:"cpu",kernelFunc:nW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(n){const{backend:e,attrs:t}=n,{start:r,stop:s,dtype:o,step:a}=t,i=Z2(r,s,a,o);return e.makeTensorInfo([i.length],o,i)}const oW={kernelName:eg,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW=at(ic,n=>1/n),iW={kernelName:ic,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;we(s,"resizeBilinear");const u=Re(s.shape),[c,l]=i,[h,d,p,f]=s.shape,m=t.data.get(s.dataId).values,g=new Float32Array(ne([h,c,l,f])),x=[o&&c>1?d-1:d,o&&l>1?p-1:p],y=[o&&c>1?c-1:c,o&&l>1?l-1:l];let b=0;const v=x[0]/y[0],w=x[1]/y[1];for(let C=0;C<h;C++)for(let I=0;I<c;I++){let k;a?k=v*(I+.5)-.5:k=v*I;const S=Math.max(0,Math.floor(k)),N=k-S,E=Math.min(d-1,Math.ceil(k)),R=C*u[0]+S*u[1],_=C*u[0]+E*u[1];for(let O=0;O<l;O++){let F;a?F=w*(O+.5)-.5:F=w*O;const L=Math.max(0,Math.floor(F)),B=F-L,M=Math.min(p-1,Math.ceil(F)),z=R+L*u[2],H=_+L*u[2],X=R+M*u[2],Z=_+M*u[2];for(let ee=0;ee<f;ee++){const ae=m[z+ee],oe=m[H+ee],ue=m[X+ee],he=m[Z+ee],pe=ae+(ue-ae)*B,de=oe+(he-oe)*B,Ce=pe+(de-pe)*N;g[b++]=Ce}}}return t.makeTensorInfo([h,c,l,f],"float32",g)}const cW={kernelName:ld,backendName:"cpu",kernelFunc:uW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;we([o,s],"resizeBilinearGrad");const i=Re(s.shape),[u,c,l,h]=s.shape,[,d,p]=o.shape,f=new Float32Array(u*c*l*h),m=[a&&d>1?c-1:c,a&&p>1?l-1:l],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],b=t.data.get(o.dataId).values;let v=0;for(let w=0;w<u;w++){const C=w*i[0];for(let I=0;I<d;I++){const k=I*x,S=Math.floor(k),N=Math.min(Math.ceil(k),c-1),E=C+S*i[1],R=C+N*i[1],_=k-S,O=1-_;for(let F=0;F<p;F++){const L=F*y,B=Math.floor(L),M=Math.min(Math.ceil(L),l-1),z=L-B,H=1-z,X=E+B*i[2],Z=E+M*i[2],ee=R+B*i[2],ae=R+M*i[2],oe=O*H,ue=O*z,he=_*H,pe=_*z;for(let de=0;de<h;de++){const Ce=b[v++];f[X+de]+=Ce*oe,f[Z+de]+=Ce*ue,f[ee+de]+=Ce*he,f[ae+de]+=Ce*pe}}}}return t.makeTensorInfo([u,l,c,h],"float32",f)}const hW={kernelName:rg,backendName:"cpu",kernelFunc:lW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;we(s,"resizeNearestNeighbor");const u=Re(s.shape),[c,l]=i,[h,d,p,f]=s.shape,m=t.data.get(s.dataId).values,g=new Float32Array(h*c*l*f),x=[o&&c>1?d-1:d,o&&l>1?p-1:p],y=[o&&c>1?c-1:c,o&&l>1?l-1:l],b=x[0]/y[0],v=x[1]/y[1];let w=0;for(let C=0;C<h;C++){const I=C*u[0];for(let k=0;k<c;k++){const S=a?b*(k+.5):b*k;let N=Math.min(d-1,o?Math.round(S):Math.floor(S));a&&(N=Math.max(0,N));const E=I+N*u[1];for(let R=0;R<l;R++){const _=a?v*(R+.5):v*R;let O=Math.min(p-1,o?Math.round(_):Math.floor(_));a&&(O=Math.max(0,O));const F=E+O*u[2];for(let L=0;L<f;L++){const B=m[F+L];g[w++]=B}}}}return t.makeTensorInfo([h,c,l,f],s.dtype,g)}const pW={kernelName:cd,backendName:"cpu",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;we([o,s],"resizeNearestNeighborGrad");const i=Re(s.shape),u=Re(o.shape),[c,l,h,d]=s.shape,[,p,f]=o.shape,m=new Float32Array(c*l*h*d),g=t.data.get(o.dataId).values,x=[a&&p>1?l-1:l,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],b=x[0]/y[0],v=x[1]/y[1],w=1/b,C=1/v,I=Math.ceil(w)*2+2,k=Math.ceil(C)*2+2;for(let S=0;S<c;S++){const N=S*i[0];for(let E=0;E<l;E++){const R=N+E*i[1],_=Math.floor(E*w),O=Math.floor(_-I/2);for(let F=0;F<h;F++){const L=R+F*i[2],B=Math.floor(F*C),M=Math.floor(B-k/2);for(let z=0;z<d;z++){let H=0;for(let X=0;X<I;X++){const Z=X+O;if(Z<0||Z>=p)continue;const ee=N+Z*u[1],ae=Z*b,oe=Math.min(l-1,a?Math.round(ae):Math.floor(ae));if(E===oe)for(let ue=0;ue<k;ue++){const he=ue+M;if(he<0||he>=f)continue;const pe=ee+he*u[2],de=he*v,Ce=Math.min(h-1,a?Math.round(de):Math.floor(de));F===Ce&&(H+=g[pe+z])}}m[L+z]=H}}}}return t.makeTensorInfo(s.shape,s.dtype,m)}const mW={kernelName:ng,backendName:"cpu",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r;we(s,"reverse");const a=s.shape.length,i=Ue(o,s.shape);if(a===0)return us({inputs:{x:s},backend:t});const u=new sn(s.shape,s.dtype),c=t.bufferSync(s);for(let l=0;l<u.size;l++){const h=u.indexToLoc(l),d=h.slice();i.forEach(p=>d[p]=s.shape[p]-1-d[p]),u.set(c.get(...d),...h)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}const xW={kernelName:hd,backendName:"cpu",kernelFunc:gW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:lg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=hn(r.dtype,ne(r.shape)),[c,l,h,d]=r.shape,[p,f]=sx(a,l,h),m=255,g=Math.sin(s),x=Math.cos(s),y=i.data.get(r.dataId).values;for(let v=0;v<c;v++){const w=v*h*l*d;for(let C=0;C<l;C++){const I=C*(h*d);for(let k=0;k<h;k++){const S=k*d;for(let N=0;N<d;N++){const E=[c,C,k,N],R=E[2],_=E[1];let O=(R-p)*x-(_-f)*g,F=(R-p)*g+(_-f)*x;O=Math.round(O+p),F=Math.round(F+f);let L=o;if(typeof o!="number"&&(N===3?L=m:L=o[N]),O>=0&&O<h&&F>=0&&F<l){const M=F*(h*d),z=O*d,H=w+M+z+N;L=y[H]}const B=w+I+S+N;u[B]=L}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=at(lc,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),bW={kernelName:lc,backendName:"cpu",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ha(o,s,a),d=!0,p=t.bufferSync(s),f=t.bufferSync(o),m=Fo(p,f,a,h,c,u,i,l,0,d);return t.makeTensorInfo(a,m.dtype,m.values)}const CW={kernelName:Zb,backendName:"cpu",kernelFunc:wW};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<e?t=s+1:r=s;return r}function kW(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<=e?t=s+1:r=s;return r}function SW(n,e,t,r,s,o){const a=Tt("int32",t*s);for(let i=0;i<t;++i){const u=n.slice(i*r,(i+1)*r),c=i*s;for(let l=0;l<s;++l)a[c+l]=o==="left"?IW(u,e[l+c]):kW(u,e[l+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,c=SW(i,u,s.shape[0],s.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",c)}const TW={kernelName:e1,backendName:"cpu",kernelFunc:NW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e;we([r,s,o],"select");const a=r.shape.length,i=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=Gn(s.dtype,o.dtype),h=dn(ne(s.shape),l);let d=0;const p=a===0||a>1||s.shape.length===1?1:ne(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?h[d++]=u[f]:h[d++]=c[f];return t.makeTensorInfo(s.shape,l,h)}const RW={kernelName:dd,backendName:"cpu",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=Dd,AW=Fd,DW=at(dc,n=>n>=0?AW*n:$W*(Math.exp(n)-1)),FW={kernelName:dc,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=at(mc,n=>n<0?-1:n>0?1:0),_W={kernelName:mc,backendName:"cpu",kernelFunc:OW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW=at(pc,n=>Math.sin(n)),LW={kernelName:pc,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW=at(fc,n=>Math.sinh(n)),BW={kernelName:fc,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW=11920928955078125e-23,c0=Math.log(zW)+2,VW=at(xc,n=>{const e=n>-c0,t=n<c0,r=Math.exp(n);let s;return t?s=r:e?s=n:s=Math.log(1+r),s}),WW={kernelName:xc,backendName:"cpu",kernelFunc:VW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;we([s],"spaceToBatchND");const i=ne(o),u=[[0,0]];u.push(...a);for(let C=1+o.length;C<s.shape.length;++C)u.push([0,0]);const c=$k.kernelFunc({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),l=$c(c.shape,o,i,!1),h=Ac(l.length,o.length,!1),d=Dc(c.shape,o,i,!1),m=ht({inputs:{x:c},backend:t,attrs:{shape:l}}),y=On({inputs:{x:m},backend:t,attrs:{perm:h}}),w=ht({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),w}const GW={kernelName:md,backendName:"cpu",kernelFunc:UW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=t.data.get(a.dataId).values[0],[h,d,p,f,m]=nk(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const jW={kernelName:t1,backendName:"cpu",kernelFunc:HW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(s.dataId).values),i=t.data.get(r.dataId).values,u=Array.from(t.data.get(o.dataId).values),[c,l,h]=rk(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const KW={kernelName:n1,backendName:"cpu",kernelFunc:qW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=qx(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const YW={kernelName:r1,backendName:"cpu",kernelFunc:XW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=qx(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const ZW={kernelName:s1,backendName:"cpu",kernelFunc:QW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=ha(o,s,i),p=!1,f=t.bufferSync(s);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),x=!!t.data.get(a.dataId).values[0];m=Fo(f,g,i,d,l,c,u,h,x,p);break}case"float32":{const g=t.bufferSync(o),x=t.data.get(a.dataId).values[0];m=Fo(f,g,i,d,l,c,u,h,x,p);break}case"int32":{const g=t.bufferSync(o),x=t.data.get(a.dataId).values[0];m=Fo(f,g,i,d,l,c,u,h,x,p);break}case"string":{const g=t.bufferSync(o),x=Js(t.data.get(a.dataId).values[0]);m=Fo(f,g,i,d,l,c,u,h,x,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(i,m.dtype,m.values)}const eU={kernelName:o1,backendName:"cpu",kernelFunc:JW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ue(a,s.shape)[0],u=vx(s,o,i),c=new Array(s.shape.length).fill(0),l=s.shape.slice();return u.map(h=>{const d=[...l];d[i]=h;const p=ea({inputs:{x:s},backend:t,attrs:{begin:c,size:d}});return c[i]+=h,p})}const nU={kernelName:gd,backendName:"cpu",kernelFunc:tU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:sg,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e;we(t,"square");const s=r.data.get(t.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const u=s[i];o[i]=u*u}return{dataId:r.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU=at(kc,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),oU={kernelName:kc,backendName:"cpu",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r;we(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:b,strides:v}=tx(s.shape,o,a,i,u,c,l,h,d);let w;if(m)w=ht({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||x){$(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const C=Zg(y,b,v),I=ea({inputs:{x:s},backend:t,attrs:{begin:y,size:C}});w=ht({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(I)}else{const C=t.bufferSync(s),I=ak(p,C,v,y);w=t.makeTensorInfo(f,I.dtype,I.values)}return w}const iU={kernelName:ag,backendName:"cpu",kernelFunc:aU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=t.data.get(l.dataId).values,p=t.data.get(h.dataId).values,[f,m]=ik(d,p,s,o,a,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const cU={kernelName:a1,backendName:"cpu",kernelFunc:uU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values[0],[c,l,h]=uk(i,u,s),d=l.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const hU={kernelName:i1,backendName:"cpu",kernelFunc:lU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,i=ck(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const pU={kernelName:u1,backendName:"cpu",kernelFunc:dU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=at(wc,n=>Math.tan(n)),mU={kernelName:wc,backendName:"cpu",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=at(Cc,n=>Math.tanh(n)),xU={kernelName:Cc,backendName:"cpu",kernelFunc:gU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n){const{inputs:e,backend:t}=n,{tensor:r,indices:s,updates:o}=e,{sliceRank:a,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=ha(o,s,r.shape),h=!1,d=t.bufferSync(s),p=t.bufferSync(o),f=t.bufferSync(r),m=Fo(d,p,r.shape,l,u,i,a,c,f,h);return t.makeTensorInfo(r.shape,m.dtype,m.values)}const vU={kernelName:Jb,backendName:"cpu",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;we(s,"tile");const a=hk(t.bufferSync(s),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const wU={kernelName:Ic,backendName:"cpu",kernelFunc:bU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r;we(s,"topk");const i=t.data.get(s.dataId).values,[u,c]=pk(i,s.shape,s.dtype,o,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const IU={kernelName:ig,backendName:"cpu",kernelFunc:CU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n){const{inputs:e,attrs:t,backend:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=t,[l,h,d,p]=s.shape,[f,m]=c??[h,d],g=[l,f,m,p],x=Re(s.shape),y=x[0],b=x[1],v=x[2],w=Re(g),C=w[0],I=w[1],k=w[2],S=hn(s.dtype,ne(g));S.fill(u);const N=r.data.get(s.dataId).values,E=r.data.get(o.dataId).values;for(let _=0;_<l;++_){const O=o.shape[0]===1?E:E.subarray(_*8,_*8+8);for(let F=0;F<f;++F)for(let L=0;L<m;++L)for(let B=0;B<p;++B){let M;const z=O[6]*L+O[7]*F+1;if(z===0)continue;const H=(O[0]*L+O[1]*F+O[2])/z,X=(O[3]*L+O[4]*F+O[5])/z,Z=l0(H,d,i),ee=l0(X,h,i);switch(a){case"nearest":M=$U(N,h,d,y,b,v,_,ee,Z,B,u);break;case"bilinear":M=AU(N,h,d,y,b,v,_,ee,Z,B,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ae=_*C+F*I+L*k+B;S[ae]=M}return r.makeTensorInfo(g,s.dtype,S)}return{dataId:r.write(S,g,s.dtype),shape:s.shape,dtype:s.dtype}}const SU={kernelName:ug,backendName:"cpu",kernelFunc:kU};function l0(n,e,t){switch(t){case"reflect":return NU(n,e);case"wrap":return TU(n,e);case"nearest":return RU(n,e);case"constant":default:return EU(n)}}function NU(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=2*e;t<r&&(t=r*Math.trunc(-t/r)+t),t=t<-e?t+r:-t-1}else if(t>e-1)if(e<=1)t=0;else{const r=2*e;t-=r*Math.trunc(t/r),t>=e&&(t=r-t-1)}return Wo(0,t,e-1)}function TU(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=e-1;t+=e*(Math.trunc(-t/r)+1)}else if(t>e-1)if(e<=1)t=0;else{const r=e-1;t-=e*Math.trunc(t/r)}return Wo(0,t,e-1)}function EU(n,e){return n}function RU(n,e){return Wo(0,n,e-1)}function Qi(n,e,t,r,s,o,a,i,u,c,l){const h=a*r+i*s+u*o+c;return 0<=i&&i<e&&0<=u&&u<t?n[h]:l}function $U(n,e,t,r,s,o,a,i,u,c,l){const h=Math.round(i),d=Math.round(u);return Qi(n,e,t,r,s,o,a,h,d,c,l)}function AU(n,e,t,r,s,o,a,i,u,c,l){const h=Math.floor(i),d=Math.floor(u),p=h+1,f=d+1,m=(f-u)*Qi(n,e,t,r,s,o,a,h,d,c,l)+(u-d)*Qi(n,e,t,r,s,o,a,h,f,c,l),g=(f-u)*Qi(n,e,t,r,s,o,a,p,d,c,l)+(u-d)*Qi(n,e,t,r,s,o,a,p,f,c,l);return(p-i)*m+(i-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;we(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:c}=fk(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const FU={kernelName:cg,backendName:"cpu",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],u=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==o&&(u[c++]=s.shape[p]);const l=new Array(a).fill(0),h=s.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){l[o]=p;const f=ea({inputs:{x:s},backend:t,attrs:{begin:l,size:h}});d[p]=ht({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return d}const _U={kernelName:yd,backendName:"cpu",kernelFunc:OU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r;we(s,"unsortedSegmentSum");const i=s.shape.length,u=o.shape.length,c=[],l=[],h=i-u;let d=o;for(let f=0;f<h;++f){const m=ql({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,l.push(m)}for(let f=0;f<a;++f){const m=uo(f,"int32"),g=t.makeTensorInfo([],"int32",m),x=R2({inputs:{a:g,b:d},backend:t}),y=so({inputs:{x},backend:t,attrs:{dtype:"float32"}}),b=Hd({inputs:{a:y,b:s},backend:t}),v=Vc({inputs:{x:b},backend:t,attrs:{axis:0,keepDims:!1}});c.push(v),l.push(g),l.push(x),l.push(y),l.push(b),l.push(v)}const p=Rk({inputs:c,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const LU={kernelName:vd,backendName:"cpu",kernelFunc:MU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU=[DB,dP,OB,MB,yP,PB,zB,WB,GB,jB,KB,YB,ZB,t4,r4,a4,u4,l4,d4,$B,f4,g4,y4,bP,b4,gP,CP,C4,pP,k4,N4,T4,R4,A4,F4,_4,L4,B4,V4,U4,H4,q4,X4,Q4,Z4,ez,nz,sz,oz,az,iz,cz,dz,IB,fz,IP,Cz,kP,Iz,NP,Rz,$z,Dz,EP,$P,Oz,Mz,Pz,zz,DP,OP,fP,Wz,S4,Gz,jz,Kz,kB,MP,PP,Yz,zP,Zz,tV,rV,aV,uV,lV,hV,WP,pV,mV,xV,vV,wV,IV,SV,GP,TV,$V,FV,jP,KP,MV,BV,WV,YP,GV,jV,qV,$k,QV,NB,JP,JV,tW,rW,oW,mP,Lf,iW,TB,EB,RB,cW,hW,pW,mW,xW,yW,bW,iB,CW,TW,RW,FW,cB,_W,LW,BW,lB,AV,WW,GW,jW,KW,YW,ZW,eU,nU,pB,rU,mB,xB,oU,iU,cU,hU,pU,wB,lz,mU,xU,vU,wU,IU,SU,QP,FU,_U,LU,HV];for(const n of PU)l1(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o={},rl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function BU(n,e){$o[n]=e}function Br(n,e){if(!(n in $o)||e!=null){const r=VU(n,e);if(r!==null)$o[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=$o[n];return t==null||t.isContextLost()?(delete $o[n],Br(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),$o[n])}function zU(n){if(!Q().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function VU(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??zU(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete $o[n]},!1),Q().getBool("SOFTWARE_WEBGL_ENABLED")&&(rl.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",rl)||t.getContext("experimental-webgl",rl):t.getContext("webgl2",rl)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xu;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(xu||(xu={}));var er;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(er||(er={}));var rn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(rn||(rn={}));function Wc(n,e){return[e,n]}function WU(n,e){return n*e}function sl(n){const e=ne(n),t=Math.ceil(e/4);return sf(t)}function wi(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function UU(n,e){const[t,r]=wi(n,e);return t*r*4}function Zx(n,e){const t=n;let r,s,o,a,i,u,c,l,h,d;return Q().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,l=1,h=t.HALF_FLOAT,d=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,c=4,l=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(n,e){const t=e();return Q().getBool("DEBUG")&&GU(n),t}function GU(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+KU(n,e))}const HU=596e-10,jU=65504;function qU(n){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||HU<Math.abs(n)&&Math.abs(n)<jU)}function KU(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function ol(n,e){return _s(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function XU(n,e){const t=_s(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xe(n,()=>n.shaderSource(t,e)),xe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function YU(n,e){const t=_s(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xe(n,()=>n.shaderSource(t,e)),xe(n,()=>n.compileShader(t)),Q().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Ak(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const QU=/ERROR: [0-9]+:([0-9]+):/g;function Ak(n,e){const t=QU.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((h,d)=>za((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${za(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function ZU(n){return _s(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function JU(n,e){if(xe(n,()=>n.linkProgram(e)),!Q().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Tp(n,e){if(xe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function eG(n,e){const t=_s(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),xe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function tG(n,e){const t=_s(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return xe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),xe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function nG(n){return _s(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function rG(n,e){const t=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function sG(n){return _s(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function h0(n,e,t,r,s,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),xe(n,()=>n.vertexAttribPointer(i,s,n.FLOAT,!1,o,a)),xe(n,()=>n.enableVertexAttribArray(i)),!0)}function oG(n,e,t){lG(n,t),xe(n,()=>n.activeTexture(n.TEXTURE0+t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function aG(n,e,t){return _s(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function iG(n,e,t){return n.getUniformLocation(e,t)}function uG(n,e,t,r){xe(n,()=>oG(n,e,r)),xe(n,()=>n.uniform1i(t,r))}function Ep(n,e,t){xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function d0(n,e){xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function al(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+cG(n,e))}function cG(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function _s(n,e,t){const r=xe(n,()=>e());if(r==null)throw new Error(t);return r}function lG(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function ii(n,e=2){return ne(n.slice(0,n.length-e))}function ui(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function il(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ii(n),...ui(n)]),e}function hG(n,e=!1){let t=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((i,u)=>u>=n.length-2?vm(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=io(n).newShape);let s=ne(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=ii(n);let u=2,c=2;n.length&&([u,c]=ui(n)),s=i*(u/2)*(c/2),o=sf(s).map(l=>l*2)}else o=sf(s);return o}function ul(n){return n%2===0}function Xl(n,e){if(n=n.slice(-2),e=e.slice(-2),rt(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||ul(t)&&ul(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&ul(n[0])&&ul(e[0])}let Rp,$p;function dG(n){if(Rp==null){const e=Br(n);Rp=e.getParameter(e.MAX_TEXTURE_SIZE)}return Rp}function pG(n){if($p==null){const e=Br(n);$p=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$p)}function fG(n){if(n===0)return 0;let e;const t=Br(n);return xr(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:xr(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function xr(n,e){return n.getExtension(e)!=null}function p0(n){try{if(Br(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function mG(n){if(n===0)return!1;const e=Br(n);if(n===1){if(!xr(e,"OES_texture_float"))return!1}else if(!xr(e,"EXT_color_buffer_float"))return!1;return Bf(e)}function gG(n){if(n===0)return!1;const e=Br(n);if(n===1){if(!xr(e,"OES_texture_float")||!xr(e,"WEBGL_color_buffer_float"))return!1}else{if(xr(e,"EXT_color_buffer_float"))return Bf(e);const r="EXT_color_buffer_half_float";if(xr(e,r)){const s=e.getExtension(r);return xG(e,s)}return!1}return Bf(e)}function Bf(n){const e=Zx(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function xG(n,e){const t=Zx(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),i}function yG(n){return n!==2?!1:Br(n).fenceSync!=null}function Uc(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=Q();Ie.registerFlag("HAS_WEBGL",()=>Ie.getNumber("WEBGL_VERSION")>0);Ie.registerFlag("WEBGL_VERSION",()=>p0(2)?2:p0(1)?1:0);Ie.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ie.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ie.get("WEBGL_VERSION")===2);Ie.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ie.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ie.registerFlag("WEBGL_PACK",()=>Ie.getBool("HAS_WEBGL"));Ie.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CLIP",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_REDUCE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_CONV_IM2COL",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>dG(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>pG(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ie.getNumber("WEBGL_VERSION");return n===0?0:fG(n)});Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ie.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!T1());Ie.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>mG(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ie.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ie.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ie.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>gG(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_FENCE_API_ENABLED",()=>yG(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ie.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ie.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ie.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>T1()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ie.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ie.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ie.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_EXP_CONV",()=>!1);Ie.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ie.getBool("IS_TEST"));Ie.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ie.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ie.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ie.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(){let n,e,t,r,s,o,a,i,u,c;return Q().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=Q().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(n,e,t="index"){const r=Re(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${i};`}).join("")}function jd(n,e,t="index"){const r=Re(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function vG(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function bG(n,e,t="index"){const r=n.map((o,a)=>a),s=vG(r,e);return s.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function Jx(n){const e=Re(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function ey(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Dk=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Fk}=l_;function wG(n,e,t){const r=[];if(n.forEach(p=>{const f=ne(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=ty(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(p=>CG(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Nn(),u=SG(i);let c,l,h=EG(i);return e.isPacked?(c=IG(e.logicalShape,a,t.enableShapeUniforms),l=TG(i)):(c=kG(e.logicalShape,a,t.enableShapeUniforms),l=NG(i)),t.packedInputs&&(h+=DG),[h,u,l,s,c,o,t.userCode].join(`
`)}function Ci(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return GG(n,e);case 1:return jG(n,e);case 2:return KG(n,e);case 3:return YG(n,e);case 4:return ZG(n,e);case 5:return JG(n);case 6:return eH(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Ok(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return UG(n);case 1:return HG(n,e);case 2:return qG(n,e);case 3:return XG(n,e);default:return QG(n,e)}}function CG(n,e,t=!1,r){let s="";t?s+=Ok(n,r):s+=Ci(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=tH(n,e):s+=nH(n,e)),s}function IG(n,e,t){switch(n.length){case 0:return _k();case 1:return FG(n,e,t);case 2:return VG(n,e,t);case 3:return _G(n,e,t);default:return LG(n,e,t)}}function kG(n,e,t){switch(n.length){case 0:return _k();case 1:return OG(n,e,t);case 2:return WG(n,e,t);case 3:return MG(n,e,t);case 4:return PG(n,e,t);case 5:return BG(n,e);case 6:return zG(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function SG(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function NG(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function TG(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function EG(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${RG}
    ${$G}
    ${AG}
  `}const RG=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$G=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,AG=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,DG=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function _k(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function FG(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function OG(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function _G(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function MG(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${jd(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=fa(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function LG(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function PG(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${jd(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=fa(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function BG(n,e){const t=fa(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function zG(n,e){const t=fa(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function VG(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(rt(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function WG(n,e,t){return rt(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function ma(n){return`offset${n}`}function UG(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Nn();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function GG(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=ma(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function HG(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=Nn();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function jG(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Ii(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=ma(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function qG(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=Nn();if(o!=null&&rt(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function KG(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&rt(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=io(t),u=a;if(u.length<t.length){const d=ki(n,u),p=["row","col"];return`
      ${Ci(d,e)}
      float ${s}(int row, int col) {
        return ${s}(${Si(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ii(n)}
      }
    `;const c=o[0],l=o[1],h=ma(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function XG(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=ki(n,d),m=["b","row","col"];return`
        ${Ok(f,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Si(m,p)});
        }
      `}const i=Nn();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(t[2]/2),h=l*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${h}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function YG(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=io(t),c=i;if(c.length<t.length){const m=ki(n,c),g=["row","col","depth"];return`
        ${Ci(m,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Si(g,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Ii(n)}
      }
    `;const l=n.shapeInfo.texShape,h=l[0],d=l[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const f=ma(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function QG(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Nn();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,d*=o[a-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${r}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function ZG(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=io(t);if(u.length<t.length){const y=ki(n,u),b=["row","col","depth","depth2"];return`
      ${Ci(y,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Si(b,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Ii(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const x=ma(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${r}, uv);
    }
  `}function JG(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=io(e);if(u.length<e.length){const m=ki(n,u),g=["row","col","depth","depth2","depth3"];return`
      ${Ci(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Si(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${Ii(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=ma(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function eH(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=io(e);if(s.length<e.length){const g=ki(n,s),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ci(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Si(x,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Ii(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=ma(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ii(n){const e=n.name,t=ne(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function tH(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=Fk(n.shapeInfo.logicalShape,e.logicalShape),u=it(a),c=a-o;let l;const h=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(y=>`coords.${h[y+c]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((y,b)=>`coords.${h[b+c]}`).join(", ");let p="return outputValue;";const m=ne(n.shapeInfo.logicalShape)===1,x=ne(e.logicalShape)===1;if(o===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const y=o-2,b=o-1;i.indexOf(y)>-1&&i.indexOf(b)>-1?p="return vec4(outputValue.x);":i.indexOf(y)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${d});
      ${p}
    }
  `}function nH(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&rt(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=it(u),l=Fk(n.shapeInfo.logicalShape,e.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":u<2&&l.length>=1?d="coords = 0;":d=l.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${r}(${f});
    }
  `}function it(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function ty(n,e,t){const{newShape:r,keptDims:s}=io(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!n&&o>1&&!rt(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function ki(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Si(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n,e,t,r){const s=t.map((l,h)=>{const d={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(d.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=wG(s,a,e),u=YU(n.gl,i),c=n.createProgram(u);return Q().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},Mk(n,e,c)))}function Mk(n,e,t){const r=[],s=[];let o,a,i,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),Q().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const l=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,l),offset:n.getUniformLocation(t,`offset${h}`,l)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,l),d.texShape=n.getUniformLocation(t,`${h}TexShape`,l)),r.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",l),i=n.getUniformLocation(t,"outShapeStrides",l),a=n.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(const h of e.customUniforms)s.push(n.getUniformLocation(t,h.name,l));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function f0(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!rt(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!rt(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function sH(n,e,t,r,s){e.program.enableShapeUniforms||(f0(e.inShapeInfos,t),f0([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),Q().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:l,offset:h,shape:d,texShape:p}=e.variablesLocations[u];if(d){const{uniformShape:f}=ty(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(ne(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(l,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=Re(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],h=s[u];if(c.type==="float")n.gl.uniform1fv(l,h);else if(c.type==="vec2")n.gl.uniform2fv(l,h);else if(c.type==="vec3")n.gl.uniform3fv(l,h);else if(c.type==="vec4")n.gl.uniform4fv(l,h);else if(c.type==="int")n.gl.uniform1iv(l,h);else if(c.type==="ivec2")n.gl.uniform2iv(l,h);else if(c.type==="ivec3")n.gl.uniform3iv(l,h);else if(c.type==="ivec4")n.gl.uniform4iv(l,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function oH(n,e,t){let r="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:h}=ty(n.packedInputs,a.shape,u);let d="",p="",f="";if(l.length===1&&n.packedInputs){const w=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const w=Re(l);f=`${w[0]===u[1]}_${w[w.length-1]===u[1]}`}const m=a.shape.length,g=l.length===2&&rt(a.shape,u),x=ne(a.shape)===1,y=ti(a.shape,t.shape),b=!n.packedInputs&&m===t.shape.length&&rt(u,t.texData.texShape),v=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${m}_${b}_${c?h:""}_${l.length}_${x}_${y}_${g}_${d}_${p}_${f}_${v}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${Q().getNumber("WEBGL_VERSION")}`,o}function gn(n){return Q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Nn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?jd(["r","c","d"],e):fa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Nn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?jd(["r","c","d"],e):fa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uH{constructor(e){this.variableNames=["A"],this.outTexUsage=er.DOWNLOAD;const t=Nn();this.outputShape=e,this.userCode=`
      ${Dk}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=er.DOWNLOAD;const t=Nn();this.outputShape=e,this.userCode=`
      ${Dk}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH={R:0,G:1,B:2,A:3};class m0{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Nn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${lH[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?ey():Jx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hH{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Nn();this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ey():Jx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(n){const e=Nn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return XU(n,t)}function pH(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return eG(n,e)}function fH(n){const e=new Uint16Array([0,1,2,2,1,3]);return tG(n,e)}function Gc(n,e,t,r,s,o){rG(e,t);const a=nG(n),i=n.TEXTURE_2D;return xe(n,()=>n.bindTexture(i,a)),xe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),xe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),xe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),xe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),Q().getNumber("WEBGL_VERSION")===1?xe(n,()=>n.texImage2D(i,0,r,e,t,0,s,o,null)):xe(n,()=>n.texStorage2D(i,1,r,e,t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function Lk(n){return n.internalFormatFloat}function mH(n,e,t,r){const[s,o]=Wc(e,t);return Gc(n,s,o,Lk(r),r.textureFormatFloat,n.FLOAT)}function Pk(n){return n.internalFormatHalfFloat}function gH(n,e,t,r){const[s,o]=Wc(e,t);return Gc(n,s,o,Pk(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Bk(n){return n.downloadTextureFormat}function xH(n,e,t,r){const[s,o]=Wc(e,t);return Gc(n,s,o,Bk(r),n.RGBA,n.UNSIGNED_BYTE)}function zk(n){return n.internalFormatPackedFloat}function yH(n,e,t,r){const[s,o]=wi(e,t);return Gc(n,s,o,zk(r),n.RGBA,n.FLOAT)}function Vk(n){return n.internalFormatPackedHalfFloat}function vH(n,e,t,r){const[s,o]=wi(e,t);return Gc(n,s,o,Vk(r),n.RGBA,r.textureTypeHalfFloat)}function bH(n,e,t){return xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),h0(n,e,"clipSpacePos",t,3,20,0)&&h0(n,e,"uv",t,2,20,12)}function wH(n,e,t,r,s,o){xe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),Q().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,i,a)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,i,a)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function CH(n,e,t){xe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?Q().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):Q().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function IH(n,e,t,r){const s=n.createBuffer();xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return xe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function kH(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function SH(n,e,t,r){const[s,o]=Wc(e,t),a=4,i=new Uint8Array(WU(e*t,a));return xe(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function NH(n,e,t,r,s,o,a,i){const u=n,c=new Float32Array(UU(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function TH(n,e,t){const r=new Float32Array(e*t*4);return xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ap{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Q().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,BU(t,e)):this.gl=Br(t),e=this.gl,Q().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>xe(o,()=>o.createVertexArray()),this.bindVertexArray=a=>xe(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>xe(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>xe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>xe(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>xe(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>xe(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>xe(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Q().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=ol(this.gl,o),xr(this.gl,a))this.textureHalfFloatExtension=ol(this.gl,a);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),xr(this.gl,s))this.colorBufferHalfFloatExtension=ol(this.gl,s);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",xr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(xr(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=pH(this.gl),this.indexBuffer=fH(this.gl),this.framebuffer=sG(this.gl),this.textureConfig=Zx(this.gl,this.textureHalfFloatExtension)}get debug(){return Q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;xe(e,()=>e.finish()),xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xe(e,()=>e.deleteFramebuffer(this.framebuffer)),xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),mH(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),gH(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),xH(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),CH(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),wH(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),vH(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),yH(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(d0(this.gl,this.framebuffer),this.outputTexture=null),xe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>SH(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return NH(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kH(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=IH(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>TH(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=dH(t));const r=ZU(t);xe(t,()=>t.attachShader(r,this.vertexShader)),xe(t,()=>t.attachShader(r,e)),JU(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&Tp(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;xe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bH(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(xe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Tp(this.gl,this.program),xe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?aG(this.gl,e,t):iG(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),uG(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=wi(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Tp(this.gl,this.program),al(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}xe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ol(this.gl,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await tv(()=>this.disposed||this.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=EH(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in Q().platform&&(r=Q().platform.setTimeoutCustom.bind(Q().platform)),tv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ep(this.gl,e,this.framebuffer),this.debug&&al(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ep(this.gl,this.outputTexture,this.framebuffer),this.debug&&al(this.gl)):d0(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;Ep(s,e,this.framebuffer),this.debug&&al(s),this.outputTexture=e,xe(s,()=>s.viewport(0,0,t,r)),xe(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),xe(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function EH(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:RH,bincountImpl:Wk,bincountReduceImpl:$H,bitwiseAndImpl:AH,castImpl:DH,ceilImpl:FH,concatImpl:OH,equalImpl:_H,expImpl:MH,expm1Impl:LH,floorImpl:PH,gatherNdImpl:BH,gatherV2Impl:zH,greaterImpl:VH,greaterEqualImpl:WH,lessImpl:UH,lessEqualImpl:GH,linSpaceImpl:HH,logImpl:jH,maxImpl:qH,maximumImpl:KH,minimumImpl:XH,multiplyImpl:YH,negImpl:QH,notEqualImpl:ZH,prodImpl:JH,raggedGatherImpl:ej,raggedRangeImpl:tj,raggedTensorToTensorImpl:nj,rangeImpl:rj,rsqrtImpl:sj,scatterImpl:oj,sigmoidImpl:aj,simpleAbsImpl:Uk,sliceImpl:ij,sparseFillEmptyRowsImpl:uj,sparseReshapeImpl:cj,sparseSegmentReductionImpl:Gk,sqrtImpl:lj,staticRegexReplaceImpl:hj,stridedSliceImpl:dj,stringNGramsImpl:pj,stringSplitImpl:fj,stringToHashBucketFastImpl:mj,subImpl:gj,tileImpl:xj,topKImpl:yj,transposeImpl:ny,uniqueImpl:vj}=CB;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function wn(n,e){return e===1?[n]:Hk(n,e)}function bj(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wj{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=wn("rc",this.rank),r=it(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Cj(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ey():Jx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function Cj(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?bG(["r","c","d"],"inputShape"):fa(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ij{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=x0(t,r),o=y0(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=g0(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===rn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===rn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===rn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===rn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===rn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=x0(r,s),a=y0(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=g0(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=Q().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function kj(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function g0(n,e,t,r,s){const o=Sj(e,r);let a;if(s){const[u,c]=wi(n[0],n[1]);a=u*c}else{const[u,c]=Wc(n[0],n[1]);a=u*c}const i=kj(t,o);return a*i}function Sj(n,e){switch(n){case rn.PACKED_2X2_FLOAT32:return zk(e);case rn.PACKED_2X2_FLOAT16:return Vk(e);case rn.UNPACKED_FLOAT32:return Lk(e);case rn.UNPACKED_FLOAT16:return Pk(e);case rn.PACKED_4X1_UNSIGNED_BYTE:return Bk(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Nj(n){return Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?rn.PACKED_2X2_FLOAT32:rn.UNPACKED_FLOAT32:n?rn.PACKED_2X2_FLOAT16:rn.UNPACKED_FLOAT16}function x0(n,e){if(n===er.UPLOAD)return rn.PACKED_2X2_FLOAT32;if(n===er.RENDER||n==null)return Nj(e);if(n===er.DOWNLOAD||n===er.PIXELS)return rn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function y0(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const kr="if (isnan(x)) return x;",Tj="return x;",v0="return abs(x);",Ej="return (x >= 0.0) ? x : (exp(x) - 1.0);",Rj=kr+`
  return (x < 0.0) ? 0.0 : x;
`,$j=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Bs="return x;",Aj="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj="return x;",Fj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Oj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_j=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mj="return 1.0 / (1.0 + exp(-1.0 * x));";class Us{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lj{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);const t=e.length,r=wn("rc",t),s=it(t),o=bj(t,r),a=r.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj=gw,Bj=1e-7,zj=1e-4,cl={};function Vj(n){return n in cl||(cl[n]={}),cl[n]}const Wj=Q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Uj=600;function Gj(){return Q().global.screen==null?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*Uj/1024/1024}class qd extends ym{nextDataId(){return qd.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Ap)t=e;else{const r=Br(Q().getNumber("WEBGL_VERSION"),e);t=new Ap(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Br(Q().getNumber("WEBGL_VERSION"));t=new Ap(r),this.binaryCache=Vj(Q().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ij(this.gpgpu),this.numMBBeforeWarning=Gj(),this.texData=new _b(this,Gr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const i=this.makeTensorInfo(t,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=il(t),l=new m0(c,!1,a),h=this.runWebGLProgram(l,[i],r,[[s,o]]);return h.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,t,r){if((Q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Q().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:er.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:er.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=t;if(a!=null){let d;u?d=new Us(i,Bs):d=new Zr(i,Bs);const p=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:s}],s),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=En());let h;if(s==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Ns(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=En()-l),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(o!=null){let f;u?f=new Us(s,Bs):f=new Zr(s,Bs);const m=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(r!=null)return this.convertAndCacheOnCPU(e);if(Q().getBool("DEBUG")&&!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&Q().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...sl(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];h=Ns(m,g)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=ne(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const f=this.gpgpu.gl;xe(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Gr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;u?p=new Us(o,Bs):p=new Zr(o,Bs);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),h=Gr().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Js(s));return We(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!qU(r))throw Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=ne(t);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...sl(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=Q().getBool("WEBGL_PACK")&&s===!0,i=a?il(t):t,u=a?new cH(i):new uH(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=Uo(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=Uo(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=RE(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:En(),endMs:null}}endTimer(e){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=En(),e)}async getQueryTime(e){if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Wj){return Q().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&ne(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Zn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Pj(e.shape,t)}packedUnaryOp(e,t,r){const s=new Us(e.shape,t),o=this.compileAndRun(s,[e],r);return Gr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=Uk(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,v0,e.dtype);const t=new Zr(e.shape,v0),r=this.compileAndRun(t,[e]);return Gr().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Ru(r[0])){const o=r.map(a=>qs(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Gr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new Lj(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new wj(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[ii(e.shape),...ui(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[ii(t),...ui(t)],a=new jk(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const d=ne(o),p=t[0]*t[1]*4;$(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=il(o);let u;s?u=new iH(i):u=new aH(i);const c=!0,l=[t??sl(i)],h=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,t);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===xu.DENSE){const x=a??sl(e.outputShape);u.texShape=x.map(y=>y*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),ne(i.shape)===0)return u.values=hn(i.dtype,0),i;const c=[],l=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!e.packedInputs&&ne(x.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!e.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!Xl(y.shape,x.shape)){const b=x,v=x.shape;x.shape=y.shape,x=this.packedReshape(x,v),c.push(x),y=this.texData.get(x.dataId),b.shape=v}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:u,isUniform:!1},d=oH(e,l,h),p=this.getAndSaveBinary(d,()=>rH(this.gpgpu,e,l,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),Q().get("ENGINE_COMPILE_ONLY")||sH(this.gpgpu,p,l,h,s),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=Q().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=En();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!Q().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const x=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),x}return i}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Y(()=>{if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Q().getBool("DEBUG");Q().set("DEBUG",!1);const t=this.abs(nt(1e-8)).dataSync()[0];if(Q().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Bj:zj}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=En());let h=t.texShape;if(h==null&&(h=hG(r,u),t.texShape=h),o!=null){const d=il(r);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!g)&&([f,m]=wi(h[0],h[1])),u?p=new hH(d,g):p=new m0(d,g);const x=g?[m,f]:h,y=this.makeTensorInfo(x,s),b=this.texData.get(y.dataId);g?b.usage=er.PIXELS:b.usage=er.UPLOAD,b.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,o);const v=[[m,f]],C=this.runWebGLProgram(p,[y],s,v,!0),I=this.texData.get(C.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,Q().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=En()-l)}else{const d=this.acquireTexture(h,i,s,u);t.texture=d}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=Hj(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*kl(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Fw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Ak(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=Mk(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=Gr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,a,i);return Gr().makeTensorFromDataId(c,t,r,u)}}qd.nextDataId=0;function Hj(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */E1()&&D1("webgl",()=>new qd,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ry=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ta{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Be(t,r),this.enableShapeUniforms=gn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Ni{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Be(t,r);const o=this.outputShape.length;this.enableShapeUniforms=gn(o);let a="";if(s)if(o===0||ne(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${it(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=wn("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jj={kernelName:Yu,backendName:"webgl",kernelFunc:jn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),i=jn({inputs:{x:r},backend:t}),u=jn({inputs:{x:s},backend:t});return a.complexTensorInfos={real:i,imag:u},o}const qj={kernelName:Am,backendName:"webgl",kernelFunc:xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qk="return (a < 0.) ? b * a : a;",Kk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Kj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",uo(o,"float32")),i=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(Kk,s.shape,a.shape):new ta(qk,s.shape,a.shape),u=t.runWebGLProgram(i,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const Xj={kernelName:Vh,backendName:"webgl",kernelFunc:Kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xk="return (a < 0.) ? b * a : a;",Yk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Yj(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(Yk,r.shape,s.shape):new ta(Xk,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const Qj={kernelName:ad,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ti="if (isnan(x)) return x;";function Je({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const h=i.texData.get(a.dataId),d=t(h.values,u);return i.makeTensorInfo(a.shape,u,d)}const c=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new Us(a.shape,e):l=new Zr(a.shape,n),i.runWebGLProgram(l,[a],u)}}function un({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(b=>{const[v,w]=b,C={dataId:v.dataId,dtype:v.dtype,shape:u.shape},I={dataId:w.dataId,dtype:w.dtype,shape:c.shape},k=new ta(n,u.shape,c.shape);return l.runWebGLProgram(k,[C,I],Gn(v.dtype,w.dtype))}),y=xo({inputs:{real:g,imag:x},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(x),y}const h=o||Gn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?Ts(f):f,x=u.dtype==="string"?Ts(m):m,[y,b]=s(u.shape,c.shape,g,x,h),v=l.makeTensorInfo(b,h),w=l.texData.get(v.dataId);return w.values=y,v}const d=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Ni(e,u.shape,c.shape,t):p=new ta(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}function yu(n,e=!1){if(n==="linear")return e?Dj:Tj;if(n==="relu")return e?Oj:Rj;if(n==="elu")return e?Fj:Ej;if(n==="relu6")return e?_j:$j;if(n==="prelu")return e?Yk:Xk;if(n==="leakyrelu")return e?Kk:qk;if(n==="sigmoid")return e?Mj:Aj;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qk{constructor(e,t,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=gn(this.outputShape.length);const l=s?e[1]:e[2],h=Math.ceil(l/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,x="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${v};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b0={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class w0{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Be(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C0="return a * b;";function sy(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=Gn(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new w0(b0.REAL,r.shape,s.shape),l=new w0(b0.IMAG,r.shape,s.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=xo({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([r,s])){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,l]=YH(r.shape,s.shape,i.values,u.values,o),h=t.makeTensorInfo(l,o),d=t.texData.get(h.dataId);return d.values=c,h}let a;return Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ni(C0,r.shape,s.shape):a=new ta(C0,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const Zj={kernelName:oc,backendName:"webgl",kernelFunc:sy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n,e,t){const r=[ii(n.shape),...ui(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[ii(e),...ui(e)],a=new jk(o,r),i=!0,u=[r],c=t.runWebGLProgram(a,[s],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,i=ne(s.shape),u=Lb(o,i),c=ne(u);$(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!Xl(s.shape,u)&&!(l.texture!==null&&Xl(l.shape,u))?Jj(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const eq={kernelName:ud,backendName:"webgl",kernelFunc:fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I0{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${Qa(h)?h.toPrecision(2):h}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tq{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,h=r%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Ad(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function xa(n,e,t,r){const s=nq(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,h;t==="mean"?l=a===0?new I0({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new I0({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new tq({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),h=o,o=r.runWebGLProgram(l,[o],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rq{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=it(this.rank),o=sq(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function sq(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[t[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=it(this.rank),o=Hk("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(n,e,t){const r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oq(n.shape,e):new rq(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aq(n,e,t,r){const s=e,o=n.shape.length,a=Ue(s,n.shape);let i=a;const u=bt(i,o),c=u!=null;let l=n;c&&(l=Kd(n,u,r),i=At(i.length,o)),an("sum",i,o);const[h,d]=Zt(l.shape,i);let p=h;t&&(p=Mt(h,a));const f=ne(d),g=ne(n.shape)/f,x=fe({inputs:{x:l},attrs:{shape:[g,f]},backend:r}),y=dg(n.dtype),b=xa(x,y,"sum",r),v=fe({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),c&&r.disposeIntermediateTensorInfo(l),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return aq(s,o,a,t)}const iq={kernelName:fd,backendName:"webgl",kernelFunc:Xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const h=a.texData.get(s.dataId).values,d=ny(h,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const p=a.texData.get(c.dataId);p.values=d}else c=Kd(s,o,a);return c}const uq={kernelName:Va,backendName:"webgl",kernelFunc:Sn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=1e3;function Yl({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=r?e.shape[l-1]:e.shape[l-2],p=t?n.shape[c-1]:n.shape[c-2],f=r?e.shape[l-2]:e.shape[l-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=ne(m),y=ne(g),v=Be(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);$(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const w=t?[x,h,p]:[x,p,h],C=r?[y,f,d]:[y,d,f],I=fe({inputs:{x:n},backend:s,attrs:{shape:w}}),k=fe({inputs:{x:e},backend:s,attrs:{shape:C}}),S=[I,k],N=Math.max(x,y),E=t?I.shape[1]:I.shape[2],R=o!=null,_=a!=null,O=u==="leakyrelu",F=u!=null?yu(u,!0):null,L=R||_||O||F!=null;let B;if((p===1||f===1)&&E>Zk&&L===!1){let z=I,H=k;t&&(z=Sn({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(z)),r&&(H=Sn({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(H));const X=f!==1,Z=f===1;let ee=z;X&&(ee=fe({inputs:{x:z},backend:s,attrs:{shape:[N,E,1]}}),S.push(ee));const ae=f===1?2:1;let oe=H;Z&&(oe=fe({inputs:{x:H},backend:s,attrs:{shape:[N,1,E]}}),S.push(oe));const ue=sy({inputs:{a:ee,b:oe},backend:s});B=Xd({inputs:{x:ue},backend:s,attrs:{axis:ae,keepDims:!0}}),S.push(ue)}else{const z=Gn(n.dtype,e.dtype),H=new Qk(w,C,[N,p,f],t,r,R,F,_,O),X=[I,k];if(o!=null&&X.push(o),_&&X.push(a),O){const Z=s.makeTensorInfo([],"float32",uo(i,"float32"));X.push(Z),S.push(Z)}B=s.runWebGLProgram(H,X,z)}const M=fe({inputs:{x:B},backend:s,attrs:{shape:v}});S.push(B);for(const z of S)s.disposeIntermediateTensorInfo(z);return M}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return Yl({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}const lq={kernelName:Sl,backendName:"webgl",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k0="return abs(x);";function hq(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=Uk(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Us(r.shape,k0):s=new Zr(r.shape,k0),t.runWebGLProgram(s,[r],r.dtype)}const dq={kernelName:wh,backendName:"webgl",kernelFunc:hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,fq=Je({opSnippet:pq}),mq={kernelName:$u,backendName:"webgl",kernelFunc:fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq=kr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,xq=Je({opSnippet:gq}),yq={kernelName:Au,backendName:"webgl",kernelFunc:xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0="return a + b;",vq=un({opSnippet:S0,packedOpSnippet:S0,supportsComplex:!0,cpuKernelImpl:RH}),bq={kernelName:fi,backendName:"webgl",kernelFunc:vq};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wq{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cq{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return jn({inputs:{x:r[0]},backend:t});if(r.length>Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=wl({inputs:r.slice(0,u),backend:t}),l=wl({inputs:r.slice(u),backend:t});return wl({inputs:[c,l],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>Gn(u,c)),o=r.map(u=>u.shape),i=Q().getBool("WEBGL_PACK")?new Cq(r[0].shape,o):new wq(r[0].shape,o);return t.runWebGLProgram(i,r,s)}const Iq={kernelName:km,backendName:"webgl",kernelFunc:wl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ue(o,s.shape);let c=u;const l=bt(c,i);let h=s;l!=null&&(h=Sn({inputs:{x:s},backend:t,attrs:{perm:l}}),c=At(c.length,i)),an("all",c,i);const[d,p]=Zt(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=xa(m,m.dtype,"all",t);let x;if(a){const y=Mt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const Sq={kernelName:Sm,backendName:"webgl",kernelFunc:kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ue(o,s.shape);let c=u;const l=bt(c,i);let h=s;l!=null&&(h=Sn({inputs:{x:s},backend:t,attrs:{perm:l}}),c=At(c.length,i)),an("any",c,i);const[d,p]=Zt(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=xa(m,m.dtype,"any",t);let x;if(a){const y=Mt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const Tq={kernelName:Nm,backendName:"webgl",kernelFunc:Nq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eq{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rq{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=it(u),l=wn("coords",u);let h,d;if(a===1){d=u+1;const k=it(d);h=`
        ${k} sourceLocR = ${k}(${l.join()}, 0);
        ++${l[u-1]};
        ${k} sourceLocG = ${k}(${l.join()}, 0);
        ++${l[u-2]};
        ${k} sourceLocA = ${k}(${l.join()}, 0);
        --${l[u-1]};
        ${k} sourceLocB = ${k}(${l.join()}, 0);
        --${l[u-2]};`}else d=u,h=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(k=>"int "+k),g=wn("sourceLocR",d-1).concat("inIdx.r"),x=wn("sourceLocG",d-1).concat("inIdx.g"),y=wn("sourceLocB",d-1).concat("inIdx.b"),b=wn("sourceLocA",d-1).concat("inIdx.a"),v=r==="max"?"greaterThan":"lessThan",w=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,I=s?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=Ad(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new Eq(i,t,r==null),c=[e];r!=null&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const h=Jk(n,e,t,l);return n.disposeIntermediateTensorInfo(l),h}function eS(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=Ad(o),i=new Rq(s,a,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=eS(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function tS(n,e,t,r){const s=[t];if(an("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!Q().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=n.unpackTensor(e),o.push(u));const[c,l]=Zt(u.shape,s),h=ne(l),d=fe({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=Jk(n,d,r);o.push(p);const f=fe({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return eS(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ue(o,s.shape);const i=bt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=Sn({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=At(a.length,u.shape.length)),an("argMax",[a[0]],u.shape.length);const l=tS(t,u,a[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const Aq={kernelName:Ch,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ue(o,s.shape);const i=bt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=Sn({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=At(a.length,u.shape.length)),an("argMin",[a[0]],u.shape.length);const l=tS(t,u,a[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const Fq={kernelName:Ih,backendName:"webgl",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq=kr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,_q=Je({opSnippet:Oq}),Mq={kernelName:Du,backendName:"webgl",kernelFunc:_q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=kr+"return log(x + sqrt(x * x + 1.0));",Pq=Je({opSnippet:Lq}),Bq={kernelName:Fu,backendName:"webgl",kernelFunc:Pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq=kr+`
  return atan(x);
`,Vq=Je({opSnippet:zq}),Wq={kernelName:Ou,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=ry+`
  return atan(a, b);
`,Gq=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ga+`
  return result;
`,Hq=un({opSnippet:Uq,packedOpSnippet:Gq}),jq={kernelName:Mu,backendName:"webgl",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=kr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Kq=Je({opSnippet:qq}),Xq={kernelName:_u,backendName:"webgl",kernelFunc:Kq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vu{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(m||(y="-1.0 / 1e-20"),r){const k=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${k} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const w=Math.floor(a/4)*4,C=a%4,I=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${w};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${v});
      }
    `}}class oy{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg";let v="0.0";if(b||(v="-1.0 / 1e-20"),r){const N=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${N} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const I=Math.floor(a/4)*4,k=a%4,S=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${I};
            if (${k===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${k===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${k===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Uc(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;$(fn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Cr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&rt(l.inShape,l.outShape))return jn({inputs:{x:s},backend:t});const h=new vu(l,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const Qq={kernelName:kh,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],h=Fs(s.shape,o,a,l,i,u,c),d=new oy(h,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const Jq={kernelName:Sh,backendName:"webgl",kernelFunc:Zq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eK{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class tK{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=Fs(a.shape,i,u,h,c,l),p=new tK(d);return t.runWebGLProgram(p,[s],a.dtype)}const rK={kernelName:Em,backendName:"webgl",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;Uc([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=Cr(a.shape,i,u,1,c),h=new eK(l);return t.runWebGLProgram(h,[s],a.dtype)}const oK={kernelName:Tm,backendName:"webgl",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return Yl({a:s,b:o,transposeA:a,transposeB:i,backend:t})}const iK={kernelName:Nh,backendName:"webgl",kernelFunc:aK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uK{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Be(e,t),Be(e,r);let i="0.0";s!=null&&(Be(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Be(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cK{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Be(e,t),Be(e,r);let i="vec4(0.0)";s!=null&&(Be(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Be(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=n;$(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let h=null;i!=null&&(h=i.shape,c.push(i));const d=Q().getBool("WEBGL_PACK_NORMALIZATION")?new cK(r.shape,s.shape,o.shape,l,h,u):new uK(r.shape,s.shape,o.shape,l,h,u);return e.runWebGLProgram(d,c,c[0].dtype)},hK={kernelName:Ph,backendName:"webgl",kernelFunc:lK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dK{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=it(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=pK(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${zf[i]} = start[${i}] + coords.${zf[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const zf=["x","y","z","w","u","v"];function pK(n){if(n===1)return"sourceLoc";if(n<=6)return zf.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fK{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=it(this.rank),r=wn("coords",this.rank),s=wn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,h)=>`start[${h}]`).join()});`:e.map((l,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=ex(e,Re(n.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function Ei(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[i,u]=$d(s,o,a);if(Qg(s,i,u),ne(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.texData.get(s.dataId),d=ij(h.values,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,d)}const{isPacked:c}=t.texData.get(s.dataId),l=Jg(s.shape,i,u);if(c||!l){const h=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fK(u):new dK(u),d=[i];return t.runWebGLProgram(h,[s],s.dtype,d)}return t.uploadToGPU(s.dataId),mK(s,i,u,t)}const gK={kernelName:pd,backendName:"webgl",kernelFunc:Ei};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;$(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),u=$c(s.shape,o,i),c=Ac(u.length,o.length),l=Dc(s.shape,o,i),h=ox(a,o.length),d=ax(l,a,o.length),p=[],f=fe({inputs:{x:s},backend:t,attrs:{shape:u}}),m=Sn({inputs:{x:f},backend:t,attrs:{perm:c}}),g=fe({inputs:{x:m},backend:t,attrs:{shape:l}}),x=Ei({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},yK={kernelName:Th,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.readSync(s.dataId),u=t.readSync(o.dataId),c=Wk(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const bK={kernelName:Rm,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,CK=`
  return float(int(a.r) & int(b.r));
`;function IK(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=Q().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const u=t.texData.get(r.dataId).values,c=t.texData.get(s.dataId).values,[l,h]=AH(r.shape,s.shape,u,c,r.dtype),d=t.makeTensorInfo(h,r.dtype),p=t.texData.get(d.dataId);return p.values=l,d}let i;return o?i=new Ni(wK,r.shape,s.shape,!1):i=new ta(CK,r.shape,s.shape),t.runWebGLProgram(i,[r,s],r.dtype)}const kK={kernelName:$m,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),i=Be(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const NK={kernelName:Ub,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK="return float(a != b);",nS=un({opSnippet:TK,cpuKernelImpl:ZH,dtype:"bool"}),EK={kernelName:td,backendName:"webgl",kernelFunc:nS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hc(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return jn({inputs:{x:s.complexTensorInfos.real},backend:t})}const RK={kernelName:tg,backendName:"webgl",kernelFunc:Hc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K="return float(int(x));";function AK(n,e){const t=new Zr(n.shape,$K),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return jn({inputs:{x:s},backend:t});const a=Kt(s.shape),i=Vf({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=xo({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=Hc({inputs:{input:s},backend:t}),i=Vf({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Pb(s.dtype,o)){const a=jn({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[i,u,c]=DH(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}if(o==="int32")return AK(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",hn("bool",1)),u=nS({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const DK={kernelName:Lu,backendName:"webgl",kernelFunc:Vf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N0="return ceil(x);",FK=Je({opSnippet:N0,packedOpSnippet:N0,cpuKernelImpl:FH}),OK={kernelName:Pu,backendName:"webgl",kernelFunc:FK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _K{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MK{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;Q().getBool("WEBGL_PACK_CLIP")?i=new MK(s.shape):i=new _K(s.shape);const u=[[o],[a]];return t.runWebGLProgram(i,[s],s.dtype,u)}const PK={kernelName:Bu,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BK{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function zK(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new BK(r.shape),a=[T0(r,s.complexTensorInfos.real),T0(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const VK={kernelName:Eh,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WK{constructor(e){this.outputShape=[],this.outputShape=ts(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ts(e,t);const r=this.outputShape,s=r.length,o=it(s),a=wn("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((m,g)=>`T${g}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let m=1;m<u.length;m++)u[m]=u[m-1]+e[m][t];const c=i[t],l=i.slice(-2),h=i.join();let d=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${l.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];d+=`
        if (${c} < ${u[m]}  && ${c} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${ll(i,c,g)}),
            vec2(${ll(l,c,g)}));
        }`}const p=u.length,f=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${ll(i,c,f)}),
          vec2(${ll(l,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function ll(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yd(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return jn({inputs:{x:s.complexTensorInfos.imag},backend:t})}const GK={kernelName:qm,backendName:"webgl",kernelFunc:Yd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(n,e,t){const r=n[0].dtype;if(r==="complex64"){const p=n.map(y=>Hc({inputs:{input:y},backend:t})),f=n.map(y=>Yd({inputs:{input:y},backend:t})),m=Zi(p,e,t),g=Zi(f,e,t),x=xo({inputs:{real:m,imag:g},backend:t});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const p=n.map(v=>{const C=[-1,ne(v.shape.slice(e))];return fe({inputs:{x:v},backend:t,attrs:{shape:C}})}),f=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),m=ts(p.map(v=>v.shape),1),g=p[0].shape[0]===1,x=OH(f,m,r,g),y=ts(n.map(v=>v.shape),e),b=t.makeTensorInfo(y,r,x);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),b}const o=n.filter(p=>ne(p.shape)>0),a=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new Zr(n[0].shape,Bs):new Us(n[0].shape,Bs);return t.runWebGLProgram(p,n,r)}const i=Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const g=o.slice(m,m+i);p.push(Zi(g,e,t))}const f=Zi(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(a){const p=new UK(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,r)}const{tensors2D:u,outShape:c}=HK(o,e,t),l=new WK(u.map(p=>p.shape)),h=t.runWebGLProgram(l,u,r);u.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=fe({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function HK(n,e,t){const r=ts(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>fe({inputs:{x:o},attrs:{shape:[-1,ne(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=Ue(s,e[0].shape)[0],a=e.map(c=>c.shape);nx(a,o);const i=ts(e.map(c=>c.shape),o);if(ne(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>ne(c.shape)>0);return u.length===1?jn({inputs:{x:u[0]},backend:t}):Zi(u,o,t)}const jK={kernelName:Rh,backendName:"webgl",kernelFunc:rS};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sS{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,b=g?3:1;let v="",w="";r&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:v=`
          float activation(float x) {
            ${r}
          }
        `,w="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${w}
        setOutput(result);
      }
    `}}class qK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oS{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*u};
           `,i===1){if(x<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<l)){const y=a%2===0?vm(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<l&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<l&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<l&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KK{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gn(this.outputShape.length);const{dataFormat:r}=t,s=Nn(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function aS({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=r.texData.get(n.dataId),l=t.inChannels,h=u[0]*u[1]*u[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(o!=null){const v=Ql(o.shape,p);v!=null&&(o=fe({inputs:{x:o},backend:r,attrs:{shape:v}}),x.push(o))}if(s!=null){const v=Ql(s.shape,p);v!=null&&(s=fe({inputs:{x:s},backend:r,attrs:{shape:v}}),x.push(s))}if(!((h===1||d===1)&&l>Zk)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!==0&&rt(c.shape.slice(-3),u.slice(-3))){const v=u[0]*u[1]*(u[2]+1),w={dataId:n.dataId,shape:[1,v,t.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,$(Xl(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const I=fe({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(I);const k=Yl({a:w,b:I,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),S=r.texData.get(k.dataId);$(S.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,S.shape=t.outShape,g=jn({inputs:{x:k},backend:r}),g.shape=t.outShape,x.push(k)}else{const v=t.outHeight*t.outWidth,w=fe({inputs:{x:n},backend:r,attrs:{shape:p?[t.batchSize,v,t.inChannels]:[t.batchSize,t.inChannels,v]}}),C=fe({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),I=Yl({a:p?w:C,b:p?C:w,transposeA:!p,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=fe({inputs:{x:I},backend:r,attrs:{shape:t.outShape}}),x.push(w),x.push(C),x.push(I)}for(const v of x)r.disposeIntermediateTensorInfo(v);return g}function iS({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=u*c*l,g=d*h,x=[t.batchSize,m,g],y=!0,b=!1,v=[];if(o!=null){const M=Ql(o.shape,f);M!=null&&(o=fe({inputs:{x:o},backend:r,attrs:{shape:M}}),v.push(o))}if(s!=null){const M=Ql(s.shape,f);M!=null&&(s=fe({inputs:{x:s},backend:r,attrs:{shape:M}}),v.push(s))}const w=fe({inputs:{x:e},backend:r,attrs:{shape:[1,m,ne(e.shape)/m]}});v.push(w);const C=new KK(x,t),I=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],k=r.runWebGLProgram(C,[n],"float32",I),S=fe({inputs:{x:k},backend:r,attrs:{shape:x}});v.push(k),v.push(S);const N=s!=null,E=o!=null,R=i==="leakyrelu",_=i?yu(i,!0):null,O=new Qk(f?S.shape:w.shape,f?w.shape:S.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],y,b,N,_,E,R),F=f?[S,w]:[w,S];if(s&&F.push(s),E&&F.push(o),R){const M=r.makeTensorInfo([],"float32",uo(a,"float32"));F.push(M),v.push(M)}const L=r.runWebGLProgram(O,F,"float32"),B=fe({inputs:{x:L},backend:r,attrs:{shape:t.outShape}});v.push(L);for(const M of v)r.disposeIntermediateTensorInfo(M);return B}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=Os(u),d=on(s.shape,o.shape,a,c,i,l,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=aS({x:s,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&Q().getBool("WEBGL_EXP_CONV")){const m=new oS(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[s,o],"float32",g)}else if(Q().getBool("WEBGL_CONV_IM2COL"))p=iS({x:s,filter:o,convInfo:d,backend:t});else{const m=new sS(d);p=t.runWebGLProgram(m,[s,o],"float32")}const f=fe({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const YK={kernelName:$h,backendName:"webgl",kernelFunc:XK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ZK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class JK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class e6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=Os(u),d=on(s.shape,l,a,1,i,c,!1,h),p=new QK(d);return t.runWebGLProgram(p,[s,o],"float32")}const n6={kernelName:Dm,backendName:"webgl",kernelFunc:t6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=gn(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=Os(c),d=on(a,o.shape,i,1,u,l,!1,h);if(Q().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new r6(d);return t.runWebGLProgram(f,[s,o],"float32",p)}else{const p=new ZK(d);return t.runWebGLProgram(p,[s,o],"float32")}}const o6={kernelName:Ah,backendName:"webgl",kernelFunc:s6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=co(s.shape,o.shape,a,u,i),l=new qK(c);return t.runWebGLProgram(l,[s,o],"float32")}const i6={kernelName:Dh,backendName:"webgl",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=co(s.shape,u,a,1,i),l=new JK(c);return t.runWebGLProgram(l,[s,o],"float32")}const c6={kernelName:Fm,backendName:"webgl",kernelFunc:u6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=co(u,o.shape,i,1,a),l=new e6(c);return t.runWebGLProgram(l,[s,o],"float32")}const h6={kernelName:Om,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=Ti+`
  return cos(x);
`,p6=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ga}
  return result;
`,f6=Je({opSnippet:d6,packedOpSnippet:p6}),m6={kernelName:zu,backendName:"webgl",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,x6=Je({opSnippet:g6}),y6={kernelName:Vu,backendName:"webgl",kernelFunc:x6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v6{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=t,[h,d]=r;this.outputShape=[l,h,d,c];const p=s==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${u-1}.0`],[g,x,y]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,v,w]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${v};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new v6(s.shape,o.shape,i,u,c);return t.runWebGLProgram(l,[s,o,a],"float32")},w6={kernelName:Mm,backendName:"webgl",kernelFunc:b6};var bu;(function(n){n.Prod="*",n.Sum="+"})(bu||(bu={}));class E0{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===bu.Prod?"1.0":"0.0",i=r?a:`getX(${R0(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${it(o)} coords = getOutputCoords();
        int end = ${$0(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${$0(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${R0(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function R0(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function $0(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e,t,r,s,o){const a=e.shape.length,i=bt([r],a);let u=e;i!=null&&(u=Sn({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=At(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let h=jn({inputs:{x:u},backend:t});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const p=new E0(n,u.shape,!1,o),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(s){const d=new E0(n,u.shape,s,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const d=lo(i),p=Sn({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return uS(bu.Prod,s,t,o,a,i)}const I6={kernelName:_m,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return uS(bu.Sum,s,t,o,a,i)}const S6={kernelName:Fh,backendName:"webgl",kernelFunc:k6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=Wk(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=$H(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const T6={kernelName:Lm,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E6{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],h=u*o,d=c*o,p=l/(o*o),f=a==="NHWC"?[i,h,d,p]:[i,p,h,d],m=new E6(f,o,a);return t.runWebGLProgram(m,[s],s.dtype)}const $6={kernelName:Pm,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cS{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lS{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gn(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const y=x*2;if(p+=`
          xC = xCCorner + ${y*c};
          `,u===1){if(y<h&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const b=i%2===0?vm(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";r&&(s?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:f=`vec4 activation(vec4 x) {
          ${r}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),$(fn(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=on(s.shape,o.shape,a,l,i,c,!0);let d;Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new lS(h):d=new cS(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[s,o],"float32",p)}const D6={kernelName:Oh,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class O6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,h=on(s.shape,l,a,i,u,c,!0),d=new F6(h);return t.runWebGLProgram(d,[s,o],"float32")}const M6={kernelName:Bm,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,h=on(l,o.shape,a,i,u,c,!0),d=new O6(h);return t.runWebGLProgram(d,[s,o],"float32")}const P6={kernelName:zm,backendName:"webgl",kernelFunc:L6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B6{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=ne(r.shape),a=fe({inputs:{x:r},backend:t,attrs:{shape:[o]}}),i=new B6(o),u=t.runWebGLProgram(i,[a],a.dtype),c=fe({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),c}const V6={kernelName:Gb,backendName:"webgl",kernelFunc:z6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:h,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Sc(s.shape,o.shape,a,i,"NHWC",u);let l;const h=new W6(c);l=t.runWebGLProgram(h,[s,o],"float32");const d=fe({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),d}const G6={kernelName:_h,backendName:"webgl",kernelFunc:U6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=fx(s,o.length);gx(a.length,u,o);const{path:c,steps:l}=xx(i,u),h=l.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:x,expandDims:y}=mx(p,u[g]);let b;yx(x)?b=o[g]:(b=Sn({inputs:{x:o[g]},backend:t,attrs:{perm:x}}),f.push(b));const v=b.shape.slice();for(let w=0;w<y.length;++w)v.splice(y[w],0,1);rt(b.shape,v)||(b=fe({inputs:{x:b},backend:t,attrs:{shape:v}}),f.push(b)),d===null?d=b:(d=sy({inputs:{a:b,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=Xd({inputs:{x:d},backend:t,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const j6={kernelName:Vm,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6="return (x >= 0.0) ? x : (exp(x) - 1.0);",K6=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,X6=Je({opSnippet:q6,packedOpSnippet:K6}),Y6={kernelName:Uu,backendName:"webgl",kernelFunc:X6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6="return (b >= 0.0) ? a : a * (b + 1.0);",Z6=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,J6=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(Z6,r.shape,s.shape):new ta(Q6,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},eX={kernelName:Wm,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX=`
  return vec4(equal(a, b));
`,nX="return float(a == b);",rX=un({opSnippet:nX,packedOpSnippet:tX,dtype:"bool",cpuKernelImpl:_H}),sX={kernelName:Mh,backendName:"webgl",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ix};
  float a1 = ${ux};
  float a2 = ${cx};
  float a3 = ${lx};
  float a4 = ${hx};
  float a5 = ${dx};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,aX=Je({opSnippet:oX}),iX={kernelName:Gu,backendName:"webgl",kernelFunc:aX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=Ti+`
  return exp(x);
`,cX=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hS=Je({opSnippet:uX,packedOpSnippet:cX,cpuKernelImpl:MH,dtype:"float32"}),lX={kernelName:Hu,backendName:"webgl",kernelFunc:hS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&($(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),fe({inputs:{x:o},backend:r,attrs:{shape:i}})}const hX={kernelName:Lh,backendName:"webgl",kernelFunc:Wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A0="return exp(x) - 1.0;",dX=Je({opSnippet:A0,packedOpSnippet:A0,cpuKernelImpl:LH}),pX={kernelName:ju,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D0{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e,t){const r=t.texData.get(n.dataId),s=ne(n.shape),o=n.shape[n.shape.length-1],a=s/o,i=fe({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=i.shape,c=new D0("real",u,e),l=new D0("imag",u,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=xo({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=fe({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(n){const{inputs:e,backend:t}=n,{input:r}=e;return dS(r,!1,t)}const mX={kernelName:Um,backendName:"webgl",kernelFunc:fX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gX{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jc(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||di(s),o==="string"){const a=Tt(o,ne(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new gX(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const xX={kernelName:Gm,backendName:"webgl",kernelFunc:jc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yX{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX={kernelName:Hm,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new yX(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F0="return floor(x);",bX=Je({opSnippet:F0,packedOpSnippet:F0,cpuKernelImpl:PH}),wX={kernelName:qu,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,IX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,kX=un({opSnippet:CX,packedOpSnippet:IX,dtype:"int32"}),SX={kernelName:Ku,backendName:"webgl",kernelFunc:kX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NX{constructor(e){this.variableNames=["A"];const t=Nn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TX{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Nn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX={kernelName:GE,backendName:"webgl",kernelFunc:RX};let Na,Dp=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function RX(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],h=[c,u,o];if(i||a){const m=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Na==null||m!==Dp)&&(Dp=m,Na=document.createElement("canvas").getContext("2d",{willReadFrequently:Dp})),Na.canvas.width=u,Na.canvas.height=c,Na.drawImage(s,0,0,u,c),s=Na.canvas}const d=t.makeTensorInfo(l,"int32");t.texData.get(d.dataId).usage=er.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),s);const p=Q().getBool("WEBGL_PACK")?new TX(h):new NX(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $X(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Os(l),g=on(s.shape,o.shape,u,h,c,d,!1,m);let x;const y=[],b=a!=null,v=i!=null,w=p==="leakyrelu",C=()=>{const k=[s,o],S=(N,E)=>{if(E==="NCHW"&&N.shape.length===1&&N.shape[0]!==1){const R=fe({inputs:{x:N},backend:t,attrs:{shape:[N.shape[0],1,1]}});return y.push(R),R}return N};if(b&&k.push(S(a,l)),v&&k.push(S(i,l)),w){const N=t.makeTensorInfo([],"float32",uo(f,"float32"));k.push(N),y.push(N)}return k};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=aS({x:s,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&Q().getBool("WEBGL_EXP_CONV")){const k=p?yu(p,!0):null,S=new oS(g,b,k,v,w),N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=C();x=t.runWebGLProgram(S,E,"float32",N)}else if(Q().getBool("WEBGL_CONV_IM2COL"))x=iS({x:s,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const k=p?yu(p,!1):null,S=new sS(g,b,k,v,w),N=C();x=t.runWebGLProgram(S,N,"float32")}const I=fe({inputs:{x},backend:t,attrs:{shape:g.outShape}});return y.push(x),y.forEach(k=>t.disposeIntermediateTensorInfo(k)),I}const AX={kernelName:Nl,backendName:"webgl",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=l;m==null&&(m=[1,1]),$(fn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=on(s.shape,o.shape,u,m,c,h,!0),x=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?yu(d,x):null,b=[s,o],v=a!=null,w=i!=null,C=d==="leakyrelu";if(v&&b.push(a),w&&b.push(i),C){const N=t.makeTensorInfo([],"float32",uo(p,"float32"));b.push(N),f.push(N)}let I;x?I=new lS(g,v,y,w,C):I=new cS(g,v,y,w,C);const k=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=t.runWebGLProgram(I,b,"float32",k);return f.forEach(N=>t.disposeIntermediateTensorInfo(N)),S}const FX={kernelName:c1,backendName:"webgl",kernelFunc:DX};class OX{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=it(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=ne(r.shape),[u,c,l,h]=Yg(r,s),d=fe({inputs:{x:s},backend:t,attrs:{shape:[c,a]}}),p=fe({inputs:{x:r},backend:t,attrs:{shape:[ne(r.shape)/l,l]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const x=t.readSync(s.dataId),y=t.bufferSync(r),b=BH(x,y,r.dtype,c,a,l,h,r.shape,i);return t.makeTensorInfo(u,r.dtype,b.values)}const f=new OX(a,h,[c,l],r.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=fe({inputs:{x:m},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const MX={kernelName:Hb,backendName:"webgl",kernelFunc:_X};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LX{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=it(this.rank),s=PX(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function PX(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=Ue(a,s.shape)[0];if(Q().get("DEBUG")){const y=t.readSync(o.dataId),b=s.shape[u];for(let v=0;v<y.length;++v){const w=y[v];$(w<=b-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${b-1}]`)}}const c=bx(s,o,u,i),l=ne(o.shape),h=[],d=fe({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=fe({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const y=t.bufferSync(p),b=t.bufferSync(d),v=zH(b,y,f);return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(c.outputShape,v.dtype,v.values)}const m=new LX(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=fe({inputs:{x:g},backend:t,attrs:{shape:c.outputShape}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}const BX={kernelName:Bh,backendName:"webgl",kernelFunc:pS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX="return float(a > b);",VX=`
  return vec4(greaterThan(a, b));
`,WX=un({opSnippet:zX,packedOpSnippet:VX,cpuKernelImpl:VH,dtype:"bool"}),UX={kernelName:zh,backendName:"webgl",kernelFunc:WX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX="return float(a >= b);",HX=`
  return vec4(greaterThanEqual(a, b));
`,jX=un({opSnippet:GX,packedOpSnippet:HX,dtype:"bool",cpuKernelImpl:WH}),qX={kernelName:Xu,backendName:"webgl",kernelFunc:jX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n){const{inputs:e,backend:t}=n,{input:r}=e;return dS(r,!0,t)}const XX={kernelName:jm,backendName:"webgl",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX="return float(!isnan(x) && !isinf(x));",QX=Je({opSnippet:YX,dtype:"bool"}),ZX={kernelName:Qu,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX="return float(isinf(x));",e5=Je({opSnippet:JX,dtype:"bool"}),t5={kernelName:Zu,backendName:"webgl",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5="return float(isnan(x));",r5=Je({opSnippet:n5,dtype:"bool"}),s5={kernelName:Ju,backendName:"webgl",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5="return float(a < b);",a5=`
  return vec4(lessThan(a, b));
`,i5=un({opSnippet:o5,packedOpSnippet:a5,cpuKernelImpl:UH,dtype:"bool"}),u5={kernelName:Wh,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5="return float(a <= b);",l5=`
  return vec4(lessThanEqual(a, b));
`,h5=un({opSnippet:c5,packedOpSnippet:l5,cpuKernelImpl:GH,dtype:"bool"}),d5={kernelName:Uh,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=HH(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const f5={kernelName:jb,backendName:"webgl",kernelFunc:p5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5=Ti+`
  return x < 0.0 ? 0./0. : log(x);
`,g5=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,x5=Je({opSnippet:m5,packedOpSnippet:g5,cpuKernelImpl:jH}),y5={kernelName:ec,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5=Ti+`
  return log(1.0 + x);
`,b5=Je({opSnippet:v5}),w5={kernelName:tc,backendName:"webgl",kernelFunc:b5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5="return float(a >= 1.0 && b >= 1.0);",I5=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,k5=un({opSnippet:C5,packedOpSnippet:I5,dtype:"bool"}),S5={kernelName:Gh,backendName:"webgl",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5="return float(!(x >= 1.0));",T5=Je({opSnippet:N5}),E5={kernelName:Hh,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5="return float(a >= 1.0 || b >= 1.0);",$5=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,A5=un({opSnippet:R5,packedOpSnippet:$5,dtype:"bool"}),D5={kernelName:jh,backendName:"webgl",kernelFunc:A5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F5{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O5{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=Q().getBool("WEBGL_PACK_NORMALIZATION")?new O5(s.shape,o,a,i,u):new F5(s.shape,o,a,i,u);return t.runWebGLProgram(c,[s],s.dtype)},M5={kernelName:qh,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L5{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,h=new L5(s.shape,i,u,c,l);return t.runWebGLProgram(h,[s,o,a],s.dtype)},B5={kernelName:Km,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=fe({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=xa(i,n.dtype,"max",r),c=fe({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=Ue(o,s.shape);let c=u;const l=bt(c,i),h=l!=null,d=t.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const b=t.texData.get(p.dataId).values,v=new Array(i);for(let I=0;I<v.length;I++)v[I]=s.shape[l[I]];const w=ny(b,s.shape,s.dtype,l,v);p=t.makeTensorInfo(v,s.dtype);const C=t.texData.get(p.dataId);C.values=w}else p=Kd(s,l,t);c=At(c.length,i)}an("max",c,i);const[f,m]=Zt(p.shape,c);let g=f;a&&(g=Mt(f,u));let x;if(d){const b=t.texData.get(p.dataId).values,v=qH(b,ne(m),g,s.dtype);x=t.makeTensorInfo(g,s.dtype);const w=t.texData.get(x.dataId);w.values=v}else x=z5(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const V5={kernelName:Kh,backendName:"webgl",kernelFunc:fS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5=ry+`
  return max(a, b);
`,U5=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ga+`
  return result;
`,G5=un({opSnippet:W5,packedOpSnippet:U5,cpuKernelImpl:KH}),H5={kernelName:nc,backendName:"webgl",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Uc(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;$(fn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Cr(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&rt(l.inShape,l.outShape))return jn({inputs:{x:s},backend:t});const h=new vu(l,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const q5={kernelName:Xh,backendName:"webgl",kernelFunc:j5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],h=Fs(s.shape,o,a,l,i,c,u),d=new oy(h,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const X5={kernelName:Yh,backendName:"webgl",kernelFunc:K5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Q5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,h=u-1-e.padInfo.front,d=c-1-e.padInfo.top,p=l-1-e.padInfo.left,f=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=Fs(a.shape,i,u,h,c,l),p=new oy(d,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),m=new Q5(d),g=t.runWebGLProgram(m,[s,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}const J5={kernelName:Ym,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;Uc([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=Cr(i.shape,u,c,1,l,h),p=!0,f=new vu(d,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new Y5(d),x=t.runWebGLProgram(g,[s,m],i.dtype);return t.disposeIntermediateTensorInfo(m),x}const t8={kernelName:Xm,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n,e,t,r){let s=new vu(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new vu(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8={kernelName:qb,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;$(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];$(fn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=Cr(r.shape,s,o,c,a),[h,d]=n8(r,i,l,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=fe({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=xa(i,"float32","mean",r),c=fe({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8={kernelName:Qh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,i=r.shape.length,u=Ue(o,r.shape);let c=u;const l=bt(c,i),h=l!=null,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const v=a.texData.get(f.dataId).values,w=new Array(i);for(let k=0;k<w.length;k++)w[k]=r.shape[l[k]];const C=ny(v,r.shape,r.dtype,l,w);f=a.makeTensorInfo(w,r.dtype);const I=a.texData.get(f.dataId);I.values=C}else f=Kd(r,l,a);p.push(f),c=At(c.length,i)}an("sum",c,i);const[m,g]=Zt(f.shape,c);let x=m;s&&(x=Mt(m,u));const y=s8(f,g,x,a);for(const b of p)a.disposeIntermediateTensorInfo(b);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ue(o,s.shape);let c=u;const l=bt(c,i);let h=s;l!=null&&(h=Sn({inputs:{x:s},backend:t,attrs:{perm:l}}),c=At(c.length,s.shape.length)),an("min",c,i);const[d,p]=Zt(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=xa(m,m.dtype,"min",t);let x;if(a){const y=Mt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const i8={kernelName:Zh,backendName:"webgl",kernelFunc:a8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=ry+`
  return min(a, b);
`,c8=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ga+`
  return result;
`,l8=un({opSnippet:u8,packedOpSnippet:c8,cpuKernelImpl:XH}),h8={kernelName:rc,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d8{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((l,h)=>l[0]+e[h]+l[1]);const s=e.length,o=it(s),a=t.map(l=>l[0]).join(","),i=t.map((l,h)=>l[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p8{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const s=e.length,o=it(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),u=wn("rc",s),c=wn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=r==="reflect"?0:1;let p="";if(s===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${u[s-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new p8(r.shape,s,o):new d8(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},m8={kernelName:Jh,backendName:"webgl",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8=`if (b == 0.0) return NAN;
  return mod(a, b);`,x8=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ga+`
  return result;
`,y8=un({opSnippet:g8,packedOpSnippet:x8}),v8={kernelName:sc,backendName:"webgl",kernelFunc:y8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b8{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=`
if (a == b) {
  return 1.0;
};
return a / b;`,C8=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,mS=un({opSnippet:w8,packedOpSnippet:C8,checkOutOfBounds:!0}),I8={kernelName:Wu,backendName:"webgl",kernelFunc:mS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O0="return a - b;",gS=un({opSnippet:O0,packedOpSnippet:O0,supportsComplex:!0,cpuKernelImpl:gj}),k8={kernelName:bc,backendName:"webgl",kernelFunc:gS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=Ue([o],s.shape),i=fS({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Mt(i.shape,a),c=fe({inputs:{x:i},backend:t,attrs:{shape:u}}),l=gS({inputs:{a:s,b:c},backend:t}),h=hS({inputs:{x:l},backend:t}),d=Xd({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),p=fe({inputs:{x:d},backend:t,attrs:{shape:u}}),f=mS({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const S8={kernelName:xd,backendName:"webgl",kernelFunc:xS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:xS({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new b8(c,l,o),d=[[a]],p=t.runWebGLProgram(h,[u],"int32",d);return i||t.disposeIntermediateTensorInfo(u),p}const T8={kernelName:Kb,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=kr+`
  return -x;
`,R8=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function $8(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,i]=QH(o.values,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,a)}let s;return Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Us(r.shape,R8):s=new Zr(r.shape,E8),t.runWebGLProgram(s,[r],r.dtype)}const A8={kernelName:ed,backendName:"webgl",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=Hg;function F8(n){Zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),{selectedIndices:h}=D8(c,l,a,i,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const O8={kernelName:Qm,backendName:"webgl",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=jg;function M8(n){Zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=_8(l,h,a,i,u,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const L8={kernelName:Zm,backendName:"webgl",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=qg;function B8(n){Zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),d=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:x}=P8(l,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const z8={kernelName:Jm,backendName:"webgl",kernelFunc:B8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V8{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=ne(s.shape),l=new V8(c,a,i,u),h=fe({inputs:{x:s},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(l,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...s.shape,a],f=fe({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},U8={kernelName:rd,backendName:"webgl",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zl(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=Hc({inputs:{input:r},backend:t}),o=Zl({inputs:{x:s},backend:t}),a=Yd({inputs:{input:r},backend:t}),i=Zl({inputs:{x:a},backend:t}),u=xo({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return jc({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const G8={kernelName:bd,backendName:"webgl",kernelFunc:Zl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Hc({inputs:{input:r},backend:t}),o=yS({inputs:{x:s},backend:t}),a=Yd({inputs:{input:r},backend:t}),i=Zl({inputs:{x:a},backend:t}),u=xo({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return jc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const H8={kernelName:nd,backendName:"webgl",kernelFunc:yS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Wf({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{bm(o,l.shape,"All tensors passed to stack must have matching shapes"),$(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=Wf({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(h),h}),c=rS({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const q8={kernelName:sd,backendName:"webgl",kernelFunc:j8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K8{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=it(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X8{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const s=e.length,o=it(s),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),u=wn("rc",s),c=wn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=s===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(ne(s.shape)===0){const c=o.map((l,h)=>l[0]+s.shape[h]+l[1]);return jc({backend:t,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new X8(s.shape,o,a):new K8(s.shape,o,a),u=[[a]];return t.runWebGLProgram(i,[s],s.dtype,u)},Y8={kernelName:od,backendName:"webgl",kernelFunc:vS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Z8=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ga+`
  return result;
`,J8=un({opSnippet:Q8,packedOpSnippet:Z8}),eY={kernelName:ac,backendName:"webgl",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=Ue(o,s.shape);let l=c;const h=bt(l,i);let d=s;h!=null&&(d=Sn({inputs:{x:s},backend:t,attrs:{perm:h}}),l=At(l.length,i),u.push(d)),an("prod",l,i);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=JH(d.shape,d.dtype,f,l);p=t.makeTensorInfo(g,x,m)}else{const[f,m]=Zt(d.shape,l),g=ne(m),x=fe({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=dg(s.dtype),b=xa(x,y,"prod",t);p=fe({inputs:{x:b},backend:t,attrs:{shape:f}}),u.push(x),u.push(b)}if(a){u.push(p);const f=Mt(p.shape,c);p=fe({inputs:{x:p},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const nY={kernelName:id,backendName:"webgl",kernelFunc:tY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(x=>t.readSync(x.dataId)),c=s.map(x=>x.shape),l=t.readSync(o.dataId),h=t.readSync(a.dataId),[d,p,f]=ej(u,c,l,o.shape,o.dtype,h,a.shape,i),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const sY={kernelName:Xb,backendName:"webgl",kernelFunc:rY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=tj(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const aY={kernelName:Yb,backendName:"webgl",kernelFunc:oY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),h=t.readSync(a.dataId),d=i.map(g=>t.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=nj(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,p,u);return t.makeTensorInfo(f,o.dtype,m)}const uY={kernelName:Qb,backendName:"webgl",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,i=rj(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},cY={kernelName:eg,backendName:"webgl",kernelFunc:bS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY="return 1.0 / x;",hY=Je({opSnippet:lY}),dY={kernelName:ic,backendName:"webgl",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=kr+`
  return (x < 0.0) ? 0.0 : x;
`,fY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mY=Je({opSnippet:pY,packedOpSnippet:fY}),gY={kernelName:uc,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=kr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,yY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vY=Je({opSnippet:xY,packedOpSnippet:yY}),bY={kernelName:cc,backendName:"webgl",kernelFunc:vY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CY{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new CY(s.shape,u,c,o,a):new wY(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],"float32")}const kY={kernelName:ld,backendName:"webgl",kernelFunc:IY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SY{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new SY(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const TY={kernelName:rg,backendName:"webgl",kernelFunc:NY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EY{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RY{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RY(s.shape,u,c,o,a):new EY(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],s.dtype)}const AY={kernelName:cd,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DY{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new DY(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const OY={kernelName:ng,backendName:"webgl",kernelFunc:FY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Y{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=it(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MY{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=wn("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=it(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return d(f)}function c(f){return f[r-1]="("+f[r-1]+" + 1)",d(f)}function l(f){return f[r-2]="("+f[r-2]+" + 1)",d(f)}function h(f){return f[r-1]="("+f[r-1]+" + 1)",f[r-2]="("+f[r-2]+" + 1)",d(f)}function d(f){const m=e.map((y,b)=>p(b,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,i=Ue(o,s.shape);if(a===0)return jn({inputs:{x:s},backend:t});const u=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MY(s.shape,i):new _Y(s.shape,i);return t.runWebGLProgram(u,[s],s.dtype)}const PY={kernelName:hd,backendName:"webgl",kernelFunc:LY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BY{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY={kernelName:lg,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=new BY(r.shape,o),[c,l]=sx(a,r.shape[1],r.shape[2]),h=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,WY=Je({opSnippet:VY}),UY={kernelName:lc,backendName:"webgl",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY="return inversesqrt(x);",HY=Je({opSnippet:GY,cpuKernelImpl:sj}),jY={kernelName:hc,backendName:"webgl",kernelFunc:HY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ay{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=it(o.length),l=it(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qY{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=it(o.length),l=it(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ha(o,s,a),d=[h/c,c];if(h===0)return t.makeTensorInfo(a,s.dtype);const p=fe({inputs:{x:s},backend:t,attrs:{shape:[u,i]}}),f=fe({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;Q().getBool("WEBGL_PACK")?g=new qY(u,i,p.shape.length,f.shape.length,l,d):g=new ay(u,i,p.shape.length,f.shape.length,l,d);const x=t.runWebGLProgram(g,[f,p,m],f.dtype),y=fe({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),y}const XY={kernelName:Zb,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YY{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=Q().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QY(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=new YY(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(i,[s,o],"int32",u)}const ZY={kernelName:e1,backendName:"webgl",kernelFunc:QY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JY{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=it(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new JY(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],Gn(s.dtype,o.dtype))}const t7={kernelName:dd,backendName:"webgl",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Dd};
  float scale = ${Fd};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,r7=Je({opSnippet:n7}),s7={kernelName:dc,backendName:"webgl",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=Ti+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,a7=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,i7=Je({opSnippet:o7,packedOpSnippet:a7,cpuKernelImpl:aj}),u7={kernelName:gc,backendName:"webgl",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,l7=Je({opSnippet:c7}),h7={kernelName:mc,backendName:"webgl",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7=Ti+`
  return sin(x);
`,p7=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ga}
  return result;
`,f7=Je({opSnippet:d7,packedOpSnippet:p7}),m7={kernelName:pc,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,x7=Je({opSnippet:g7}),y7={kernelName:fc,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,b7=Je({opSnippet:v7}),w7={kernelName:xc,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;$(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,y)=>x*y),u=[[0,0]];u.push(...a);for(let x=1+o.length;x<s.shape.length;++x)u.push([0,0]);const c=[],l=vS({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),h=$c(l.shape,o,i,!1),d=Ac(h.length,o.length,!1),p=Dc(l.shape,o,i,!1),f=fe({inputs:{x:l},backend:t,attrs:{shape:h}}),m=Sn({inputs:{x:f},backend:t,attrs:{perm:d}}),g=fe({inputs:{x:m},backend:t,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},I7={kernelName:md,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[h,d,p,f,m]=uj(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const S7={kernelName:t1,backendName:"webgl",kernelFunc:k7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),i=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,l,h]=cj(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const T7={kernelName:n1,backendName:"webgl",kernelFunc:N7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=Gk(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const R7={kernelName:r1,backendName:"webgl",kernelFunc:E7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=Gk(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const A7={kernelName:s1,backendName:"webgl",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=ha(o,s,i),p=!1;if(o.dtype==="string"){const x=t.bufferSync(s),y=t.bufferSync(o),b=Js(t.readSync(a.dataId)[0]),v=oj(x,y,i,d,l,c,u,h,b,p);return t.makeTensorInfo(i,v.dtype,v.values)}const f=new ay(c,u,s.shape.length,o.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[o,s,a],o.dtype),g=fe({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),g}const F7={kernelName:o1,backendName:"webgl",kernelFunc:D7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ue(a,s.shape)[0],u=vx(s,o,i),c=s.shape.length,l=new Array(c).fill(0),h=s.shape.slice();return u.map(d=>{const p=[...h];p[i]=d;const f=Ei({inputs:{x:s},backend:t,attrs:{begin:l,size:p}});return l[i]+=d,f})}const _7={kernelName:gd,backendName:"webgl",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0="return sqrt(x);",M7=Je({opSnippet:_0,packedOpSnippet:_0,cpuKernelImpl:lj}),L7={kernelName:yc,backendName:"webgl",kernelFunc:M7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7="return x * x;",B7=Je({opSnippet:P7}),z7={kernelName:sg,backendName:"webgl",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M0="return (a - b) * (a - b);",V7=un({opSnippet:M0,packedOpSnippet:M0}),W7={kernelName:vc,backendName:"webgl",kernelFunc:V7};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),a=Ts(o),i=hj(a,"string",r);return t.makeTensorInfo(s.shape,"string",i)}const G7={kernelName:og,backendName:"webgl",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=kr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Zr(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const j7={kernelName:kc,backendName:"webgl",kernelFunc:H7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q7{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=it(r.length),a=it(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:b,strides:v}=tx(s.shape,o,a,i,u,c,l,h,d);let w;if(m)w=fe({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||x){$(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const I=Zg(y,b,v),k=Ei({inputs:{x:s},backend:t,attrs:{begin:y,size:I}});w=fe({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(k)}else if(t.shouldExecuteOnCPU([s])){const k=t.readSync(s.dataId),S=We(s.shape,s.dtype,k),N=dj(p,S,v,y);w=t.makeTensorInfo(f,s.dtype,N.values)}else{const k=new q7(y,v,p);w=t.runWebGLProgram(k,[s],s.dtype)}const C=fe({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),C}const X7={kernelName:ag,backendName:"webgl",kernelFunc:K7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=t.readSync(l.dataId),p=t.readSync(h.dataId),[f,m]=pj(d,p,s,o,a,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const Q7={kernelName:a1,backendName:"webgl",kernelFunc:Y7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[c,l,h]=fj(i,u,s),d=l.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const J7={kernelName:i1,backendName:"webgl",kernelFunc:Z7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=mj(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const t9={kernelName:u1,backendName:"webgl",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9="return tan(x);",r9=Je({opSnippet:n9}),s9={kernelName:wc,backendName:"webgl",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,a9=Je({opSnippet:o9}),i9={kernelName:Cc,backendName:"webgl",kernelFunc:a9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ha(a,o,s.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(s.shape,o.dtype);const p=fe({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=fe({inputs:{x:a},backend:t,attrs:{shape:[u,c]}}),m=fe({inputs:{x:s},backend:t,attrs:{shape:d}}),g=new ay(u,i,p.shape.length,f.shape.length,l,d,!1,!0),x=t.runWebGLProgram(g,[f,p,m],m.dtype),y=fe({inputs:{x},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),y}const c9={kernelName:Jb,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l9{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=it(this.rank),o=h9(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function h9(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(d=>Js(d)):u,l=We(s.shape,s.dtype,c),h=xj(l,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new l9(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const d9={kernelName:Ic,backendName:"webgl",kernelFunc:wS};class p9{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class f9{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function L0(n){let e=1;for(;e<n;)e*=2;return e}function m9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,i=Q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([s])||l<i||o>u){const N=t.readSync(s.dataId),[E,R]=yj(N,c,s.dtype,o,a);return[t.makeTensorInfo(E.shape,E.dtype,E.values),t.makeTensorInfo(R.shape,R.dtype,R.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[s,jc({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(s.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(s):s,m=ne(c)/l,g=fe({inputs:{x:p},attrs:{shape:[m,l]},backend:t});d&&Co(t,p);const x=L0(o),y=L0(l);let b=null;const v=()=>b===null?[g,g]:[g,b],w=(N,E,R)=>{const _=v(),O=new p9(R),L=[[l],[b===null?1:0],[Number.NEGATIVE_INFINITY],[N],[E]],B=b;b=t.runWebGLProgram(O,_,"int32",L),Co(t,B)};for(let N=1;N<x;N*=2){const E=N*2;for(let R=N;R>=1;R/=2)w(E,R,[m,y])}for(let N=y;N>x;N/=2){const E=v(),R=new f9([m,N/2]),O=[[l],[b===null?1:0],[x]],F=b;b=t.runWebGLProgram(R,E,"int32",O),Co(t,F);const L=x/2,B=L*2;for(let M=L;M>=1;M/=2)w(B,M,b.shape)}let C=b;b=Ei({inputs:{x:b},backend:t,attrs:{begin:0,size:[m,o]}}),Co(t,C);let I=pS({inputs:{x:g,indices:b},backend:t,attrs:{axis:1,batchDims:1}});Co(t,g);const k=c.slice(0,-1);k.push(o),C=b,b=fe({inputs:{x:b},attrs:{shape:k},backend:t}),Co(t,C);const S=I;return I=fe({inputs:{x:I},attrs:{shape:k},backend:t}),Co(t,S),[I,b]}const g9={kernelName:ig,backendName:"webgl",kernelFunc:m9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x9{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,h,d,p]=s.shape,[f,m]=c??[h,d],g=[l,f,m,p],x=new x9(h,d,a,i,u,g);return t.runWebGLProgram(x,[s,o],"float32")}const v9={kernelName:ug,backendName:"webgl",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;Uc(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=vj(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const w9={kernelName:cg,backendName:"webgl",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(c[l++]=a.shape[m]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[o]=m;const g=Ei({inputs:{x:a},backend:t,attrs:{begin:d,size:p}}),x=fe({inputs:{x:g},backend:t,attrs:{shape:c}});f[m]=x,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const I9={kernelName:yd,backendName:"webgl",kernelFunc:C9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k9{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=bt([c],i);let h=s;l!=null&&(h=Sn({inputs:{x:s},backend:t,attrs:{perm:l}}),u.push(h),c=At(1,i)[0]);const d=nC(h.shape,c,a),p=ne([h.shape[c]]),f=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});u.push(f);const m=dg(s.dtype),g=(v,w,C,I,k)=>{const S=v.shape[0],N=v.shape[1],E=tC(N,k),R={windowSize:E,inSize:N,batchSize:S,numSegments:k},_=new k9(R,w),O=t.compileAndRun(_,[v,C],I);if(u.push(O),O.shape[1]===k)return O;const F=bS({backend:t,attrs:{start:0,stop:k,step:1,dtype:"float32"}}),L=wS({inputs:{x:F},backend:t,attrs:{reps:[N/E]}});return u.push(F),u.push(L),g(O,w,L,I,k)},x=g(f,"unsortedSegmentSum",o,m,a),y=fe({inputs:{x},backend:t,attrs:{shape:d}});let b=y;if(l!=null){u.push(y);const v=lo(l);b=Sn({inputs:{x:b},backend:t,attrs:{perm:v}})}return u.forEach(v=>t.disposeIntermediateTensorInfo(v)),b}const N9={kernelName:vd,backendName:"webgl",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=[lq,dq,mq,yq,bq,Iq,Sq,Tq,Aq,Fq,Mq,Bq,Wq,jq,Xq,Qq,Jq,rK,oK,iK,hK,yK,bK,kK,NK,DK,OK,PK,qj,VK,jK,YK,n6,o6,i6,c6,h6,m6,y6,w6,I6,S6,T6,$6,D6,M6,P6,V6,G6,j6,Y6,eX,sX,iX,lX,hX,pX,mX,xX,vX,wX,SX,EX,AX,FX,MX,BX,UX,qX,jj,XX,GK,ZX,t5,s5,Xj,u5,d5,f5,y5,w5,S5,E5,D5,M5,B5,V5,H5,q5,X5,J5,t8,r8,o8,i8,h8,m8,v8,T8,Zj,A8,O8,L8,z8,EK,U8,H8,q8,Y8,eY,Qj,nY,sY,aY,uY,cY,RK,I8,dY,gY,bY,eq,kY,TY,AY,OY,PY,zY,UY,jY,XY,ZY,t7,s7,u7,h7,m7,y7,gK,S8,w7,I7,S7,T7,R7,A7,F7,_7,L7,z7,W7,G7,j7,X7,Q7,J7,t9,k8,iq,s9,i9,c9,d9,g9,v9,uq,w9,I9,N9,G8];for(const n of T9)l1(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var CS=function(n,e){return(CS=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])})(n,e)};function Wr(n,e){function t(){this.constructor=n}CS(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function ke(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function Se(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var E9=function(){function n(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return n.prototype.setPlatform=function(e,t){this.platform!=null&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},n.prototype.registerFlag=function(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){var s=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+s+"."),this.set(e,s)}},n.prototype.get=function(e){return e in this.flags?this.flags[e]:(this.flags[e]=this.evaluateFlag(e),this.flags[e])},n.prototype.getNumber=function(e){return this.get(e)},n.prototype.getBool=function(e){return this.get(e)},n.prototype.getFlags=function(){return this.flags},Object.defineProperty(n.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),n.prototype.set=function(e,t){if(this.flagRegistry[e]==null)throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)},n.prototype.evaluateFlag=function(e){if(this.flagRegistry[e]==null)throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},n.prototype.setFlags=function(e){this.flags=Object.assign({},e)},n.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},n.prototype.populateURLFlags=function(){var e=this;if(this.global!==void 0&&this.global.location!==void 0&&this.global.location.search!==void 0){var t,r,s=(t=this.global.location.search,r={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(o){for(var a=[],i=1;i<arguments.length;i++)a[i-1]=arguments[i];return R9(r,a[0],a[1]),a.join("=")}),r);"tfjsflags"in s&&s.tfjsflags.split(",").forEach(function(o){var a=o.split(":"),i=a[0],u=a[1];e.urlFlags[i]=function(c,l){if((l=l.toLowerCase())==="true"||l==="false")return l==="true";if(""+ +l===l)return+l;throw new Error("Could not parse value flag value "+l+" for flag "+c+".")}(i,u)})}},n}();function R9(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function se(){return IS}var IS=null,Jl=new Map,Uf=new Map;function kS(n,e){var t=NS(n,e);return Jl.get(t)}function P0(n){return Uf.get(n)}function B0(n){for(var e=Jl.entries(),t=[];;){var r=e.next(),s=r.done,o=r.value;if(s)break;var a=o[0],i=o[1];a.split("_")[0]===n&&t.push(i)}return t}function SS(n){var e=n.kernelName,t=n.backendName,r=NS(e,t);if(Jl.has(r))throw new Error("The kernel '"+e+"' for backend '"+t+"' is already registered");Jl.set(r,n)}function $9(n){var e=n.kernelName;Uf.has(e)&&console.warn("Overriding the gradient for '"+e+"'"),Uf.set(e,n)}function NS(n,e){return e+"_"+n}function z0(n){for(var e=n.length,t=0,r=0;e>0;)r=Math.random()*e|0,t=n[--e],n[e]=n[r],n[r]=t}function eh(n,e,t){return Math.max(n,Math.min(e,t))}function iy(n){return n%2==0?n:n+1}function TS(n){for(var e=0,t=0;t<n.length;t++)e+=n[t];return e}function D(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function st(n,e,t){t===void 0&&(t=""),D(Qt(n,e),function(){return t+" Shapes "+n+" and "+e+" must match"})}function ya(n){D(n!=null,function(){return"The input to the tensor constructor must be a non-null value."})}function na(n,e,t){if(e===void 0&&(e=[]),t===void 0&&(t=!1),e==null&&(e=[]),Array.isArray(n)||Mr(n)&&!t)for(var r=0;r<n.length;++r)na(n[r],e,t);else e.push(n);return e}function be(n){if(n.length===0)return 1;for(var e=n[0],t=1;t<n.length;t++)e*=n[t];return e}function Qt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(var t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Rt(n){return n%1==0}function ES(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;var e=Math.exp(2*n);return(e-1)/(e+1)}function th(n){var e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Bo(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Gf(n,e,t){return e===void 0&&(e=function(r){return 0}),new Promise(function(r,s){var o=0,a=function(){if(n())r();else{o++;var i=e(o);t!=null&&o>=t?s():setTimeout(a,i)}};a()})}function RS(n,e){for(var t=1,r=-1,s=0;s<n.length;++s)if(n[s]>=0)t*=n[s];else if(n[s]===-1){if(r!==-1)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+s);r=s}else if(n[s]<0)throw Error("Shapes can not be < 0. Found "+n[s]+" at dim "+s);if(r===-1){if(e>0&&e!==t)throw Error("Size("+e+") must match the product of shape "+n);return n}if(t===0)throw Error("Cannot infer the missing size in ["+n+"] when there are 0 elements");if(e%t!=0)throw Error("The implicit shape can't be a fractional number. Got "+e+" / "+t);var o=n.slice();return o[r]=e/t,o}function Gt(n,e){var t=e.length;return D((n=n==null?e.map(function(r,s){return s}):[].concat(n)).every(function(r){return r>=-t&&r<t}),function(){return"All values in axis param must be in range [-"+t+", "+t+") but got axis "+n}),D(n.every(function(r){return Rt(r)}),function(){return"All values in axis param must be integers but got axis "+n}),n.map(function(r){return r<0?t+r:r})}function zs(n,e){for(var t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Gt(e,n).sort(),a=0,i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error("Can't squeeze axis "+i+" since its dim '"+n[i]+"' is not 1");(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function ra(n,e){var t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else{if(n!=="bool")throw new Error("Unknown data type "+n);t=new Uint8Array(e)}return t}function wu(n,e){var t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else{if(n!=="string")throw new Error("Unknown data type "+n);t=new Array(e)}return t}function $S(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+e+" being uploaded contains "+r+".")}}function AS(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function DS(n,e){return e!=="complex64"&&(e!=="float32"||n==="complex64")&&(e!=="int32"||n==="float32"||n==="complex64")&&(e!=="bool"||n!=="bool")}function Mr(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function uy(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error("Unknown dtype "+n)}function FS(n){if(n==null)return 0;var e=0;return n.forEach(function(t){return e+=t.length}),e}function Qd(n){return typeof n=="string"||n instanceof String}function OS(n){return typeof n=="boolean"}function _S(n){return typeof n=="number"}function Ri(n){return Array.isArray(n)?Ri(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":_S(n)?"float32":Qd(n)?"string":OS(n)?"bool":"float32"}function nh(n){return!!(n&&n.constructor&&n.call&&n.apply)}function rh(n,e){for(var t=e;t<n;++t)if(n%t==0)return t;return n}function Wn(n){var e=n.length;if(e<2)return[];var t=new Array(e-1);t[e-2]=n[e-1];for(var r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function cy(n,e,t){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=na(n)),t&&$S(n,e),function(o,a){return o instanceof Float32Array&&a==="float32"||o instanceof Int32Array&&a==="int32"||o instanceof Uint8Array&&a==="bool"}(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){for(var r=new Uint8Array(n.length),s=0;s<r.length;++s)Math.round(n[s])!==0&&(r[s]=1);return r}throw new Error("Unknown data type "+e)}function Hf(n,e){if(n.length===0)return e[0];var t=n.reduce(function(r,s){return r*s});if(t===0)return[];if(t!==e.length)throw new Error("["+n+"] does not match the input size.");return function r(s,o,a){var i=new Array;if(o.length===1)for(var u=o[0],c=0;c<u;c++)i[c]=a[s+c];else{u=o[0];var l=o.slice(1),h=l.reduce(function(d,p){return d*p});for(c=0;c<u;c++)i[c]=r(s+c*h,l,a)}return i}(0,n,e)}function ly(n,e){for(var t=$i(n,e),r=0;r<t.length;r++)t[r]=1;return t}function $i(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error("Unknown data type "+e)}function $r(){return se().platform.now()}function hy(n){n.forEach(function(e){D(Number.isInteger(e)&&e>=0,function(){return"Tensor must have a shape comprised of positive integers but got shape ["+n+"]."})})}function MS(n,e){return e===void 0&&(e="utf-8"),e=e||"utf-8",se().platform.encode(n,e)}function Cu(n,e){return e===void 0&&(e="utf-8"),e=e||"utf-8",se().platform.decode(n,e)}function sh(n,e,t){if(e===0)return 0;if(e===1)return n[0];for(var r=n[n.length-1],s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function dy(n,e,t){if(e===0)return[];if(e===1)return[n];for(var r=new Array(e),s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}var oo=Object.freeze({shuffle:z0,clamp:eh,nearestLargerEven:iy,sum:TS,randUniform:function(n,e){var t=Math.random();return e*t+(1-t)*n},distSquared:function(n,e){for(var t=0,r=0;r<n.length;r++){var s=Number(n[r])-Number(e[r]);t+=s*s}return t},assert:D,assertShapesMatch:st,assertNonNull:ya,flatten:na,sizeFromShape:be,isScalarShape:function(n){return n.length===0},arraysEqual:Qt,isInt:Rt,tanh:ES,sizeToSquarishShape:th,createShuffledIndices:function(n){for(var e=new Uint32Array(n),t=0;t<n;++t)e[t]=t;return z0(e),e},rightPad:Bo,repeatedTry:Gf,inferFromImplicitShape:RS,parseAxisParam:Gt,squeezeShape:zs,getTypedArrayFromDType:ra,getArrayFromDType:wu,checkConversionForErrors:$S,isValidDtype:AS,hasEncodingLoss:DS,isTypedArray:Mr,bytesPerElement:uy,bytesFromStringArray:FS,isString:Qd,isBoolean:OS,isNumber:_S,inferDtype:Ri,isFunction:nh,nearestDivisor:rh,computeStrides:Wn,toTypedArray:cy,toNestedArray:Hf,makeOnesTypedArray:ly,makeZerosTypedArray:$i,now:$r,assertNonNegativeIntegerDimensions:hy,fetch:function(n,e){return se().platform.fetch(n,e)},encodeString:MS,decodeString:Cu,locToIndex:sh,indexToLoc:dy}),A9=function(){function n(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new D9)}return n.prototype.profileKernel=function(e,t,r){var s,o=this,a=this.backendTimer.time(function(){s=r()});return s.forEach(function(i){i.data().then(function(u){(function(c,l,h){if(l!=="float32")return!1;for(var d=0;d<c.length;d++){var p=c[d];if(isNaN(p)||!isFinite(p))return console.warn("Found "+p+" in the result of '"+h+"'"),!0}})(u,i.dtype,e),a.then(function(c){var l="";c.getExtraProfileInfo!=null&&(l=c.getExtraProfileInfo()),o.logger.logKernelProfile(e,i,u,c.kernelMs,t,l)})})}),s},n}(),D9=function(){function n(){}return n.prototype.logKernelProfile=function(e,t,r,s,o,a){var i=typeof s=="number"?Bo(s+"ms",9):s.error,u=Bo(e,25),c=t.rank,l=t.size,h=Bo(t.shape.toString(),14),d="";for(var p in o){var f=o[p].shape||t.shape,m=f.length;d+=p+": "+m+"D "+(m>0?f:"")+" "}console.log("%c"+u+"	%c"+i+"	%c"+c+"D "+h+"	%c"+l+"	%c"+d+"	%c"+a,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},n}(),V0=20,Wi=3,Fp=7;function F9(n,e,t,r){var s=Wn(e),o=function(c,l,h,d){var p=be(l),f=d[d.length-1],m=new Array(f).fill(0),g=l.length,x=h==="complex64"?Gi(c):c;if(g>1)for(var y=0;y<p/f;y++)for(var b=y*f,v=0;v<f;v++)m[v]=Math.max(m[v],Ui(x[b+v],0,h).length);return m}(n,e,t,s),a=e.length,i=function c(l,h,d,p,f,m){m===void 0&&(m=!0);var g=d==="complex64"?2:1,x=h[0],y=h.length;if(y===0)return d==="complex64"?[Ui(Gi(l)[0],0,d)]:d==="bool"?[LS(l[0])]:[l[0].toString()];if(y===1){if(x>V0){var b=Wi*g,v=Array.from(l.slice(0,b)),w=Array.from(l.slice((x-Wi)*g,x*g));return d==="complex64"&&(v=Gi(v),w=Gi(w)),["["+v.map(function(F,L){return Ui(F,f[L],d)}).join(", ")+", ..., "+w.map(function(F,L){return Ui(F,f[x-Wi+L],d)}).join(", ")+"]"]}return["["+(d==="complex64"?Gi(l):Array.from(l)).map(function(F,L){return Ui(F,f[L],d)}).join(", ")+"]"]}var C=h.slice(1),I=p.slice(1),k=p[0]*g,S=[];if(x>V0){for(var N=0;N<Wi;N++){var E=(R=N*k)+k;S.push.apply(S,c(l.slice(R,E),C,d,I,f,!1))}for(S.push("..."),N=x-Wi;N<x;N++)E=(R=N*k)+k,S.push.apply(S,c(l.slice(R,E),C,d,I,f,N===x-1))}else for(N=0;N<x;N++){var R;E=(R=N*k)+k,S.push.apply(S,c(l.slice(R,E),C,d,I,f,N===x-1))}var _=y===2?",":"";for(S[0]="["+S[0]+_,N=1;N<S.length-1;N++)S[N]=" "+S[N]+_;var O=`,
`;for(N=2;N<y;N++)O+=`
`;return S[S.length-1]=" "+S[S.length-1]+"]"+(m?"":O),S}(n,e,t,s,o),u=["Tensor"];return r&&(u.push("  dtype: "+t),u.push("  rank: "+a),u.push("  shape: ["+e+"]"),u.push("  values:")),u.push(i.map(function(c){return"    "+c}).join(`
`)),u.join(`
`)}function Ui(n,e,t){return Bo(Array.isArray(n)?parseFloat(n[0].toFixed(Fp))+" + "+parseFloat(n[1].toFixed(Fp))+"j":Qd(n)?"'"+n+"'":t==="bool"?LS(n):parseFloat(n.toFixed(Fp)).toString(),e)}function LS(n){return n===0?"false":"true"}function Gi(n){for(var e=[],t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}var Iu=function(){function n(e,t,r){var s=this;if(this.dtype=t,this.shape=e.slice(),this.size=be(e),r!=null){var o=r.length;D(o===this.size,function(){return"Length of values '"+o+"' does not match the size inferred by the shape '"+s.size+"'."})}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||wu(t,this.size),this.strides=Wn(e)}return n.prototype.set=function(e){for(var t=this,r=[],s=1;s<arguments.length;s++)r[s-1]=arguments[s];r.length===0&&(r=[0]),D(r.length===this.rank,function(){return"The number of provided coordinates ("+r.length+") must match the rank ("+t.rank+")"});var o=this.locToIndex(r);this.values[o]=e},n.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];e.length===0&&(e=[0]);for(var r=0,s=0,o=e;s<o.length;s++){var a=o[s];if(a<0||a>=this.shape[r]){var i="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(i)}r++}for(var u=e[e.length-1],c=0;c<e.length-1;++c)u+=this.strides[c]*e[c];return this.values[u]},n.prototype.locToIndex=function(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];for(var t=e[e.length-1],r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t},n.prototype.indexToLoc=function(e){if(this.rank===0)return[];if(this.rank===1)return[e];for(var t=new Array(this.shape.length),r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t},Object.defineProperty(n.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),n.prototype.toTensor=function(){return Qr().makeTensor(this.values,this.shape,this.dtype)},n}(),Qr=null,re=null,PS=null,It=function(){function n(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=be(e),this.strides=Wn(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}return n.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},n.prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,function(){return"The array must have only 1 element."}),this.reshape([])},n.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},n.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},n.prototype.as3D=function(e,t,r){return this.throwIfDisposed(),this.reshape([e,t,r])},n.prototype.as4D=function(e,t,r,s){return this.throwIfDisposed(),this.reshape([e,t,r,s])},n.prototype.as5D=function(e,t,r,s,o){return this.throwIfDisposed(),this.reshape([e,t,r,s,o])},n.prototype.asType=function(e){return this.throwIfDisposed(),re.cast(this,e)},Object.defineProperty(n.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),n.prototype.buffer=function(){return ke(this,void 0,void 0,function(){var e;return Se(this,function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,re.buffer(this.shape,this.dtype,e)]}})})},n.prototype.bufferSync=function(){return re.buffer(this.shape,this.dtype,this.dataSync())},n.prototype.array=function(){return ke(this,void 0,void 0,function(){var e;return Se(this,function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,Hf(this.shape,e)]}})})},n.prototype.arraySync=function(){return Hf(this.shape,this.dataSync())},n.prototype.data=function(){return ke(this,void 0,void 0,function(){var e,t;return Se(this,function(r){switch(r.label){case 0:return this.throwIfDisposed(),e=Qr().read(this.dataId),this.dtype!=="string"?[3,2]:[4,e];case 1:t=r.sent();try{return[2,t.map(function(s){return Cu(s)})]}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}r.label=2;case 2:return[2,e]}})})},n.prototype.dataSync=function(){this.throwIfDisposed();var e=Qr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(function(t){return Cu(t)})}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},n.prototype.bytes=function(){return ke(this,void 0,void 0,function(){var e;return Se(this,function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,Qr().read(this.dataId)];case 1:return e=t.sent(),this.dtype==="string"?[2,e]:[2,new Uint8Array(e.buffer)]}})})},n.prototype.dispose=function(){this.isDisposed||(Qr().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(n.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),n.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},n.prototype.toFloat=function(){return this.asType("float32")},n.prototype.toInt=function(){return this.asType("int32")},n.prototype.toBool=function(){return this.asType("bool")},n.prototype.print=function(e){return e===void 0&&(e=!1),re.print(this,e)},n.prototype.reshape=function(e){return this.throwIfDisposed(),re.reshape(this,e)},n.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},n.prototype.expandDims=function(e){return e===void 0&&(e=0),re.expandDims(this,e)},n.prototype.cumsum=function(e,t,r){return e===void 0&&(e=0),t===void 0&&(t=!1),r===void 0&&(r=!1),re.cumsum(this,e,t,r)},n.prototype.squeeze=function(e){return this.throwIfDisposed(),re.squeeze(this,e)},n.prototype.clone=function(){return this.throwIfDisposed(),re.clone(this)},n.prototype.toString=function(e){return e===void 0&&(e=!1),F9(this.dataSync(),this.shape,this.dtype,e)},n.prototype.gather=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),re.gather(this,e,t)},n.prototype.matMul=function(e,t,r){return t===void 0&&(t=!1),r===void 0&&(r=!1),this.throwIfDisposed(),re.matMul(this,e,t,r)},n.prototype.dot=function(e){return this.throwIfDisposed(),re.dot(this,e)},n.prototype.norm=function(e,t,r){return e===void 0&&(e="euclidean"),t===void 0&&(t=null),r===void 0&&(r=!1),this.throwIfDisposed(),re.norm(this,e,t,r)},n.prototype.slice=function(e,t){return this.throwIfDisposed(),re.slice(this,e,t)},n.prototype.reverse=function(e){return this.throwIfDisposed(),re.reverse(this,e)},n.prototype.concat=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),e instanceof n&&(e=[e]),re.concat([this].concat(e),t)},n.prototype.split=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),re.split(this,e,t)},n.prototype.stack=function(e,t){return t===void 0&&(t=0),re.stack([this,e],t)},n.prototype.unstack=function(e){return e===void 0&&(e=0),re.unstack(this,e)},n.prototype.batchNormalization=function(e,t,r,s,o){return r===void 0&&(r=.001),PS("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,o,s,r)},n.prototype.all=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.all(this,e,t)},n.prototype.any=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.any(this,e,t)},n.prototype.logSumExp=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.logSumExp(this,e,t)},n.prototype.sum=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.sum(this,e,t)},n.prototype.prod=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.prod(this,e,t)},n.prototype.mean=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.mean(this,e,t)},n.prototype.min=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.min(this,e,t)},n.prototype.max=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.max(this,e,t)},n.prototype.argMin=function(e){return e===void 0&&(e=null),this.throwIfDisposed(),re.argMin(this,e)},n.prototype.argMax=function(e){return e===void 0&&(e=null),this.throwIfDisposed(),re.argMax(this,e)},n.prototype.cast=function(e){return this.throwIfDisposed(),re.cast(this,e)},n.prototype.addStrict=function(e){return this.throwIfDisposed(),re.addStrict(this,e)},n.prototype.atan2=function(e){return this.throwIfDisposed(),re.atan2(this,e)},n.prototype.sub=function(e){return this.throwIfDisposed(),re.sub(this,e)},n.prototype.subStrict=function(e){return this.throwIfDisposed(),re.subStrict(this,e)},n.prototype.pow=function(e){return this.throwIfDisposed(),re.pow(this,e)},n.prototype.powStrict=function(e){return this.throwIfDisposed(),re.powStrict(this,e)},n.prototype.mul=function(e){return this.throwIfDisposed(),re.mul(this,e)},n.prototype.mulStrict=function(e){return this.throwIfDisposed(),re.mulStrict(this,e)},n.prototype.floorDiv=function(e){return this.throwIfDisposed(),re.floorDiv(this,e)},n.prototype.divStrict=function(e){return this.throwIfDisposed(),re.divStrict(this,e)},n.prototype.minimum=function(e){return this.throwIfDisposed(),re.minimum(this,e)},n.prototype.minimumStrict=function(e){return this.throwIfDisposed(),re.minimumStrict(this,e)},n.prototype.maximum=function(e){return this.throwIfDisposed(),re.maximum(this,e)},n.prototype.maximumStrict=function(e){return this.throwIfDisposed(),re.maximumStrict(this,e)},n.prototype.mod=function(e){return this.throwIfDisposed(),re.mod(this,e)},n.prototype.modStrict=function(e){return this.throwIfDisposed(),re.modStrict(this,e)},n.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),re.squaredDifferenceStrict(this,e)},n.prototype.notEqual=function(e){return this.throwIfDisposed(),re.notEqual(this,e)},n.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),re.notEqualStrict(this,e)},n.prototype.less=function(e){return this.throwIfDisposed(),re.less(this,e)},n.prototype.lessStrict=function(e){return this.throwIfDisposed(),re.lessStrict(this,e)},n.prototype.equal=function(e){return this.throwIfDisposed(),re.equal(this,e)},n.prototype.equalStrict=function(e){return this.throwIfDisposed(),re.equalStrict(this,e)},n.prototype.lessEqual=function(e){return this.throwIfDisposed(),re.lessEqual(this,e)},n.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),re.lessEqualStrict(this,e)},n.prototype.greater=function(e){return this.throwIfDisposed(),re.greater(this,e)},n.prototype.greaterStrict=function(e){return this.throwIfDisposed(),re.greaterStrict(this,e)},n.prototype.greaterEqual=function(e){return this.throwIfDisposed(),re.greaterEqual(this,e)},n.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),re.greaterEqualStrict(this,e)},n.prototype.logicalAnd=function(e){return this.throwIfDisposed(),re.logicalAnd(this,e)},n.prototype.logicalOr=function(e){return this.throwIfDisposed(),re.logicalOr(this,e)},n.prototype.logicalNot=function(){return this.throwIfDisposed(),re.logicalNot(this)},n.prototype.logicalXor=function(e){return this.throwIfDisposed(),re.logicalXor(this,e)},n.prototype.where=function(e,t){return this.throwIfDisposed(),re.where(e,this,t)},n.prototype.neg=function(){return this.throwIfDisposed(),re.neg(this)},n.prototype.ceil=function(){return this.throwIfDisposed(),re.ceil(this)},n.prototype.floor=function(){return this.throwIfDisposed(),re.floor(this)},n.prototype.sign=function(){return this.throwIfDisposed(),re.sign(this)},n.prototype.isNaN=function(){return this.throwIfDisposed(),re.isNaN(this)},n.prototype.isInf=function(){return this.throwIfDisposed(),re.isInf(this)},n.prototype.isFinite=function(){return this.throwIfDisposed(),re.isFinite(this)},n.prototype.exp=function(){return this.throwIfDisposed(),re.exp(this)},n.prototype.expm1=function(){return this.throwIfDisposed(),re.expm1(this)},n.prototype.log=function(){return this.throwIfDisposed(),re.log(this)},n.prototype.log1p=function(){return this.throwIfDisposed(),re.log1p(this)},n.prototype.sqrt=function(){return this.throwIfDisposed(),re.sqrt(this)},n.prototype.rsqrt=function(){return this.throwIfDisposed(),re.rsqrt(this)},n.prototype.square=function(){return this.throwIfDisposed(),re.square(this)},n.prototype.reciprocal=function(){return this.throwIfDisposed(),re.reciprocal(this)},n.prototype.abs=function(){return this.throwIfDisposed(),re.abs(this)},n.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),re.clipByValue(this,e,t)},n.prototype.relu=function(){return this.throwIfDisposed(),re.relu(this)},n.prototype.relu6=function(){return this.throwIfDisposed(),re.relu6(this)},n.prototype.elu=function(){return this.throwIfDisposed(),re.elu(this)},n.prototype.selu=function(){return this.throwIfDisposed(),re.selu(this)},n.prototype.leakyRelu=function(e){return e===void 0&&(e=.2),this.throwIfDisposed(),re.leakyRelu(this,e)},n.prototype.prelu=function(e){return this.throwIfDisposed(),re.prelu(this,e)},n.prototype.sigmoid=function(){return this.throwIfDisposed(),re.sigmoid(this)},n.prototype.logSigmoid=function(){return this.throwIfDisposed(),re.logSigmoid(this)},n.prototype.softplus=function(){return this.throwIfDisposed(),re.softplus(this)},n.prototype.zerosLike=function(){return this.throwIfDisposed(),re.zerosLike(this)},n.prototype.onesLike=function(){return this.throwIfDisposed(),re.onesLike(this)},n.prototype.sin=function(){return this.throwIfDisposed(),re.sin(this)},n.prototype.cos=function(){return this.throwIfDisposed(),re.cos(this)},n.prototype.tan=function(){return this.throwIfDisposed(),re.tan(this)},n.prototype.asin=function(){return this.throwIfDisposed(),re.asin(this)},n.prototype.acos=function(){return this.throwIfDisposed(),re.acos(this)},n.prototype.atan=function(){return this.throwIfDisposed(),re.atan(this)},n.prototype.sinh=function(){return this.throwIfDisposed(),re.sinh(this)},n.prototype.cosh=function(){return this.throwIfDisposed(),re.cosh(this)},n.prototype.tanh=function(){return this.throwIfDisposed(),re.tanh(this)},n.prototype.asinh=function(){return this.throwIfDisposed(),re.asinh(this)},n.prototype.acosh=function(){return this.throwIfDisposed(),re.acosh(this)},n.prototype.atanh=function(){return this.throwIfDisposed(),re.atanh(this)},n.prototype.erf=function(){return this.throwIfDisposed(),re.erf(this)},n.prototype.round=function(){return this.throwIfDisposed(),re.round(this)},n.prototype.step=function(e){return e===void 0&&(e=0),this.throwIfDisposed(),re.step(this,e)},n.prototype.softmax=function(e){return e===void 0&&(e=-1),this.throwIfDisposed(),re.softmax(this,e)},n.prototype.logSoftmax=function(e){return e===void 0&&(e=-1),this.throwIfDisposed(),re.logSoftmax(this,e)},n.prototype.resizeBilinear=function(e,t){return t===void 0&&(t=!1),this.throwIfDisposed(),re.image.resizeBilinear(this,e,t)},n.prototype.resizeNearestNeighbor=function(e,t){return t===void 0&&(t=!1),this.throwIfDisposed(),re.image.resizeNearestNeighbor(this,e,t)},n.prototype.conv1d=function(e,t,r,s,o,a){return s===void 0&&(s="NWC"),o===void 0&&(o=1),this.throwIfDisposed(),re.conv1d(this,e,t,r,s,o,a)},n.prototype.conv2d=function(e,t,r,s,o,a){return s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]),this.throwIfDisposed(),re.conv2d(this,e,t,r,s,o,a)},n.prototype.conv2dTranspose=function(e,t,r,s,o){return this.throwIfDisposed(),re.conv2dTranspose(this,e,t,r,s,o)},n.prototype.depthwiseConv2D=function(e,t,r,s,o,a){return s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]),this.throwIfDisposed(),re.depthwiseConv2d(this,e,t,r,s,o,a)},n.prototype.separableConv2d=function(e,t,r,s,o,a){return o===void 0&&(o=[1,1]),a===void 0&&(a="NHWC"),this.throwIfDisposed(),re.separableConv2d(this,e,t,r,s,o,a)},n.prototype.avgPool=function(e,t,r,s){return this.throwIfDisposed(),re.avgPool(this,e,t,r,s)},n.prototype.maxPool=function(e,t,r,s){return this.throwIfDisposed(),re.maxPool(this,e,t,r,s)},n.prototype.localResponseNormalization=function(e,t,r,s){return e===void 0&&(e=5),t===void 0&&(t=1),r===void 0&&(r=1),s===void 0&&(s=.5),re.localResponseNormalization(this,e,t,r,s)},n.prototype.pool=function(e,t,r,s,o){return this.throwIfDisposed(),re.pool(this,e,t,r,s,o)},n.prototype.variable=function(e,t,r){return e===void 0&&(e=!0),this.throwIfDisposed(),Qr().makeVariable(this,e,t,r)},n.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),re.unsortedSegmentSum(this,e,t)},n.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),re.batchToSpaceND(this,e,t)},n.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),re.spaceToBatchND(this,e,t)},n.prototype.topk=function(e,t){return e===void 0&&(e=1),t===void 0&&(t=!0),this.throwIfDisposed(),re.topk(this,e,t)},n.prototype.stridedSlice=function(e,t,r,s,o,a,i,u){return s===void 0&&(s=0),o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),u===void 0&&(u=0),this.throwIfDisposed(),re.stridedSlice(this,e,t,r,s,o,a,i,u)},n.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),re.depthToSpace(this,e,t)},n.prototype.fft=function(){return this.throwIfDisposed(),re.spectral.fft(this)},n.prototype.ifft=function(){return this.throwIfDisposed(),re.spectral.ifft(this)},n.prototype.rfft=function(){return this.throwIfDisposed(),re.spectral.rfft(this)},n.prototype.irfft=function(){return this.throwIfDisposed(),re.spectral.irfft(this)},n}();Object.defineProperty(It,Symbol.hasInstance,{value:function(n){return!!n&&n.dataId!=null&&n.shape!=null&&n.dtype!=null}});var W0,jf,qf,Kf,Xf,oh=function(n){function e(t,r,s,o){var a=n.call(this,t.shape,t.dtype,t.dataId,o)||this;return a.trainable=r,a.name=s,a}return Wr(e,n),e.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value ("+t.dtype+") and previous value ("+this.dtype+") must match");if(!Qt(t.shape,this.shape))throw new Error("shape of the new value ("+t.shape+") and previous value ("+this.shape+") must match");Qr().disposeTensor(this),this.dataId=t.dataId,Qr().incRef(this,null)},e.prototype.dispose=function(){Qr().disposeVariable(this),this.isDisposedInternal=!0},e}(It);Object.defineProperty(oh,Symbol.hasInstance,{value:function(n){return n instanceof It&&n.assign!=null&&n.assign instanceof Function}}),function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"}(W0||(W0={})),function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"}(jf||(jf={})),function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"}(qf||(qf={})),function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"}(Kf||(Kf={})),function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"}(Xf||(Xf={}));var O9={float32:Kf,int32:jf,bool:qf,complex64:Xf};function ln(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error("Can not upcast "+n+" with "+e)}return O9[n][e]}function Op(n){return ln(n,"int32")}function kt(n,e){if(n.dtype===e.dtype)return[n,e];var t=ln(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function _9(n,e){D(n.dtype===e.dtype,function(){return"The dtypes of the first("+n.dtype+") and second("+e.dtype+") input must match"})}function BS(n){var e=[];return function t(r,s,o){if(r!=null){if(r instanceof It)return void s.push(r);if(a=r,!(!Array.isArray(a)&&typeof a!="object")){var a,i=r;for(var u in i){var c=i[u];o.has(c)||(o.add(c),t(c,s,o))}}}}(n,e,new Set),e}var _p,U0=function(){function n(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return n.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},n}(),M9=function(){function n(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new U0}return n.prototype.ready=function(){return ke(this,void 0,void 0,function(){var e,t,r;return Se(this,function(s){switch(s.label){case 0:if(this.pendingBackendInit!=null)return[2,this.pendingBackendInit.then(function(){})];if(this.backendInstance!=null)return[2];e=this.getSortedBackends(),t=0,s.label=1;case 1:return t<e.length?(r=e[t],[4,this.initializeBackend(r).success]):[3,5];case 2:return s.sent()?[4,this.setBackend(r)]:[3,4];case 3:return s.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}})})},Object.defineProperty(n.prototype,"backend",{get:function(){if(this.pendingBackendInit!=null)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(this.backendInstance==null){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),n.prototype.backendNames=function(){return Object.keys(this.registryFactory)},n.prototype.findBackend=function(e){return!(e in this.registry)&&(!(e in this.registryFactory)||this.initializeBackend(e).asyncInit)?null:this.registry[e]},n.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},n.prototype.registerBackend=function(e,t,r){return r===void 0&&(r=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:r},!0)},n.prototype.setBackend=function(e){return ke(this,void 0,void 0,function(){var t,r,s;return Se(this,function(o){switch(o.label){case 0:if(this.registryFactory[e]==null)throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,this.registry[e]!=null?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),r=t.success,t.asyncInit?[4,r]:[3,2]);case 1:return s=o.sent(),[3,3];case 2:s=r,o.label=3;case 3:if(!s)return[2,!1];o.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new A9(this.backendInstance),[2,!0]}})})},n.prototype.setupRegisteredKernels=function(){var e=this;B0(this.backendName).forEach(function(t){t.setupFunc!=null&&t.setupFunc(e.backendInstance)})},n.prototype.disposeRegisteredKernels=function(e){var t=this;B0(e).forEach(function(r){r.disposeFunc!=null&&r.disposeFunc(t.registry[e])})},n.prototype.initializeBackend=function(e){var t=this,r=this.registryFactory[e];if(r==null)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var s=r.factory();if(Promise.resolve(s)===s){var o=++this.pendingBackendInitId,a=s.then(function(i){return!(o<t.pendingBackendInitId)&&(t.registry[e]=i,t.pendingBackendInit=null,!0)}).catch(function(i){return!(o<t.pendingBackendInitId)&&(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(i.stack||i.message),!1)});return this.pendingBackendInit=a,{success:a,asyncInit:!0}}return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(i){return console.warn("Initialization of backend "+e+" failed"),console.warn(i.stack||i.message),{success:!1,asyncInit:!1}}},n.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},n.prototype.getSortedBackends=function(){var e=this;if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(function(t,r){return e.registryFactory[r].priority-e.registryFactory[t].priority})},n.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var r=e[t],s=this.initializeBackend(r),o=s.success,a=s.asyncInit;if(a||o)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")},n.prototype.moveData=function(e,t){var r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t);s.disposeData(t),r.backend=e,e.move(t,o,r.shape,r.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},n.prototype.tidy=function(e,t){var r,s=this,o=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=e}return this.scopedRun(function(){return s.startScope(o)},function(){return s.endScope(r)},function(){return(r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r})},n.prototype.scopedRun=function(e,t,r){e();try{var s=r();return t(),s}catch(o){throw t(),o}},n.prototype.nextTensorId=function(){return n.nextTensorId++},n.prototype.nextVariableId=function(){return n.nextVariableId++},n.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),r={x:e};return this.addTapeNode(this.state.activeScope.name,r,[t],function(s){return{x:function(){return s.toFloat()}}},[],{}),t},n.prototype.runKernel=function(e,t,r,s,o){return this.runKernelFunc(null,t,null,e,r,s,o)},n.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},n.prototype.checkKernelForMemLeak=function(e,t,r){var s=this.backend.numDataIds(),o=0;r.forEach(function(u){o+=u.dtype==="complex64"?3:1});var a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+i+" data ids) after running '"+e+"'")},n.prototype.runKernelFunc=function(e,t,r,s,o,a,i){var u,c=this,l=[],h=this.isTapeOn();s==null&&(s=this.state.activeScope!=null?this.state.activeScope.name:"");var d,p=this.state.numBytes,f=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var m,g=kS(s,this.backendName);if(g!=null)d=function(){var y=c.backend.numDataIds();m=g.kernelFunc({inputs:t,attrs:o,backend:c.backend});var b=Array.isArray(m)?m:[m];c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(s,y,b);var v=b.map(function(I){var k=I.dataId,S=I.shape,N=I.dtype;return c.makeTensorFromDataId(k,S,N)});if(h){var w=c.getTensorsForGradient(s,t,v);if(w==null){i==null&&(i=[]);var C=v.filter(function(I,k){return i[k]});w=(a||[]).slice().concat(C)}l=c.saveTensorsForBackwardMode(w)}return v};else{var x=function(y){h&&(l=y.map(function(b){return c.keep(c.clone(b))}))};d=function(){var y=c.backend.numDataIds();m=c.tidy(function(){return e(c.backend,x)});var b=Array.isArray(m)?m:[m];return c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(s,y,b),b}}return this.scopedRun(function(){return c.state.kernelDepth++},function(){return c.state.kernelDepth--},function(){u=c.ENV.getBool("DEBUG")?c.profiler.profileKernel(s,t,function(){return d()}):d()}),h&&this.addTapeNode(s,t,u,r,l,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-f,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(function(y){return t[y].shape}),outputShapes:u.map(function(y){return y.shape})}),Array.isArray(m)?u:u[0]},n.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map(function(r){return t.keep(t.clone(r))})},n.prototype.getTensorsForGradient=function(e,t,r){var s=P0(e);if(s!=null){var o=s.inputsToSave||[],a=s.outputsToSave||[],i=void 0;s.saveAllInputs?(D(Array.isArray(t),function(){return"saveAllInputs is true, expected inputs to be an array."}),i=Object.keys(t).map(function(c){return t[c]})):i=o.map(function(c){return t[c]});var u=r.filter(function(c,l){return a[l]});return i.concat(u)}return null},n.prototype.makeTensor=function(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;var o=e;r==="string"&&Qd(e[0])&&(o=e.map(function(l){return MS(l)}));var a=s.write(o,t,r),i=new It(t,r,a,this.nextTensorId());if(this.incRef(i,s),r==="string"){var u=this.state.tensorInfo.get(a),c=FS(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i},n.prototype.makeTensorFromDataId=function(e,t,r,s){var o=new It(t,r=r||"float32",e,this.nextTensorId());return this.incRef(o,s),o},n.prototype.makeVariable=function(e,t,r,s){t===void 0&&(t=!0),r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.asType(s));var o=new oh(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error("Variable with name "+o.name+" was already registered");return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o},n.prototype.incRef=function(e,t){var r=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,r===0){this.state.numDataBuffers++;var s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*uy(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s,refCount:0}),this.state.numBytes+=s}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof oh||this.track(e)},n.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},n.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},n.prototype.disposeVariable=function(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]},n.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},n.prototype.profile=function(e){return ke(this,void 0,void 0,function(){var t,r;return Se(this,function(s){return this.state.profiling=!0,t=this.state.numBytes,r=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map(function(o){return o.totalBytesSnapshot})),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,[2,this.state.activeProfile]})})},n.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&this.state.kernelDepth===0},n.prototype.addTapeNode=function(e,t,r,s,o,a){var i=this,u={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},c=P0(e);c!=null&&(s=c.gradFunc),s!=null&&(u.gradient=function(l){return l=l.map(function(h,d){if(h==null){var p=r[d],f=$i(p.size,p.dtype);return i.makeTensor(f,p.shape,p.dtype)}return h}),s(l.length>1?l:l[0],o,a)}),this.state.activeTape.push(u)},n.prototype.keep=function(e){return e.kept=!0,e},n.prototype.startTape=function(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++},n.prototype.endTape=function(){this.state.gradientDepth--},n.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},n.prototype.endScope=function(e){for(var t=this,r=BS(e),s=new Set(r.map(function(u){return u.id})),o=0;o<this.state.activeScope.track.length;o++){var a=this.state.activeScope.track[o];a.kept||s.has(a.id)||a.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],r.forEach(function(u){u.kept||u.scopeId!==i.id||t.track(u)})},n.prototype.gradients=function(e,t,r,s){var o=this;if(s===void 0&&(s=!1),D(t.length>0,function(){return"gradients() received an empty list of xs."}),r!=null&&r.dtype!=="float32")throw new Error("dy must have 'float32' dtype, but has '"+r.dtype+"'");var a=this.scopedRun(function(){return o.startTape()},function(){return o.endTape()},function(){return o.tidy("forward",e)});D(a instanceof It,function(){return"The result y returned by f() must be a tensor."});var i=function(u,c,l){for(var h={},d={},p=0;p<c.length;p++)h[c[p].id]=!0;for(p=0;p<u.length;p++){var f=(C=u[p]).inputs;for(var m in f){for(var g=f[m],x=!1,y=0;y<c.length;y++)if(h[g.id]){C.outputs.forEach(function(N){return h[N.id]=!0}),x=!0,d[C.id]=!0;break}if(x)break}}var b={};b[l.id]=!0;var v={};for(p=u.length-1;p>=0;p--)for(f=(C=u[p]).inputs,y=0;y<C.outputs.length;y++)if(b[C.outputs[y].id]){for(var m in f)b[f[m].id]=!0,v[C.id]=!0;break}var w=[];for(p=0;p<u.length;p++){var C;if(d[(C=u[p]).id]&&v[C.id]){var I={};for(var m in C.inputs){var k=C.inputs[m];h[k.id]&&(I[m]=k)}var S=Object.assign({},C);S.inputs=I,S.outputs=C.outputs,w.push(S)}}return w}(this.state.activeTape,t,a);if(!s&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",function(){var u,c,l={};l[a.id]=r??(u=a.shape,c=ly(be(u),"float32"),G.makeTensor(c,u,"float32")),function(d,p,f){for(var m=function(x){var y=p[x],b=[];if(y.outputs.forEach(function(I){var k=d[I.id];k!=null?b.push(k):b.push(null)}),y.gradient==null)throw new Error("Cannot compute gradient: gradient function not found for "+y.kernelName+".");var v=y.gradient(b),w=function(I){if(!(I in v))throw new Error("Cannot backprop through input "+I+". Available gradients found: "+Object.keys(v)+".");var k=f(function(){return v[I]()});if(k.dtype!=="float32")throw new Error("Error in gradient for op "+y.kernelName+". The gradient of input "+I+" must have 'float32' dtype, but has '"+k.dtype+"'");var S=y.inputs[I];if(!Qt(k.shape,S.shape))throw new Error("Error in gradient for op "+y.kernelName+". The gradient of input '"+I+"' has shape '"+k.shape+"', which does not match the shape of the input '"+S.shape+"'");if(d[S.id]==null)d[S.id]=k;else{var N=d[S.id];d[S.id]=N.add(k),N.dispose()}};for(var C in y.inputs)w(C)},g=p.length-1;g>=0;g--)m(g)}(l,i,function(d){return o.tidy(d)});var h=t.map(function(d){return l[d.id]});return o.state.gradientDepth===0&&(o.state.activeTape.forEach(function(d){for(var p=0,f=d.saved;p<f.length;p++)f[p].dispose()}),o.state.activeTape=null),{value:a,grads:h}})},n.prototype.customGrad=function(e){var t=this;return D(nh(e),function(){return"The f passed in customGrad(f) must be a function."}),function(){for(var r,s=[],o=0;o<arguments.length;o++)s[o]=arguments[o];D(s.every(function(i){return i instanceof It}),function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"});var a={};return s.forEach(function(i,u){a[u]=i}),t.runKernelFunc(function(i,u){return D((r=e.apply(void 0,s.concat([u]))).value instanceof It,function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"}),D(nh(r.gradFunc),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."}),r.value},a,function(i,u){var c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];D(l.length===s.length,function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."}),D(l.every(function(d){return d instanceof It}),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."});var h={};return l.forEach(function(d,p){h[p]=function(){return d}}),h})}},n.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},n.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},n.prototype.time=function(e){return ke(this,void 0,void 0,function(){var t,r;return Se(this,function(s){switch(s.label){case 0:return t=$r(),[4,this.backend.time(e)];case 1:return(r=s.sent()).wallMs=$r()-t,[2,r]}})})},n.prototype.track=function(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(n.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),n.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new U0,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},n.nextTensorId=0,n.nextVariableId=0,n}(),G=function(){var n=function(){if(_p==null){var t=void 0;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else{if(typeof self>"u")throw new Error("Could not find a global object");t=self}_p=t}return _p}();if(n._tfengine==null){var e=new E9(n);n._tfengine=new M9(e)}return function(t){IS=t}(n._tfengine.ENV),Qr=function(){return n._tfengine},n._tfengine}();function zS(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var ms=se();ms.registerFlag("DEBUG",function(){return!1},function(n){n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ms.registerFlag("IS_BROWSER",function(){return zS()}),ms.registerFlag("IS_NODE",function(){return typeof process<"u"&&process.versions!==void 0&&process.versions.node!==void 0}),ms.registerFlag("IS_CHROME",function(){return typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}),ms.registerFlag("PROD",function(){return!1}),ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",function(){return ms.getBool("DEBUG")}),ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",function(){return!0}),ms.registerFlag("IS_TEST",function(){return!1});var ku,tr,Qn,So={},Mp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function L9(n,e){So[n]=e}function hs(n){n in So||(So[n]=function(t){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var r=function(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return r.addEventListener("webglcontextlost",function(s){s.preventDefault(),delete So[t]},!1),t===1?r.getContext("webgl",Mp)||r.getContext("experimental-webgl",Mp):r.getContext("webgl2",Mp)}(n));var e=So[n];return e.isContextLost()?(delete So[n],hs(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),So[n])}function Zd(n,e){return[e,n]}function su(n){var e=be(n);return th(Math.ceil(e/4))}function qc(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function py(n,e){var t,r,s,o,a,i,u,c,l,h=n;return se().getNumber("WEBGL_VERSION")===2?(t=h.R32F,r=h.R16F,s=h.RGBA16F,o=h.RGBA32F,a=h.RED,i=4,u=1,c=h.HALF_FLOAT,l=h.FLOAT):(t=n.RGBA,r=n.RGBA,s=n.RGBA,o=h.RGBA,a=n.RGBA,i=4,u=4,c=e!=null?e.HALF_FLOAT_OES:null,l=n.FLOAT),{internalFormatFloat:t,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:n.RGBA,downloadUnpackNumChannels:i,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:l}}function Ne(n,e,t){var r=t();return e&&function(s){var o=s.getError();if(o!==s.NO_ERROR)throw new Error("WebGL Error: "+V9(s,o))}(n),r}(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(ku||(ku={})),function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"}(tr||(tr={})),function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Qn||(Qn={}));var P9=596e-10,B9=65504;function z9(n){return!!(se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||P9<Math.abs(n)&&Math.abs(n)<B9)}function V9(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function hl(n,e,t){return Ms(n,e,function(){return n.getExtension(t)},'Extension "'+t+'" not supported on this browser.')}function W9(n,e,t){var r=Ms(n,e,function(){return n.createShader(n.VERTEX_SHADER)},"Unable to create vertex WebGLShader.");if(Ne(n,e,function(){return n.shaderSource(r,t)}),Ne(n,e,function(){return n.compileShader(r)}),n.getShaderParameter(r,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function U9(n,e,t){var r=Ms(n,e,function(){return n.createShader(n.FRAGMENT_SHADER)},"Unable to create fragment WebGLShader.");if(Ne(n,e,function(){return n.shaderSource(r,t)}),Ne(n,e,function(){return n.compileShader(r)}),n.getShaderParameter(r,n.COMPILE_STATUS)===!1)throw function(s,o){var a=G9.exec(o);if(a==null)return console.log("Couldn't parse line number in error: "+o),void console.log(s);for(var i=+a[1],u=s.split(`
`),c=u.length.toString().length+2,l=u.map(function(g,x){return Bo((x+1).toString(),c)+g}),h=0,d=0;d<l.length;d++)h=Math.max(l[d].length,h);var p=l.slice(0,i-1),f=l.slice(i-1,i),m=l.slice(i);console.log(p.join(`
`)),console.log(o.split(`
`)[0]),console.log("%c "+Bo(f[0],h),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(m.join(`
`))}(t,n.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var Lp,Pp,G9=/ERROR: [0-9]+:([0-9]+):/g;function H9(n,e){return Ms(n,e,function(){return n.createProgram()},"Unable to create WebGLProgram.")}function j9(n,e,t){if(Ne(n,e,function(){return n.linkProgram(t)}),n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Bp(n,e,t){if(Ne(n,e,function(){return n.validateProgram(t)}),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function q9(n,e,t){var r=Ms(n,e,function(){return n.createBuffer()},"Unable to create WebGLBuffer");return Ne(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,r)}),Ne(n,e,function(){return n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)}),r}function K9(n,e,t){var r=Ms(n,e,function(){return n.createBuffer()},"Unable to create WebGLBuffer");return Ne(n,e,function(){return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r)}),Ne(n,e,function(){return n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)}),r}function X9(n,e){return Ms(n,e,function(){return n.createTexture()},"Unable to create WebGLTexture.")}function Y9(n,e){var t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){var r="["+n+"x"+e+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t)throw r="["+n+"x"+e+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+("["+t+"x"+t+"]")+".")}function Q9(n,e){return Ms(n,e,function(){return n.createFramebuffer()},"Unable to create WebGLFramebuffer.")}function G0(n,e,t,r,s,o,a,i){var u=n.getAttribLocation(t,r);return u!==-1&&(Ne(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,s)}),Ne(n,e,function(){return n.vertexAttribPointer(u,o,n.FLOAT,!1,a,i)}),Ne(n,e,function(){return n.enableVertexAttribArray(u)}),!0)}function Z9(n,e,t,r){rQ(n,r),Ne(n,e,function(){return n.activeTexture(n.TEXTURE0+r)}),Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)})}function J9(n,e,t,r){return Ms(n,e,function(){return n.getUniformLocation(t,r)},'uniform "'+r+'" not present in program.')}function eQ(n,e,t){return n.getUniformLocation(e,t)}function tQ(n,e,t,r,s,o){Ne(n,e,function(){return Z9(n,e,r,o)}),Ne(n,e,function(){return n.uniform1i(s,o)})}function zp(n,e,t,r){Ne(n,e,function(){return n.bindFramebuffer(n.FRAMEBUFFER,r)}),Ne(n,e,function(){return n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0)})}function H0(n,e,t){Ne(n,e,function(){return n.bindFramebuffer(n.FRAMEBUFFER,t)}),Ne(n,e,function(){return n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0)})}function dl(n){var e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+nQ(n,e))}function nQ(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function Ms(n,e,t,r){var s=Ne(n,e,function(){return t()});if(s==null)throw new Error(r);return s}function rQ(n,e){var t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t)throw new Error("textureUnit must be in "+("[gl.TEXTURE0, gl.TEXTURE"+t+"]")+".")}function ah(n,e){return e===void 0&&(e=2),be(n.slice(0,n.length-e))}function ih(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Vp(n){var e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ah(n)].concat(ih(n))),e}function sQ(n,e){var t;e===void 0&&(e=!1);var r=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(r*=2,(n=n.map(function(c,l){return l>=n.length-2?iy(n[l]):n[l]})).length===1&&(n=[2,n[0]])),n.length!==2){var s=zs(n);n=s.newShape}var o=be(n);if(n.length<=1&&o<=r)return[1,o];if(n.length===2&&n[0]<=r&&n[1]<=r)return n;if(n.length===3&&n[0]*n[1]<=r&&n[2]<=r)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=r&&n[1]*n[2]<=r)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=r&&n[3]<=r)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=r&&n[1]*n[2]*n[3]<=r)return[n[0],n[1]*n[2]*n[3]];if(e){var a=ah(n),i=2,u=2;return n.length&&(i=(t=ih(n))[0],u=t[1]),th(o=a*(i/2)*(u/2)).map(function(c){return 2*c})}return th(o)}function pl(n){return n%2==0}function fl(n,e){if(Qt(n=n.slice(-2),e=e.slice(-2))||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){var t=n.slice(-1)[0],r=e.slice(-1)[0];if(t===r||pl(t)&&pl(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&pl(n[0])&&pl(e[0])}function oQ(n){if(Lp==null){var e=hs(n);Lp=e.getParameter(e.MAX_TEXTURE_SIZE)}return Lp}function aQ(n){if(Pp==null){var e=hs(n);Pp=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Pp)}function iQ(n){if(n===0)return 0;var e=hs(n);return yr(e,"EXT_disjoint_timer_query_webgl2")&&n===2?2:yr(e,"EXT_disjoint_timer_query")?1:0}function yr(n,e){return n.getExtension(e)!=null}function j0(n){try{if(hs(n)!=null)return!0}catch{return!1}return!1}function uQ(n){if(n===0)return!1;var e=hs(n);if(n===1){if(!yr(e,"OES_texture_float"))return!1}else if(!yr(e,"EXT_color_buffer_float"))return!1;return Yf(e)}function cQ(n){if(n===0)return!1;var e=hs(n);if(n!==1){if(yr(e,"EXT_color_buffer_float"))return Yf(e);if(yr(e,"EXT_color_buffer_half_float")){var t=e.getExtension("EXT_color_buffer_half_float");return function(r,s){var o=py(r,s),a=r.createTexture();r.bindTexture(r.TEXTURE_2D,a),r.texImage2D(r.TEXTURE_2D,0,o.internalFormatHalfFloat,1,1,0,o.textureFormatFloat,o.textureTypeHalfFloat,null);var i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,a,0);var u=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(a),r.deleteFramebuffer(i),u}(e,t)}return!1}return!!yr(e,"OES_texture_float")&&!!yr(e,"WEBGL_color_buffer_float")&&Yf(e)}function Yf(n){var e=py(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);var r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);var s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),s}function lQ(n){return n===2&&hs(n).fenceSync!=null}var Me=se();function VS(n){se().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function je(n,e){return G.tidy(n,e)}function Un(n){BS(n).forEach(function(e){return e.dispose()})}function hQ(n){return G.keep(n)}function uh(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];se().getBool("IS_TEST")||console.warn.apply(console,n)}function yo(n,e){var t=n;if(Mr(n))return e==="string"?[]:[n.length];if(!Array.isArray(n))return[];for(var r=[];Array.isArray(t)||Mr(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&se().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function s(o,a,i){if(i=i||[],!Array.isArray(o)&&!Mr(o))return void D(a.length===0,function(){return"Element arr["+i.join("][")+"] is a primitive, but should be an array/TypedArray of "+a[0]+" elements"});D(a.length>0,function(){return"Element arr["+i.join("][")+"] should be a primitive, but is an array of "+o.length+" elements"}),D(o.length===a[0],function(){return"Element arr["+i.join("][")+"] should have "+a[0]+" elements, but has "+o.length+" elements"});for(var u=a.slice(1),c=0;c<o.length;++c)s(o[c],u,i.concat(c))}(n,r,[]),r}function q0(n,e,t,r){if(n!=null&&(n!=="numeric"&&n!==e||n==="numeric"&&e==="string"))throw new Error("Argument '"+t+"' passed to '"+r+"' must be "+n+" tensor, but got "+e+" tensor")}function A(n,e,t,r){if(r===void 0&&(r="numeric"),n instanceof It)return q0(r,n.dtype,e,t),n;var s=Ri(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),q0(r,s,e,t),n==null||!Mr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){var o=n==null?"null":n.constructor.name;throw new Error("Argument '"+e+"' passed to '"+t+"' must be a Tensor or TensorLike, but got '"+o+"'")}var a=yo(n,s);Mr(n)||Array.isArray(n)||(n=[n]);var i=s!=="string"?cy(n,s,se().getBool("DEBUG")):na(n,[],!0);return G.makeTensor(i,a,s)}function ch(n,e,t,r){if(r===void 0&&(r="numeric"),!Array.isArray(n))throw new Error("Argument "+e+" passed to "+t+" must be a `Tensor[]` or `TensorLike[]`");return n.map(function(s,o){return A(s,e+"["+o+"]",t)},r)}function WS(n,e){for(var t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function dQ(n,e,t){for(var r=n.length+e.length,s=[],o=0,a=0,i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function vn(n,e){for(var t=[],r=n.length,s=0;s<r;s++)e.indexOf(s)===-1&&t.push(n[s]);return[t,e.map(function(o){return n[o]})]}function qn(n,e){return dQ(n,e.map(function(t){return 1}),e)}function Yn(n,e,t){D(WS(e,t),function(){return n+" supports only inner-most axes for now. Got axes "+e+" and rank-"+t+" input."})}function ds(n,e){if(WS(n,e))return null;for(var t=[],r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(function(s){return t.push(s)}),t}function fy(n){return n.map(function(e,t){return[t,e]}).sort(function(e,t){return e[1]-t[1]}).map(function(e){return e[0]})}function ps(n,e){for(var t=[],r=e-n;r<e;++r)t.push(r);return t}function pQ(n,e){var t=n[0].length;n.forEach(function(s,o){D(s.length===t,function(){return"Error in concat"+t+"D: rank of tensors["+o+"] must be the same as the rank of the rest ("+t+")"})}),D(e>=0&&e<t,function(){return"Error in concat"+t+"D: axis must be between 0 and "+(t-1)+"."});var r=n[0];n.forEach(function(s,o){for(var a=0;a<t;a++)D(a===e||s[a]===r[a],function(){return"Error in concat"+t+"D: Shape of tensors["+o+"] ("+s+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+o+"."})})}function ci(n,e){for(var t=n[0].slice(),r=1;r<n.length;r++)t[e]+=n[r][e];return t}function V(n){var e=Object.keys(n);if(e.length!==1)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");var t=e[0],r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1));var s=function(){for(var o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];G.startScope(t);try{var i=r.apply(void 0,o);return i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),G.endScope(i),i}catch(u){throw G.endScope(null),u}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}Me.registerFlag("HAS_WEBGL",function(){return Me.getNumber("WEBGL_VERSION")>0}),Me.registerFlag("WEBGL_VERSION",function(){return j0(2)?2:j0(1)?1:0}),Me.registerFlag("WEBGL_BUFFER_SUPPORTED",function(){return Me.get("WEBGL_VERSION")===2}),Me.registerFlag("WEBGL_CPU_FORWARD",function(){return!0}),Me.registerFlag("WEBGL_FORCE_F16_TEXTURES",function(){return!1}),Me.registerFlag("WEBGL_PACK",function(){return Me.getBool("HAS_WEBGL")}),Me.registerFlag("WEBGL_PACK_NORMALIZATION",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_CLIP",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_DEPTHWISECONV",function(){return!1}),Me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_PACK_REDUCE",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_LAZILY_UNPACK",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_CONV_IM2COL",function(){return Me.getBool("WEBGL_PACK")}),Me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",function(){return oQ(Me.getNumber("WEBGL_VERSION"))}),Me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",function(){return aQ(Me.getNumber("WEBGL_VERSION"))}),Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",function(){var n=Me.getNumber("WEBGL_VERSION");return n===0?0:iQ(n)}),Me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",function(){return Me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(n=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))));var n}),Me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",function(){return uQ(Me.getNumber("WEBGL_VERSION"))}),Me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",function(){return!Me.getBool("WEBGL_FORCE_F16_TEXTURES")&&Me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")}),Me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",function(){return cQ(Me.getNumber("WEBGL_VERSION"))}),Me.registerFlag("WEBGL_FENCE_API_ENABLED",function(){return lQ(Me.getNumber("WEBGL_VERSION"))}),Me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",function(){return Me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0}),PS=VS;var tn=V({complex_:function(n,e){var t=A(n,"real","complex"),r=A(e,"imag","complex");return st(t.shape,r.shape,"real and imag shapes, "+t.shape+" and "+r.shape+", must match in call to tf.complex()."),G.runKernelFunc(function(s){return s.complex(t,r)},{$real:t,$imag:r})}}),Jn=V({real_:function(n){var e=A(n,"input","real");return G.runKernelFunc(function(t){return t.real(e)},{$input:e})}}),Ar=V({imag_:function(n){var e=A(n,"input","imag");return G.runKernelFunc(function(t){return t.imag(e)},{$input:e})}});function nn(n,e,t){return vo(n,e,yo(n,t),t)}function vo(n,e,t,r){if(r==null&&(r=Ri(n)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Mr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){hy(e);var s=be(e),o=be(t);D(s===o,function(){return"Based on the provided shape, ["+e+"], the tensor should have "+s+" values but has "+o});for(var a=0;a<t.length;++a){var i=t[a],u=a!==t.length-1||i!==be(e.slice(a));D(t[a]===e[a]||!u,function(){return"Error creating a new Tensor. Inferred shape ("+t+") does not match the provided shape ("+e+"). "})}}return Mr(n)||Array.isArray(n)||(n=[n]),e=e||t,n=r!=="string"?cy(n,r,se().getBool("DEBUG")):na(n,[],!0),G.makeTensor(n,e,r)}function ve(n,e){if((Mr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Mr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vo(n,[],[],e)}function Es(n,e){ya(n);var t=yo(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vo(n,null,t,e)}function zo(n,e,t){if(ya(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");var r=yo(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vo(n,e,r,t)}function US(n,e,t){if(ya(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");var r=yo(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vo(n,e,r,t)}function No(n,e,t){if(ya(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");var r=yo(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vo(n,e,r,t)}function fQ(n,e,t){if(ya(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");var r=yo(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return vo(n,e,r,t)}function mQ(n,e,t){if(ya(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");var r=yo(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return vo(n,e=e||r,r,t)}function gQ(n,e,t,r){return e===void 0&&(e=!0),G.makeVariable(n,e,t,r)}function va(n,e){if(e===void 0&&(e="float32"),e==="complex64"){var t=va(n,"float32"),r=Ct(n,"float32");return tn(t,r)}var s=ly(be(n),e);return G.makeTensor(s,n,e)}function Ct(n,e){if(e===void 0&&(e="float32"),e==="complex64"){var t=Ct(n,"float32"),r=Ct(n,"float32");return tn(t,r)}var s=$i(be(n),e);return G.makeTensor(s,n,e)}function Jd(n,e,t){return G.runKernelFunc(function(r){return r.fill(n,e,t)},{})}function GS(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");return G.runKernelFunc(function(r){return r.linspace(n,e,t)},{})}function Su(n,e,t,r){if(t===void 0&&(t=1),r===void 0&&(r="float32"),t===0)throw new Error("Cannot have a step of zero");if(n===e||n<e&&t<0||e<n&&t>1)return Ct([0],r);var s=$i(Math.abs(Math.ceil((e-n)/t)),r);e<n&&t===1&&(t=-1),s[0]=n;for(var o=1;o<s.length;o++)s[o]=s[o-1]+t;return Es(s,r)}var my=V({onesLike_:function(n){var e=A(n,"x","onesLike");if(e.dtype==="complex64"){var t=my(Jn(e)),r=Ze(Ar(e));return tn(t,r)}return G.runKernelFunc(function(s){return s.onesLike(e)},{x:e},function(s,o){return{x:function(){return Ze(s)}}},"OnesLike")}}),Ze=V({zerosLike_:function(n){var e=A(n,"x","zerosLike");return G.runKernelFunc(function(t){return t.zerosLike(e)},{x:e},function(t,r){return{x:function(){return Ze(t)}}},"ZerosLike")}}),wr=V({concat_:function(n,e){e===void 0&&(e=0),D(n.length>=1,function(){return"Pass at least one tensor to concat"});var t=ch(n,"tensors","concat");t[0].dtype==="complex64"&&t.forEach(function(i){if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype `+i.dtype+". ")}),e=Gt(e,t[0].shape)[0];var r=ci(t.map(function(i){return i.shape}),e);if(be(r)===0)return nn([],r);if((t=t.filter(function(i){return i.size>0})).length===1)return t[0];var s=t.map(function(i){return i.shape});pQ(s,e);var o=t,a={axis:e};return G.runKernelFunc(function(i){return i.concat(t,e)},o,function(i){var u=s.map(function(c){return c[e]});return ep(i,u,e).map(function(c){return function(){return c}})},"Concat",a)}}),xQ=V({concat1d_:function(n){return wr(n,0)}}),yQ=V({concat2d_:function(n,e){return wr(n,e)}}),vQ=V({concat3d_:function(n,e){return wr(n,e)}}),bQ=V({concat4d_:function(n,e){return wr(n,e)}}),ep=V({split_:function(n,e,t){t===void 0&&(t=0);var r,s=A(n,"x","split");return t=Gt(t,s.shape)[0],typeof e=="number"?(D(s.shape[t]%e==0,function(){return"Number of splits must evenly divide the axis."}),r=new Array(e).fill(s.shape[t]/e)):(D(s.shape[t]===e.reduce(function(o,a){return o+a}),function(){return"The sum of sizes must match the size of the axis dimension."}),r=e),G.runKernelFunc(function(o){return o.split(s,r,t)},{$x:s},function(o){return{$x:function(){return wr(o,t)}}})}});function Pe(n,e,t){return e===void 0&&(e="float32"),e=e||"float32",hy(n),new Iu(n,e,t)}function wQ(n,e){e===void 0&&(e=!1),console.log(n.toString(e))}var gy=V({batchToSpaceND_:function(n,e,t){var r=A(n,"x","batchToSpaceND"),s=e.reduce(function(o,a){return o*a});return D(r.rank>=1+e.length,function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+e.length}),D(t.length===e.length,function(){return"crops.length is "+t.length+" but should be equal to blockShape.length  "+e.length}),D(r.shape[0]%s==0,function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+e.join(" * ")+" === "+s}),G.runKernelFunc(function(o){return o.batchToSpaceND(r,e,t)},{$x:r},function(o){return{$x:function(){return o.spaceToBatchND(e,t)}}})}}),HS=V({cast_:function(n,e){var t=A(n,"x","cast");if(!AS(e))throw new Error("Failed to cast to unknown dtype "+e);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");var r={dtype:e};return G.runKernelFunc(function(s){return s.cast(t,e)},{x:t},function(s){return{x:function(){return s.clone()}}},"Cast",r)}}),CQ=V({cumsum_:function(n,e,t,r){e===void 0&&(e=0),t===void 0&&(t=!1),r===void 0&&(r=!1);var s=A(n,"x","cumsum"),o=ds([e|=0],s.rank),a=s;o!=null&&(a=s.transpose(o));var i=ps(1,s.rank)[0],u=G.runKernelFunc(function(c){return c.cumsum(a,i,t,r)},{permutedX:a},function(c){return{permutedX:function(){return c.cumsum(e,t,!r)}}});return o!=null&&(u=u.transpose(o)),u}}),jS=V({depthToSpace_:function(n,e,t){t===void 0&&(t="NHWC");var r=A(n,"x","depthToSpace"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];return D(s*e>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+s+" and "+e+`  for depthToSpace with input shape
      `+r.shape}),D(o*e>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+o+" and "+e+` for depthToSpace with input shape
          `+r.shape}),D(a%(e*e)==0,function(){return"Dimension size must be evenly divisible by "+e*e+" but is "+a+" for depthToSpace with input shape "+r.shape}),G.runKernelFunc(function(i){return i.depthToSpace(r,e,t)},{$x:r})}}),xs=V({expandDims_:function(n,e){e===void 0&&(e=0);var t=A(n,"x","expandDims",null);D(e<=t.rank,function(){return"Axis must be <= rank of the tensor"});var r=t.shape.slice();return e<0&&(D(-(t.rank+1)<=e,function(){return"Axis must be in the interval ["+-(t.rank+1)+", "+t.rank+"]"}),e=t.rank+e+1),r.splice(e,0,1),Yr(t,r)}}),Yr=V({reshape_:function(n,e){var t=A(n,"x","reshape",null);e=RS(e,t.size),D(t.size===be(e),function(){return"new shape and old shape must have the same number of elements."});var r={shape:e};return G.runKernelFunc(function(s){return s.reshape(t,e)},{x:t},function(s){return{x:function(){return s.reshape(t.shape)}}},"Reshape",r)}}),xy=V({spaceToBatchND_:function(n,e,t){var r=A(n,"x","spaceToBatchND");return D(r.rank>=1+e.length,function(){return"input rank "+r.rank+" should be > than [blockShape] "+e.length}),D(t.length===e.length,function(){return"paddings.shape[0] "+t.length+" must be equal to [blockShape] "+e.length}),D(r.shape.reduce(function(s,o,a){return a>0&&a<=e.length?s&&(o+t[a-1][0]+t[a-1][1])%e[a-1]==0:s},!0),function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+t.toString()+" must be divisible by blockShapes "+e.toString()}),G.runKernelFunc(function(s){return s.spaceToBatchND(r,e,t)},{$x:r},function(s){return{$x:function(){return s.batchToSpaceND(e,t)}}})}}),yy=V({squeeze_:function(n,e){var t=A(n,"x","squeeze");return Yr(t,zs(t.shape,e).newShape)}}),Rs=V({stack_:function(n,e){e===void 0&&(e=0);var t=ch(n,"tensors","stack");if(D(t.length>=1,function(){return"Pass at least one tensor to tf.stack"}),t.length===1)return t[0].expandDims(e);var r=t[0].rank,s=t[0].shape,o=t[0].dtype;D(e<=r,function(){return"Axis must be <= rank of the tensor"}),t.forEach(function(i){st(s,i.shape,"All tensors passed to stack must have matching shapes")}),t.forEach(function(i){D(o===i.dtype,function(){return"All tensors passed to stack must have matching dtypes"})});var a=t.map(function(i){return i.expandDims(e)});return wr(a,e)}}),Kc=V({unstack_:function(n,e){e===void 0&&(e=0),e=e||0;var t=A(n,"x","unstack");D(e>=-t.shape.length&&e<t.shape.length,function(){return"Axis = "+e+" is not in [-"+t.shape.length+", "+t.shape.length+")"}),e<0&&(e+=t.shape.length);var r={axis:e};return G.runKernelFunc(function(s){return s.unstack(t,e)},{x:t},function(s){return{x:function(){return Rs(s,e)}}},"Unpack",r)}}),qS=function(n,e){return ke(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l,h;return Se(this,function(d){switch(d.label){case 0:return t=A(n,"x","setdiff1d"),r=A(e,"y","setdiff1d"),D(t.dtype===r.dtype,function(){return"x and y should have the same dtype, but got x ("+t.dtype+") and y ("+r.dtype+")."}),D(t.rank===1,function(){return"x should be 1D tensor, but got x ("+t.shape+")."}),D(r.rank===1,function(){return"y should be 1D tensor, but got y ("+r.shape+")."}),[4,t.data()];case 1:return s=d.sent(),[4,r.data()];case 2:for(o=d.sent(),a=new Set(o),i=0,l=0;l<s.length;l++)a.has(s[l])||i++;for(u=new Iu([i],t.dtype),c=new Iu([i],"int32"),l=0,h=0;l<s.length;l++)a.has(s[l])||(u.values[h]=s[l],c.values[h]=l,h++);return[2,[u.toTensor(),c.toTensor()]]}})})};function lh(n,e,t,r){r===void 0&&(r=!0);var s=[];if(r)(s=s.concat(e.slice(0))).push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);for(var o=e.length,a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function hh(n,e,t){t===void 0&&(t=!0);var r=[];if(t){r.push(e);for(var s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{var o=[],a=[];for(s=1;s<n;++s)s>=2*e+1||s%2==1?a.push(s):o.push(s);r.push.apply(r,o),r.push(0),r.push.apply(r,a)}return r}function dh(n,e,t,r){r===void 0&&(r=!0);var s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(var o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function KS(n,e){for(var t=[0],r=0;r<e;++r)t.push(n[r][0]);return t}function XS(n,e,t){for(var r=n.slice(0,1),s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}var YS="Add",tp="Div",np="SquaredDifference",QS="BroadcastTo",ZS="OneHot",JS="Identity",eN="Tile",tN="PadV2",$s=V({add_:function(n,e){var t,r=A(n,"a","add"),s=A(e,"b","add");t=kt(r,s),r=t[0],s=t[1];var o={a:r,b:s};return G.runKernelFunc(function(a,i){var u=a.add(r,s);return i([r,s]),u},o,null,YS)}});function Gs(n,e){for(var t=n.length,r=[],s=0;s<t;s++){var o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Xt(n,e){for(var t=[],r=0;r<e.length;r++){var s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function qe(n,e){for(var t=[],r=Math.max(n.length,e.length),s=0;s<r;s++){var o=n[n.length-s-1];o==null&&(o=1);var a=e[e.length-s-1];if(a==null&&(a=1),o===1)t.unshift(a);else if(a===1)t.unshift(o);else{if(o!==a)throw Error("Operands could not be broadcast together with shapes "+n+" and "+e+".");t.unshift(o)}}return t}var nN=V({abs_:function(n){var e=A(n,"x","abs");return e.dtype==="complex64"?G.runKernelFunc(function(t){return t.complexAbs(e)},{$x:e}):G.runKernelFunc(function(t,r){var s=t.abs(e);return r([e]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mul(s.toFloat().step(-1))}}},"Abs")}}),rN=V({acos_:function(n){var e=A(n,"x","acos");return G.runKernelFunc(function(t,r){var s=t.acos(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ve(1).sub(s.toFloat().square()).sqrt()).neg()}}})}}),sN=V({acosh_:function(n){var e=A(n,"x","acosh");return G.runKernelFunc(function(t,r){var s=t.acosh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(s.toFloat().square().sub(1).sqrt())}}})}}),oN=V({asin_:function(n){var e=A(n,"x","asin");return G.runKernelFunc(function(t,r){var s=t.asin(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ve(1).sub(s.toFloat().square()).sqrt())}}})}}),aN=V({asinh_:function(n){var e=A(n,"x","asinh");return G.runKernelFunc(function(t,r){var s=t.asinh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ve(1).add(s.toFloat().square()).sqrt())}}})}}),iN=V({atan_:function(n){var e=A(n,"x","atan");return G.runKernelFunc(function(t,r){var s=t.atan(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.toFloat().square().add(1))}}})}}),uN=V({atanh_:function(n){var e=A(n,"x","atanh");return G.runKernelFunc(function(t,r){var s=t.atanh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(ve(1).sub(s.toFloat().square()))}}})}}),cN=V({ceil_:function(n){var e=A(n,"x","ceil");return G.runKernelFunc(function(t){return t.ceil(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),lN=V({clipByValue_:function(n,e,t){var r=A(n,"x","clipByValue");D(e<=t,function(){return"Error in clip: min ("+e+") must be less than or equal to max ("+t+")."});var s=[r],o={min:e,max:t};return G.runKernelFunc(function(a,i){var u=a.clip(r,e,t);return i([r]),u},{x:r},function(a,i){var u=i[0];return{x:function(){return a.where(u.greaterEqual(e).logicalAnd(u.lessEqual(t)),Ze(a))}}},"ClipByValue",o,s)}}),hN=V({cos_:function(n){var e=A(n,"x","cos"),t=[e];return G.runKernelFunc(function(r,s){var o=r.cos(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return o.toFloat().sin().neg().mul(r)}}},"Cos",{},t)}}),dN=V({cosh_:function(n){var e=A(n,"x","cosh");return G.runKernelFunc(function(t,r){var s=t.cosh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return s.toFloat().sinh().mulStrict(t)}}})}}),pN=V({erf_:function(n){var e=A(n,"x","erf");return D(e.dtype==="int32"||e.dtype==="float32",function(){return"Input dtype must be `int32` or `float32`."}),e.dtype==="int32"&&(e=e.toFloat()),G.runKernelFunc(function(t,r){var s=t.erf(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),fN=V({exp_:function(n){var e=A(n,"x","exp");return G.runKernelFunc(function(t,r){var s=t.exp(e);return r([s]),s},{x:e},function(t,r){return{x:function(){return t.mulStrict(r[0])}}},"Exp",{},[],[!0])}}),mN=V({expm1_:function(n){var e=A(n,"x","expm1");return G.runKernelFunc(function(t,r){var s=t.expm1(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.exp())}}})}}),gN=V({floor_:function(n){var e=A(n,"x","floor");return G.runKernelFunc(function(t){return t.floor(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),xN=V({log_:function(n){var e=A(n,"x","log"),t=[e];return G.runKernelFunc(function(r,s){var o=r.log(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return r.div(o.toFloat())}}},"Log",{},t)}}),yN=V({log1p_:function(n){var e=A(n,"x","log1p");return G.runKernelFunc(function(t,r){var s=t.log1p(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.add(1))}}})}}),IQ=V({logSigmoid_:function(n){var e=A(n,"x","logSigmoid");return G.runKernelFunc(function(t,r){var s=t.softplus(e.neg()).neg();return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.neg().sigmoid())}}})}}),rp=V({neg_:function(n){var e=A(n,"x","neg"),t=[e];return G.runKernelFunc(function(r){return r.neg(e)},{x:e},function(r){return{x:function(){return r.neg()}}},"Neg",{},t)}}),vN=V({reciprocal_:function(n){var e=A(n,"x","reciprocal");return G.runKernelFunc(function(t,r){var s=t.reciprocal(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.square().neg())}}})}}),bN=V({round_:function(n){var e=A(n,"x","round");return G.runKernelFunc(function(t){return t.round(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),vy=V({rsqrt_:function(n){var e=A(n,"x","rsqrt"),t=[e];return G.runKernelFunc(function(r,s){var o=r.rsqrt(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return r.div(o.pow(1.5).mul(2)).neg()}}},"Rsqrt",{},t)}}),wN=V({sigmoid_:function(n){var e=A(n,"x","sigmoid");return G.runKernelFunc(function(t,r){var s=t.sigmoid(e);return r([s]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mul(s.mul(ve(1).sub(s)))}}},"Sigmoid")}}),CN=V({sign_:function(n){var e=A(n,"x","sign");return G.runKernelFunc(function(t){return t.sign(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),kQ=V({isNaN_:function(n){var e=A(n,"x","isNaN");return G.runKernelFunc(function(t){return t.isNaN(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),SQ=V({isInf_:function(n){var e=A(n,"x","isInf");return G.runKernelFunc(function(t){return t.isInf(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),NQ=V({isFinite_:function(n){var e=A(n,"x","isFinite");return G.runKernelFunc(function(t){return t.isFinite(e)},{$x:e},function(t){return{$x:function(){return Ze(t)}}})}}),IN=V({sin_:function(n){var e=A(n,"x","sin"),t=[e];return G.runKernelFunc(function(r,s){var o=r.sin(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return o.toFloat().cos().mul(r)}}},"Sin",{},t)}}),kN=V({sinh_:function(n){var e=A(n,"x","sinh");return G.runKernelFunc(function(t,r){var s=t.sinh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return s.toFloat().cosh().mulStrict(t)}}})}}),SN=V({softplus_:function(n){var e=A(n,"x","softplus");return G.runKernelFunc(function(t,r){var s=t.softplus(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.sigmoid())}}})}}),NN=V({sqrt_:function(n){var e=A(n,"x","sqrt");return G.runKernelFunc(function(t,r){var s=t.sqrt(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.toFloat().sqrt().mul(2))}}})}}),TQ=V({step_:function(n,e){e===void 0&&(e=0);var t=A(n,"x","step");return G.runKernelFunc(function(r){return r.step(t,e)},{$x:t},function(r){return{$x:function(){return Ze(r)}}})}}),TN=V({tan_:function(n){var e=A(n,"x","tan");return G.runKernelFunc(function(t,r){var s=t.tan(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.cos().square())}}})}}),EN=V({tanh_:function(n){var e=A(n,"x","tanh");return G.runKernelFunc(function(t,r){var s=t.tanh(e);return r([s]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return ve(1).sub(s.square()).mulStrict(t)}}},"Tanh",{},null,[!0])}}),EQ=V({addStrict_:function(n,e){var t=A(n,"a","addStrict"),r=A(e,"b","addStrict");return st(t.shape,r.shape,"Error in addStrict: "),t.add(r)}}),RN=V({atan2_:function(n,e){var t,r=A(n,"a","atan2"),s=A(e,"b","atan2");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return G.runKernelFunc(function(a,i){var u=a.atan2(r,s);return i([r,s]),u},{$a:r,$b:s},function(a,i){var u=i[0],c=i[1];return{$a:function(){var l=$s(u.square(),c.square()),h=a.mul(c.div(l)),d=Xt(u.shape,o);return d.length>0&&(h=h.sum(d)),h.reshape(u.shape)},$b:function(){var l=$s(u.square(),c.square()),h=rp(a.mul(u.div(l))),d=Xt(c.shape,o);return d.length>0&&(h=h.sum(d)),h.reshape(c.shape)}}})}}),RQ=V({divStrict_:function(n,e){var t=A(n,"a","div"),r=A(e,"b","div");return st(t.shape,r.shape,"Error in divideStrict: "),t.div(r)}}),by=V({floorDiv_:function(n,e){var t,r=A(n,"a","floorDiv"),s=A(e,"b","floorDiv");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return G.runKernelFunc(function(a,i){var u=a.floorDiv(r,s);return i([r,s]),u},{a:r,b:s},function(a,i){var u=i[0],c=i[1];return{a:function(){var l=a.div(c.toFloat()),h=Xt(u.shape,o);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=a.mul(u.toFloat()),h=Xt(c.shape,o);h.length>0&&(l=l.sum(h).reshape(c.shape));var d=c.square();return l.div(d.toFloat()).neg()}}},"FloorDiv")}}),sp=V({maximum_:function(n,e){var t,r=A(n,"a","maximum"),s=A(e,"b","maximum");return t=kt(r,s),r=t[0],s=t[1],r.dtype==="bool"&&(r=r.toInt(),s=s.toInt()),qe(r.shape,s.shape),G.runKernelFunc(function(o,a){var i=o.maximum(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return o.mul(i.greaterEqual(u).toFloat())},b:function(){return o.mul(i.less(u).toFloat())}}},"Maximum")}}),$Q=V({maximumStrict_:function(n,e){var t=A(n,"a","maximumStrict"),r=A(e,"b","maximumStrict");return st(t.shape,r.shape,"Error in maximumStrict: "),t.maximum(r)}}),wy=V({minimum_:function(n,e){var t,r=A(n,"a","minimum"),s=A(e,"b","minimum");return t=kt(r,s),r=t[0],s=t[1],r.dtype==="bool"&&(r=r.toInt(),s=s.toInt()),qe(r.shape,s.shape),G.runKernelFunc(function(o,a){var i=o.minimum(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return o.mul(i.lessEqual(u).toFloat())},b:function(){return o.mul(i.greater(u).toFloat())}}},"Minimum")}}),AQ=V({minimumStrict_:function(n,e){var t=A(n,"a","minimumStrict"),r=A(e,"b","minimumStrict");return st(t.shape,r.shape,"Error in minimumStrict: "),t.minimum(r)}}),$N=V({mod_:function(n,e){var t,r=A(n,"a","mod"),s=A(e,"b","mod");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return G.runKernelFunc(function(a,i){var u=a.mod(r,s);return i([r,s]),u},{$a:r,$b:s},function(a,i){var u=i[0],c=i[1];return{$a:function(){var l=Xt(u.shape,o);return l.length>0?a.sum(l).reshape(u.shape):a},$b:function(){var l=a.mul(u.div(c).floor().neg()),h=Xt(c.shape,o);return h.length>0?l.sum(h).reshape(c.shape):l}}})}}),DQ=V({modStrict_:function(n,e){var t=A(n,"a","modStrict"),r=A(e,"b","modStrict");return st(t.shape,r.shape,"Error in modStrict: "),t.mod(r)}}),Ot=V({mul_:function(n,e){var t,r=A(n,"a","mul"),s=A(e,"b","mul");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return G.runKernelFunc(function(a,i){var u=a.multiply(r,s);return i([r,s]),u},{a:r,b:s},function(a,i){var u=i[0],c=i[1];return{a:function(){var l=a.mul(c.toFloat()),h=Xt(u.shape,o);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=a.mul(u.toFloat()),h=Xt(c.shape,o);return h.length>0?l.sum(h).reshape(c.shape):l}}},"Mul")}}),FQ=V({mulStrict_:function(n,e){var t=A(n,"a","mul"),r=A(e,"b","mul");return st(t.shape,r.shape,"Error in multiplyStrict: "),t.mul(r)}}),Nu=V({pow_:function(n,e){var t,r=A(n,"base","pow"),s=A(e,"exp","pow");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape),a=[r,s];return G.runKernelFunc(function(i,u){var c=i.pow(r,s);return u([r,s,c]),c},{a:r,b:s},function(i,u){var c=u[0],l=u[1],h=u[2];return{a:function(){var d=l.toFloat(),p=i.mul(d.mul(c.pow(d.sub(ve(1))))),f=Xt(c.shape,o);return f.length>0&&(p=p.sum(f)),p.reshape(c.shape)},b:function(){var d=c.greater(0),p=c.log().where(d,Ze(c)),f=i.mul(h.mul(p)),m=Xt(l.shape,o);return m.length>0&&(f=f.sum(m)),f.reshape(l.shape)}}},"Pow",{},a,[!0])}}),OQ=V({powStrict_:function(n,e){return st(n.shape,e.shape,"Error in powStrict: "),n.pow(e)}}),_Q=V({squaredDifferenceStrict_:function(n,e){var t=A(n,"a","squaredDifferenceStrict"),r=A(e,"b","squaredDifferenceStrict");return st(t.shape,r.shape,"Error in squaredDifferenceStrict: "),t.squaredDifference(r)}}),Is=V({sub_:function(n,e){var t,r=A(n,"a","sub"),s=A(e,"b","sub");t=kt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return G.runKernelFunc(function(a){return a.subtract(r,s)},{a:r,b:s},function(a){return{a:function(){var i=a,u=Xt(r.shape,o);return u.length>0&&(i=i.sum(u)),i.reshape(r.shape)},b:function(){var i=a,u=Xt(s.shape,o);return u.length>0&&(i=i.sum(u)),i.neg().reshape(s.shape)}}},"Sub")}}),MQ=V({subStrict_:function(n,e){var t=A(n,"a","subStrict"),r=A(e,"b","subStrict");return st(t.shape,r.shape,"Error in subStrict: "),t.sub(r)}}),As=V({div_:function(n,e){var t,r=A(n,"a","div"),s=A(e,"b","div");if(t=kt(r,s),r=t[0],s=t[1],r.dtype==="int32"&&s.dtype==="int32")return by(r,s);var o={a:r,b:s};return G.runKernelFunc(function(a,i){var u=a.realDivide(r,s);return i([r,s]),u},o,null,tp,{})}});function AN(n,e){if(n.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+n.rank+".");if(e.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if(e.dtype!=="int32")throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.shape[e.rank-1]>n.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+e.shape[e.rank-1]+" vs. "+n.rank);if(n.size===0)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+n.shape+".");for(var t=e.shape,r=t[t.length-1],s=1,o=0;o<t.length-1;++o)s*=t[o];var a=n.shape,i=t.slice();i.pop();var u=1;for(o=r;o<n.rank;++o)u*=a[o],i.push(a[o]);var c=Wn(n.shape).map(function(l){return l/u}).concat([1]).slice(0,r);return[i,s,u,c]}var DN=30;function Wp(n){return n<=DN?n:rh(n,Math.floor(Math.sqrt(n)))}function LQ(n,e,t){var r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+t.shape+", indices.shape: "+e.shape+", shape: "+n+", sliceDim: "+r+", and batchDim: "+s+".";if(t.rank<s)throw new Error(o+" update.rank < "+s+". ");if(n.length<r+(t.rank-s))throw new Error(o+" Output shape length < "+(r+(t.rank-s)));if(t.rank!==s+n.length-r)throw new Error(o+" update.rank != "+(s+n.length-r));for(var a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+" updates.shape["+a+"] ("+t.shape[a]+") != indices.shape["+a+"] ("+e.shape[a]+").");for(a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+" updates.shape["+(a+s)+"] ("+t.shape[a+s]+") != shape["+(a+s)+"] ("+n[a+s]+")")}function PQ(n,e,t){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if(n.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+n.rank+".");if(e.dtype!=="int32")throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(t.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+t);if(t.length===0){if(e.size===0)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(n.size===0)throw new Error("Updates specified for empty output. updates shape: "+n.shape)}LQ(t,e,n)}function ph(n,e,t){for(var r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length,a=1,i=s;i<o;++i)a*=t[i];var u=s<1?1:s;return{sliceRank:s,numUpdates:be(e.shape)/u,sliceSize:a,strides:Wn(t.slice(0,s)).concat([1]),outputSize:be(t)}}function BQ(n,e,t){D(n.rank===e.length,function(){return"Error in slice"+n.rank+"D: Length of begin "+e+" must match the rank of the array ("+n.rank+")."}),D(n.rank===t.length,function(){return"Error in slice"+n.rank+"D: Length of size "+t+" must match the rank of the array ("+n.rank+")."});for(var r=function(o){D(e[o]+t[o]<=n.shape[o],function(){return"Error in slice"+n.rank+"D: begin["+o+"] + size["+o+"] ("+(e[o]+t[o])+") would overflow input.shape["+o+"] ("+n.shape[o]+")"})},s=0;s<n.rank;++s)r(s)}function K0(n){for(var e=[],t=0;n>0;)1&n&&e.push(t),n/=2,t++;return e}function Cy(n,e,t){for(var r=[],s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function zQ(n,e,t,r,s){var o=e[s],a=t[s]||1;(n&1<<s||o==null)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var i=r[s];return o<0&&(o+=i),o=eh(0,o,i-1)}function VQ(n,e,t,r,s){var o=e[s],a=t[s]||1;(n&1<<s||o==null)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var i=r[s];return o<0&&(o+=i),o=a>0?eh(0,o,i):eh(-1,o,i-1)}function FN(n,e,t){for(var r=t.length,s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function ON(n,e){for(var t=n.length>0?n[n.length-1]:1,r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function WQ(n,e){D(nh(n),function(){return"The f passed in variableGrads(f) must be a function"}),D(e==null||Array.isArray(e)&&e.every(function(l){return l instanceof oh}),function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"});var t=e!=null;if(!t)for(var r in e=[],G.registeredVariables)e.push(G.registeredVariables[r]);var s=t?e.filter(function(l){return!l.trainable}):null,o=e.length;D((e=e.filter(function(l){return l.trainable})).length>0,function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+o+" variables is trainable."});var a=G.gradients(n,e,null,!0),i=a.value,u=a.grads;D(u.some(function(l){return l!=null}),function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."}),D(i.rank===0,function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+i.rank+" tensor"});var c={};return e.forEach(function(l,h){u[h]!=null&&(c[l.name]=u[h])}),s!=null&&s.forEach(function(l){return c[l.name]=null}),{value:i,grads:c}}function op(n){return G.customGrad(n)}var ap=V({softmax_:function(n,e){e===void 0&&(e=-1);var t=A(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+t.rank+" and dim was "+e);return G.runKernelFunc(function(r,s){var o=r.softmax(t,e);return s([o]),o},{logits:t},function(r,s){var o=s[0],a=r.mul(o);return{logits:function(){return a.sub(a.sum([e],!0).mul(o))}}},"Softmax",{dim:e},[],[!0])}}),_N=V({logSoftmax_:function(n,e){e===void 0&&(e=-1);var t=A(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+t.rank+" and axis was "+e);return op(function(r,s){var o=r.max(e,!0),a=r.sub(o),i=a.toFloat().sub(a.exp().sum(e,!0).log());return s([i]),{value:i,gradFunc:function(u,c){var l=c[0].exp();return u.sub(u.sum(e,!0).mul(l))}}})(t)}}),hr=V({transpose_:function(n,e){var t=A(n,"x","transpose");if(e==null&&(e=t.shape.map(function(s,o){return o}).reverse()),D(t.rank===e.length,function(){return"Error in transpose: rank of input "+t.rank+" must match length of perm "+e+"."}),e.forEach(function(s){D(s>=0&&s<t.rank,function(){return"All entries in 'perm' must be between 0 and "+(t.rank-1)+" but got "+e})}),t.rank<=1)return t.clone();var r={perm:e};return G.runKernelFunc(function(s){return s.transpose(t,e)},{x:t},null,"Transpose",r)}}),MN=function(){function n(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return n.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},n.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},n.prototype.has=function(e){return this.data.has(e)},n.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},n.prototype.numDataIds=function(){return this.dataIdsCount},n}(),LN=function(){function n(){}return n.prototype.time=function(e){return J("time")},n.prototype.read=function(e){return J("read")},n.prototype.readSync=function(e){return J("readSync")},n.prototype.numDataIds=function(){return J("numDataIds")},n.prototype.disposeData=function(e){return J("disposeData")},n.prototype.write=function(e,t,r){return J("write")},n.prototype.move=function(e,t,r,s){return J("move")},n.prototype.memory=function(){return J("memory")},n.prototype.floatPrecision=function(){return J("floatPrecision")},n.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},n.prototype.batchMatMul=function(e,t,r,s){return J("batchMatMul")},n.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,J("fusedBatchMatMul")},n.prototype.slice=function(e,t,r){return J("slice")},n.prototype.stridedSlice=function(e,t,r,s){return J("stridedSlice")},n.prototype.unstack=function(e,t){return J("unstack")},n.prototype.reverse=function(e,t){return J("reverse")},n.prototype.concat=function(e,t){return J("concat")},n.prototype.neg=function(e){return J("neg")},n.prototype.add=function(e,t){return J("add")},n.prototype.addN=function(e){return J("addN")},n.prototype.subtract=function(e,t){return J("subtract")},n.prototype.multiply=function(e,t){return J("multiply")},n.prototype.realDivide=function(e,t){return J("realDivide")},n.prototype.floorDiv=function(e,t){return J("floorDiv")},n.prototype.sum=function(e,t){return J("sum")},n.prototype.prod=function(e,t){return J("prod")},n.prototype.unsortedSegmentSum=function(e,t,r){return J("unsortedSegmentSum")},n.prototype.argMin=function(e,t){return J("argMin")},n.prototype.argMax=function(e,t){return J("argMax")},n.prototype.equal=function(e,t){return J("equal")},n.prototype.notEqual=function(e,t){return J("notEqual")},n.prototype.less=function(e,t){return J("less")},n.prototype.lessEqual=function(e,t){return J("lessEqual")},n.prototype.greater=function(e,t){return J("greater")},n.prototype.greaterEqual=function(e,t){return J("greaterEqual")},n.prototype.logicalNot=function(e){return J("logicalNot")},n.prototype.logicalAnd=function(e,t){return J("logicalAnd")},n.prototype.logicalOr=function(e,t){return J("logicalOr")},n.prototype.where=function(e){return J("where")},n.prototype.select=function(e,t,r){return J("select")},n.prototype.topk=function(e,t,r){return J("topk")},n.prototype.min=function(e,t){return J("min")},n.prototype.minimum=function(e,t){return J("minimum")},n.prototype.mod=function(e,t){return J("mod")},n.prototype.max=function(e,t){return J("max")},n.prototype.maximum=function(e,t){return J("maximum")},n.prototype.all=function(e,t){return J("all")},n.prototype.any=function(e,t){return J("any")},n.prototype.squaredDifference=function(e,t){return J("squaredDifference")},n.prototype.ceil=function(e){return J("ceil")},n.prototype.floor=function(e){return J("floor")},n.prototype.round=function(e){return J("round")},n.prototype.sign=function(e){return J("sign")},n.prototype.isNaN=function(e){return J("isNaN")},n.prototype.isInf=function(e){return J("isInf")},n.prototype.isFinite=function(e){return J("isFinite")},n.prototype.pow=function(e,t){return J("pow")},n.prototype.exp=function(e){return J("exp")},n.prototype.expm1=function(e){return J("expm1")},n.prototype.softmax=function(e,t){return J("softmax")},n.prototype.log=function(e){return J("log")},n.prototype.log1p=function(e){return J("log1p")},n.prototype.sqrt=function(e){return J("sqrt")},n.prototype.rsqrt=function(e){return J("rsqrt")},n.prototype.square=function(e){return J("square")},n.prototype.reciprocal=function(e){return J("reciprocal")},n.prototype.relu=function(e){return J("relu")},n.prototype.relu6=function(e){return J("relu6")},n.prototype.prelu=function(e,t){return J("prelu")},n.prototype.elu=function(e){return J("elu")},n.prototype.eluDer=function(e,t){return J("eluDer")},n.prototype.selu=function(e){return J("selu")},n.prototype.int=function(e){return J("int")},n.prototype.clip=function(e,t,r){return J("clip")},n.prototype.abs=function(e){return J("abs")},n.prototype.complexAbs=function(e){return J("complexAbs")},n.prototype.sigmoid=function(e){return J("sigmoid")},n.prototype.softplus=function(e){return J("softplus")},n.prototype.sin=function(e){return J("sin")},n.prototype.cos=function(e){return J("cos")},n.prototype.tan=function(e){return J("tan")},n.prototype.asin=function(e){return J("asin")},n.prototype.acos=function(e){return J("acos")},n.prototype.atan=function(e){return J("atan")},n.prototype.atan2=function(e,t){return J("atan2")},n.prototype.sinh=function(e){return J("sinh")},n.prototype.cosh=function(e){return J("cosh")},n.prototype.tanh=function(e){return J("tanh")},n.prototype.asinh=function(e){return J("asinh")},n.prototype.acosh=function(e){return J("acosh")},n.prototype.atanh=function(e){return J("atanh")},n.prototype.erf=function(e){return J("erf")},n.prototype.step=function(e,t){return J("step")},n.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,J("fusedConv2d")},n.prototype.conv2d=function(e,t,r){return J("conv2d")},n.prototype.conv2dDerInput=function(e,t,r){return J("conv2dDerInput")},n.prototype.conv2dDerFilter=function(e,t,r){return J("conv2dDerFilter")},n.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,J("fusedDepthwiseConv2D")},n.prototype.depthwiseConv2D=function(e,t,r){return J("depthwiseConv2D")},n.prototype.depthwiseConv2DDerInput=function(e,t,r){return J("depthwiseConv2DDerInput")},n.prototype.depthwiseConv2DDerFilter=function(e,t,r){return J("depthwiseConv2DDerFilter")},n.prototype.conv3d=function(e,t,r){return J("conv3d")},n.prototype.conv3dDerInput=function(e,t,r){return J("conv3dDerInput")},n.prototype.conv3dDerFilter=function(e,t,r){return J("conv3dDerFilter")},n.prototype.maxPool=function(e,t){return J("maxPool")},n.prototype.maxPoolBackprop=function(e,t,r,s){return J("maxPoolBackprop")},n.prototype.avgPool=function(e,t){return J("avgPool")},n.prototype.avgPoolBackprop=function(e,t,r){return J("avgPoolBackprop")},n.prototype.avgPool3d=function(e,t){return J("avgPool3d")},n.prototype.avgPool3dBackprop=function(e,t,r){return J("avgPool3dBackprop")},n.prototype.maxPool3d=function(e,t){return J("maxPool3d")},n.prototype.maxPool3dBackprop=function(e,t,r,s){return J("maxPool3dBackprop")},n.prototype.reshape=function(e,t){return J("reshape")},n.prototype.cast=function(e,t){return J("cast")},n.prototype.tile=function(e,t){return J("tile")},n.prototype.pad=function(e,t,r){return J("pad")},n.prototype.transpose=function(e,t){return J("transpose")},n.prototype.gather=function(e,t,r){return J("gather")},n.prototype.gatherND=function(e,t){return J("gatherND")},n.prototype.scatterND=function(e,t,r){return J("scatterND")},n.prototype.batchToSpaceND=function(e,t,r){return J("batchToSpaceND")},n.prototype.spaceToBatchND=function(e,t,r){return J("spaceToBatchND")},n.prototype.resizeBilinear=function(e,t,r,s){return J("resizeBilinear")},n.prototype.resizeBilinearBackprop=function(e,t,r){return J("resizeBilinearBackprop")},n.prototype.resizeNearestNeighbor=function(e,t,r,s){return J("resizeNearestNeighbor")},n.prototype.resizeNearestNeighborBackprop=function(e,t,r){return J("resizeNearestNeighborBackprop")},n.prototype.batchNormalization=function(e,t,r,s,o,a){return J("batchNormalization")},n.prototype.localResponseNormalization4D=function(e,t,r,s,o){return J("localResponseNormalization4D")},n.prototype.LRNGrad=function(e,t,r,s,o,a,i){return J("LRNGrad")},n.prototype.multinomial=function(e,t,r,s){return J("multinomial")},n.prototype.oneHot=function(e,t,r,s){return J("oneHot")},n.prototype.cumsum=function(e,t,r,s){return J("cumsum")},n.prototype.nonMaxSuppression=function(e,t,r,s,o){return J("nonMaxSuppression")},n.prototype.fft=function(e){return J("fft")},n.prototype.ifft=function(e){return J("ifft")},n.prototype.complex=function(e,t){return J("complex")},n.prototype.real=function(e){return J("real")},n.prototype.imag=function(e){return J("imag")},n.prototype.cropAndResize=function(e,t,r,s,o,a){return J("cropAndResize")},n.prototype.depthToSpace=function(e,t,r){return J("depthToSpace")},n.prototype.split=function(e,t,r){return J("split")},n.prototype.sparseToDense=function(e,t,r,s){return J("sparseToDense")},n.prototype.diag=function(e){return J("diag")},n.prototype.fill=function(e,t,r){return J("fill")},n.prototype.onesLike=function(e){return J("onesLike")},n.prototype.zerosLike=function(e){return J("zerosLike")},n.prototype.linspace=function(e,t,r){return J("linspace")},n.prototype.dispose=function(){return J("dispose")},n}();function J(n){throw new Error("'"+n+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function sa(n,e,t,r,s,o,a){a===void 0&&(a="channelsLast");var i,u=gh(e),c=u[0],l=u[1];if(a==="channelsLast")i=[c,l,n[3],n[3]];else{if(a!=="channelsFirst")throw new Error("Unknown dataFormat "+a);i=[c,l,n[1],n[1]]}return ba(n,i,t,r,s,o,!1,a)}function fh(n,e,t,r,s,o,a){a===void 0&&(a="NDHWC");var i,u,c=Qf(e),l=c[0],h=c[1],d=c[2];if(a==="NDHWC")u="channelsLast",i=[l,h,d,n[4],n[4]];else{if(a!=="NCDHW")throw new Error("Unknown dataFormat "+a);u="channelsFirst",i=[l,h,d,n[1],n[1]]}return mh(n,i,t,r,s,!1,u,o)}function ba(n,e,t,r,s,o,a,i){a===void 0&&(a=!1),i===void 0&&(i="channelsLast");var u=[-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],d=u[3];if(i==="channelsLast")c=n[0],l=n[1],h=n[2],d=n[3];else{if(i!=="channelsFirst")throw new Error("Unknown dataFormat "+i);c=n[0],d=n[1],l=n[2],h=n[3]}var p,f=e[0],m=e[1],g=e[3],x=gh(t),y=x[0],b=x[1],v=gh(r),w=v[0],C=v[1],I=Ha(f,w),k=Ha(m,C),S=function(O,F,L,B,M,z,H,X){var Z,ee,ae;if(typeof O=="number"){Z={top:O,bottom:O,left:O,right:O,type:O===0?"VALID":"NUMBER"};var oe=function(ge,Te,Ee,Le,Fe){Le==null&&(Le=PN(ge,Te,Ee));var De=ge[0],Xe=ge[1],Ke=ou((De-Te+2*Le)/Ee+1,Fe);D(Rt(Ke),function(){return"The output # of rows ("+Ke+") must be an integer. Change the stride and/or zero pad parameters"});var wt=ou((Xe-Te+2*Le)/Ee+1,Fe);return D(Rt(wt),function(){return"The output # of columns ("+wt+") must be an integer. Change the stride and/or zero pad parameters"}),[Ke,wt]}([F,L],z,B,O,X);ee=oe[0],ae=oe[1]}else if(O==="same"){ee=Math.ceil(F/B),ae=Math.ceil(L/M);var ue=Math.max(0,(ee-1)*B+z-F),he=Math.max(0,(ae-1)*M+H-L),pe=Math.floor(ue/2),de=ue-pe,Ce=Math.floor(he/2);Z={top:pe,bottom:de,left:Ce,right:he-Ce,type:"SAME"}}else{if(O!=="valid")throw Error("Unknown padding parameter: "+O);Z={top:0,bottom:0,left:0,right:0,type:"VALID"},ee=Math.ceil((F-z+1)/B),ae=Math.ceil((L-H+1)/M)}return{padInfo:Z,outHeight:ee,outWidth:ae}}(s,l,h,y,b,I,k,o),N=S.padInfo,E=S.outHeight,R=S.outWidth,_=a?g*d:g;return i==="channelsFirst"?p=[c,_,E,R]:i==="channelsLast"&&(p=[c,E,R,_]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:h,inChannels:d,outHeight:E,outWidth:R,outChannels:_,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:k,dilationHeight:w,dilationWidth:C,inShape:n,outShape:p,filterShape:e}}function mh(n,e,t,r,s,o,a,i){o===void 0&&(o=!1),a===void 0&&(a="channelsLast");var u=[-1,-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],d=u[3],p=u[4];if(a==="channelsLast")c=n[0],l=n[1],h=n[2],d=n[3],p=n[4];else{if(a!=="channelsFirst")throw new Error("Unknown dataFormat "+a);c=n[0],p=n[1],l=n[2],h=n[3],d=n[4]}var f,m=e[0],g=e[1],x=e[2],y=e[4],b=Qf(t),v=b[0],w=b[1],C=b[2],I=Qf(r),k=I[0],S=I[1],N=I[2],E=Ha(m,k),R=Ha(g,S),_=Ha(x,N),O=function(H,X,Z,ee,ae,oe,ue,he,pe,de,Ce){var ge,Te,Ee,Le;if(typeof H=="number"){ge={top:H,bottom:H,left:H,right:H,front:H,back:H,type:H===0?"VALID":"NUMBER"};var Fe=function(en,Ht,ir,Tn,jt,fs){jt==null&&(jt=PN(en,Ht,Tn));var Oi=en[0],_i=en[1],fp=en[2],Ps=ou((Oi-Ht+2*jt)/Tn+1,fs);D(Rt(Ps),function(){return"The output # of depths ("+Ps+") must be an integer. Change the stride and/or zero pad parameters"});var Mi=ou((_i-Ht+2*jt)/Tn+1,fs);D(Rt(Mi),function(){return"The output # of rows ("+Mi+") must be an integer. Change the stride and/or zero pad parameters"});var Li=ou((fp-Ht+2*jt)/Tn+1,fs);return D(Rt(Li),function(){return"The output # of columns ("+Li+") must be an integer. Change the stride and/or zero pad parameters"}),[Ps,Mi,Li,ir]}([X,Z,ee,1],he,1,ae,H,Ce);Te=Fe[0],Ee=Fe[1],Le=Fe[2]}else if(H==="same"){Te=Math.ceil(X/ae),Ee=Math.ceil(Z/oe),Le=Math.ceil(ee/ue);var De=(Te-1)*ae+he-X,Xe=(Ee-1)*oe+pe-Z,Ke=(Le-1)*ue+de-ee,wt=Math.floor(De/2),gt=De-wt,Jt=Math.floor(Xe/2),St=Xe-Jt,cn=Math.floor(Ke/2);ge={top:Jt,bottom:St,left:cn,right:Ke-cn,front:wt,back:gt,type:"SAME"}}else{if(H!=="valid")throw Error("Unknown padding parameter: "+H);ge={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},Te=Math.ceil((X-he+1)/ae),Ee=Math.ceil((Z-pe+1)/oe),Le=Math.ceil((ee-de+1)/ue)}return{padInfo:ge,outDepth:Te,outHeight:Ee,outWidth:Le}}(s,l,h,d,v,w,C,E,R,_,i),F=O.padInfo,L=O.outDepth,B=O.outHeight,M=O.outWidth,z=o?y*p:y;return a==="channelsFirst"?f=[c,z,L,B,M]:a==="channelsLast"&&(f=[c,L,B,M,z]),{batchSize:c,dataFormat:a,inDepth:l,inHeight:h,inWidth:d,inChannels:p,outDepth:L,outHeight:B,outWidth:M,outChannels:z,padInfo:F,strideDepth:v,strideHeight:w,strideWidth:C,filterDepth:m,filterHeight:g,filterWidth:x,effectiveFilterDepth:E,effectiveFilterHeight:R,effectiveFilterWidth:_,dilationDepth:k,dilationHeight:S,dilationWidth:N,inShape:n,outShape:f,filterShape:e}}function PN(n,e,t,r){r===void 0&&(r=1);var s=Ha(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function gh(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Qf(n){return typeof n=="number"?[n,n,n]:n}function Ha(n,e){return e<=1?n:n+(n-1)*(e-1)}function ou(n,e){if(!e)return n;switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error("Unknown roundingMode "+e)}}function li(n){var e=gh(n),t=e[0],r=e[1],s=e[2];return t===1&&r===1&&s===1}function _n(n,e){return li(n)||li(e)}function Iy(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error("Unknown dataFormat "+n)}function BN(n,e,t){if(e==="complex64"){if(n.dtype==="complex64")return n.clone();var r=Ct(n.shape),s=n.toFloat(),o=t.complex(s,r);return r.dispose(),s.dispose(),o}if(!DS(n.dtype,e))return G.makeTensorFromDataId(n.dataId,n.shape,e);if(n.dtype==="complex64"){var a=t.real(n);return o=a.cast(e),a.dispose(),o}if(e==="int32")return t.int(n);if(e==="bool"){var i=ve(0,n.dtype);return o=t.notEqual(n,i),i.dispose(),o}throw new Error("Error in Cast: failed to cast "+n.dtype+" to "+e)}function Zf(n,e){return G.makeTensorFromDataId(n.dataId,e,n.dtype)}function zN(n,e,t){var r=(e-n)/(t-1),s=$i(t,"float32");s[0]=n;for(var o=1;o<s.length;o++)s[o]=s[o-1]+r;return Es(s,"float32")}function Jf(n,e){if(n.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+n.length+", imag: "+e.length+".");for(var t=new Float32Array(2*n.length),r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function X0(n,e){return{real:n[2*e],imag:n[2*e+1]}}function UQ(n,e,t,r){n[2*r]=e,n[2*r+1]=t}function GQ(n,e,t){var r=(t?2:-2)*Math.PI*(n/e);return{real:Math.cos(r),imag:Math.sin(r)}}function HQ(n,e,t){var r=function(o,a,i){return function(u,c,l){for(var h=0,d=u.length,p=0,f=!1;h<d;){var m=l(c,u[p=h+(d-h>>>1)]);m>0?h=p+1:(d=p,f=!m)}return f?h:-h-1}(o,a,i||jQ)}(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function jQ(n,e){return n>e?1:n<e?-1:0}function ky(n,e,t,r,s){return VN(n,e,t,r,s,0).selectedIndices}function Sy(n,e,t,r,s,o){var a=VN(n,e,t,r,s,o);return a.numValidOutputs.dispose(),{selectedIndices:a.selectedIndices,selectedScores:a.selectedScores}}function VN(n,e,t,r,s,o,a,i){i===void 0&&(i=!1);for(var u=Array.from(e).map(function(v,w){return{score:v,boxIndex:w,suppressBeginIndex:0}}).filter(function(v){return v.score>s}).sort(Y0),c=o>0?-.5/o:0,l=[],h=[];l.length<t&&u.length>0;){var d=u.pop(),p=d.score,f=d.boxIndex,m=d.suppressBeginIndex;if(p<s)break;for(var g=!1,x=l.length-1;x>=m;--x){var y=qQ(n,f,l[x]);if(y>=r){g=!0;break}if(d.score=d.score*KQ(r,c,y),d.score<=s)break}d.suppressBeginIndex=l.length,g||(d.score===p?(l.push(f),h.push(d.score)):d.score>s&&HQ(u,d,Y0))}var b=l.length;return i&&(l.fill(0,b),h.fill(0,b)),{selectedIndices:Es(l,"int32"),selectedScores:Es(h,"float32"),numValidOutputs:ve(b,"int32")}}function qQ(n,e,t){var r=n.subarray(4*e,4*e+4),s=n.subarray(4*t,4*t+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;var m=Math.max(o,c),g=Math.max(a,l),x=Math.min(i,h),y=Math.min(u,d),b=Math.max(x-m,0)*Math.max(y-g,0);return b/(p+f-b)}function KQ(n,e,t){var r=Math.exp(e*t*t);return t<=n?r:0}function Y0(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}function WN(n,e,t){var r=new Array(n.rank).fill(0),s=n.shape.slice();return e.map(function(o){s[t]=o;var a=n.slice(r,s);return r[t]+=o,a})}function UN(n,e){for(var t=new Array(n.rank),r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];var s=Pe(t,n.dtype);for(r=0;r<s.values.length;++r){for(var o=s.indexToLoc(r),a=new Array(n.rank),i=0;i<a.length;i++)a[i]=o[i]%n.shape[i];var u=n.locToIndex(a);s.values[r]=n.values[u]}return s.toTensor()}function GN(n,e,t,r,s){for(var o=e[e.length-1],a=[n.length/o,o],i=a[0],u=a[1],c=ra(t,i*r),l=ra("int32",i*r),h=0;h<i;h++){for(var d=h*u,p=n.subarray(d,d+u),f=[],m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort(function(v,w){return w.value-v.value});var g=h*r,x=c.subarray(g,g+r),y=l.subarray(g,g+r);for(m=0;m<r;m++)x[m]=f[m].value,y[m]=f[m].index}var b=e.slice();return b[b.length-1]=r,[nn(c,b,t),nn(l,b,"int32")]}function Ny(n,e){for(var t=[],r=0;r<e.length;r++)e[r]&&t.push(r);var s=Pe(n,"int32"),o=Pe([t.length,n.length],"int32");for(r=0;r<t.length;r++){var a=s.indexToLoc(t[r]),i=r*n.length;o.values.set(a,i)}return o.toTensor()}var XQ=function(n,e){this.outputShape=[],this.outputShape=n,this.variableNames=e.map(function(s,o){return"T"+o});var t=[];this.variableNames.forEach(function(s){t.push("float v"+s+" = get"+s+"AtOutCoords();")});var r=this.variableNames.map(function(s){return"v"+s}).join(" + ");this.userCode=`
      void main() {
        `+t.join(`
        `)+`

        float result = `+r+`;
        setOutput(result);
      }
    `},YQ=function(n,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.variableNames=e.map(function(s,o){return"T"+o});var t=[];this.variableNames.forEach(function(s){t.push("vec4 v"+s+" = get"+s+"AtOutCoords();")});var r=this.variableNames.map(function(s){return"v"+s}).join(" + ");this.userCode=`
      void main() {
        `+t.join(`
        `)+`

        vec4 result = `+r+`;
        setOutput(result);
      }
    `},QQ=function(n,e,t){this.variableNames=["A"];var r=n.windowSize,s=n.batchSize,o=n.inSize,a=Math.ceil(o/r);t||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];var i=e==="max"?">":"<",u=t?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+r+`;

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < `+r+`; i++) {
          int inIdx = `+u+`;
          float candidate = getA(batch, inIdx);
          if (candidate `+i+` bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `};function HN(n,e){return["x","y","z","w","u","v"].slice(0,e).map(function(t){return n+"."+t})}function Bn(n,e){return e===1?[n]:HN(n,e)}function Cn(){var n,e,t,r,s,o,a,i,u,c;return se().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}function Oo(n,e,t){t===void 0&&(t="index");var r=Wn(e);return r.map(function(s,o){return"int "+n[o]+" = "+t+" / "+s+"; "+(o===r.length-1?"int "+n[o+1]+" = "+t+" - "+n[o]+" * "+s:"index -= "+n[o]+" * "+s)+";"}).join("")}function Ty(n){var e=Wn(n).map(function(t){return t.toString()});return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * `+e[0]+" + coords.y * "+e[1]+` + coords.z;
  }
`}var jN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;function ZQ(n,e,t,r){var s=[];n.forEach(function(p){var f=be(p.shapeInfo.logicalShape);p.shapeInfo.isUniform?s.push("uniform float "+p.name+(f>1?"["+f+"]":"")+";"):(s.push("uniform sampler2D "+p.name+";"),s.push("uniform int offset"+p.name+";"))});var o,a,i=s.join(`
`),u=n.map(function(p){return function(f,m,g){g===void 0&&(g=!1);var x="";x+=g?qN(f):Fa(f);var y=f.shapeInfo.logicalShape,b=m.logicalShape;return y.length<=b.length&&(x+=g?function(v,w){var C,I=v.name,k=I.charAt(0).toUpperCase()+I.slice(1),S="get"+k+"AtOutCoords",N=v.shapeInfo.logicalShape.length,E=w.logicalShape.length,R=Gs(v.shapeInfo.logicalShape,w.logicalShape),_=mt(E),O=E-N,F=["x","y","z","w","u","v"];C=N===0?"":E<2&&R.length>=1?"coords = 0;":R.map(function(Z){return"coords."+F[Z+O]+" = 0;"}).join(`
`);var L="";L=E<2&&N>0?"coords":v.shapeInfo.logicalShape.map(function(Z,ee){return"coords."+F[ee+O]}).join(", ");var B="return outputValue;",M=be(v.shapeInfo.logicalShape)===1,z=be(w.logicalShape)===1;if(N!==1||M||z){if(M&&!z)B=E===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(R.length){var H=N-2,X=N-1;R.indexOf(H)>-1&&R.indexOf(X)>-1?B="return vec4(outputValue.x);":R.indexOf(H)>-1?B="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":R.indexOf(X)>-1&&(B="return vec4(outputValue.xx, outputValue.zz);")}}else B=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 `+S+`() {
      `+_+` coords = getOutputCoords();
      `+C+`
      vec4 outputValue = get`+k+"("+L+`);
      `+B+`
    }
  `}(f,m):function(v,w){var C=v.name,I=C.charAt(0).toUpperCase()+C.slice(1),k="get"+I+"AtOutCoords",S=w.texShape,N=v.shapeInfo.texShape,E=v.shapeInfo.logicalShape.length,R=w.logicalShape.length;if(!v.shapeInfo.isUniform&&E===R&&v.shapeInfo.flatOffset==null&&Qt(N,S))return`
      float `+k+`() {
        return sampleTexture(`+C+`, resultUV);
      }
    `;var _,O=mt(R),F=Gs(v.shapeInfo.logicalShape,w.logicalShape),L=R-E,B=["x","y","z","w","u","v"];_=E===0?"":R<2&&F.length>=1?"coords = 0;":F.map(function(z){return"coords."+B[z+L]+" = 0;"}).join(`
`);var M="";return M=R<2&&E>0?"coords":v.shapeInfo.logicalShape.map(function(z,H){return"coords."+B[H+L]}).join(", "),`
    float `+k+`() {
      `+O+` coords = getOutputCoords();
      `+_+`
      return get`+I+"("+M+`);
    }
  `}(f,m)),x}(p,e,r)}).join(`
`),c=e.texShape,l=Cn(),h=function(p){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return `+p.texture2D+`(textureSampler, uv).r;
    }
  `}(l),d=function(p){return p.version+`
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    `+p.varyingFs+` vec2 resultUV;
    `+p.defineOutput+`
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    `+p.defineSpecialNaN+`
    `+p.defineSpecialInf+`
    `+p.defineRound+`

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    `+JQ+`
    `+eZ+`
    `+tZ+`
  `}(l);return e.isPacked?(o=function(p,f){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(v,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];return C[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * `+C[1]+`.0);
      }
    `:C[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * `+C[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      return 2 * (resTexRC.x * `+C[1]+` + resTexRC.y);
    }
  `}(0,f);case 2:return function(v,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];if(Qt(v,w))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(`+C[0]+", "+C[1]+`));
      }
    `;var I=Math.ceil(v[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));

      int index = resTexRC.x * `+C[1]+` + resTexRC.y;
      int r = 2 * (index / `+I+`);
      int c = imod(index, `+I+`) * 2;

      return ivec2(r, c);
    }
  `}(p,f);case 3:return m=p,g=f,x=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],y=Math.ceil(m[2]/2),b=y*Math.ceil(m[1]/2),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+x[0]+", "+x[1]+`));
      int index = resTexRC.x * `+x[1]+` + resTexRC.y;

      int b = index / `+b+`;
      index -= b * `+b+`;

      int r = 2 * (index / `+y+`);
      int c = imod(index, `+y+`) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(v,w){for(var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)],I=Math.ceil(v[v.length-1]/2),k=I*Math.ceil(v[v.length-2]/2),S=k,N="",E="b, r, c",R=2;R<v.length-1;R++)S*=v[v.length-R-1],N=`
      int b`+R+" = index / "+S+`;
      index -= b`+R+" * "+S+`;
    `+N,E="b"+R+", "+E;return`
    ivec`+v.length+` getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      int index = resTexRC.x * `+C[1]+` + resTexRC.y;

      `+N+`

      int b = index / `+k+`;
      index -= b * `+k+`;

      int r = 2 * (index / `+I+`);
      int c = imod(index, `+I+`) * 2;

      return ivec`+v.length+"("+E+`);
    }
  `}(p,f)}var m,g,x,y,b}(e.logicalShape,c),a=function(p){return`
    void setOutput(vec4 val) {
      `+p.output+` = val;
    }
  `}(l)):(o=function(p,f){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(x,y){return y[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * `+y[1]+`.0);
      }
    `:y[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * `+y[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+y[0]+", "+y[1]+`));
      return resTexRC.x * `+y[1]+` + resTexRC.y;
    }
  `}(0,f);case 2:return function(x,y){return Qt(x,y)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(`+y[0]+", "+y[1]+`));
      }
    `:x[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+y[0]+", "+y[1]+`));
        int index = resTexRC.x * `+y[1]+` + resTexRC.y;
        return ivec2(index, 0);
      }
    `:x[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+y[0]+", "+y[1]+`));
        int index = resTexRC.x * `+y[1]+` + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;
      int r = index / `+x[1]+`;
      int c = index - r * `+x[1]+`;
      return ivec2(r, c);
    }
  `}(p,f);case 3:return m=f,g=Oo(["r","c","d"],p),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+m[0]+", "+m[1]+`));
      int index = resTexRC.x * `+m[1]+` + resTexRC.y;
      `+g+`
      return ivec3(r, c, d);
    }
  `;case 4:return function(x,y){var b=Oo(["r","c","d","d2"],x);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;
      `+b+`
      return ivec4(r, c, d, d2);
    }
  `}(p,f);case 5:return function(x,y){var b=Oo(["r","c","d","d2","d3"],x);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(`+y[0]+`,
                             `+y[1]+`));

      int index = resTexRC.x * `+y[1]+` + resTexRC.y;

      `+b+`

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(p,f);case 6:return function(x,y){var b=Oo(["r","c","d","d2","d3","d4"],x);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;

      `+b+`

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(p,f);default:throw new Error(p.length+"-D output sampling is not yet supported")}var m,g}(e.logicalShape,c),a=function(p){return`
    void setOutput(float val) {
      `+p.output+` = vec4(val, 0, 0, 0);
    }
  `}(l)),r&&(d+=nZ),[d,h,a,i,o,u,t].join(`
`)}function Fa(n){var e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1);if(t.shapeInfo.isUniform)return"float "+s+"() {return "+r+";}";var o=t.shapeInfo.texShape,a=o[0],i=o[1];if(a===1&&i===1)return`
      float `+s+`() {
        return sampleTexture(`+r+`, halfCR);
      }
    `;var u=t.shapeInfo.texShape,c=u[0],l=u[1],h=Io(r);return`
    float `+s+`() {
      vec2 uv = uvFromFlat(`+c+", "+l+", "+h+`);
      return sampleTexture(`+r+`, uv);
    }
  `}(n);case 1:return function(t){var r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1);if(t.shapeInfo.isUniform)return`
      float `+s+`(int index) {
        `+Ta(t)+`
      }
    `;var o=t.shapeInfo.texShape,a=o[0],i=o[1];if(i===1&&a===1)return`
      float `+s+`(int index) {
        return sampleTexture(`+r+`, halfCR);
      }
    `;var u=Io(r);return i===1?`
      float `+s+`(int index) {
        vec2 uv = vec2(0.5, (float(index + `+u+") + 0.5) / "+a+`.0);
        return sampleTexture(`+r+`, uv);
      }
    `:a===1?`
      float `+s+`(int index) {
        vec2 uv = vec2((float(index + `+u+") + 0.5) / "+i+`.0, 0.5);
        return sampleTexture(`+r+`, uv);
      }
    `:`
    float `+s+`(int index) {
      vec2 uv = uvFromFlat(`+a+", "+i+", index + "+u+`);
      return sampleTexture(`+r+`, uv);
    }
  `}(n);case 2:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t.shapeInfo.texShape;if(a!=null&&Qt(r,a)){var i=a[0],u=a[1];return`
    float `+o+`(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(`+u+".0, "+i+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `}var c=zs(r),l=c.newShape,h=c.keptDims,d=l;if(d.length<r.length){var p=Oa(t,d);return`
      `+Fa(p)+`
      float `+o+`(int row, int col) {
        return `+o+"("+_a(["row","col"],h)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(`+r[1]+`, 1)));
        `+Ta(t)+`
      }
    `;var f=a[0],m=a[1],g=Io(s);return m===1?`
    float `+o+`(int row, int col) {
      float index = dot(vec3(row, col, `+g+"), vec3("+r[1]+`, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / `+f+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `:f===1?`
    float `+o+`(int row, int col) {
      float index = dot(vec3(row, col, `+g+"), vec3("+r[1]+`, 1, 1));
      vec2 uv = vec2((index + 0.5) / `+m+`.0, 0.5);
      return sampleTexture(`+s+`, uv);
    }
  `:`
  float `+o+`(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * `+r[1]+" + col + "+g+`;
    vec2 uv = uvFromFlat(`+f+", "+m+`, index);
    return sampleTexture(`+s+`, uv);
  }
`}(n);case 3:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[1]*r[2],i=r[2],u=zs(r),c=u.newShape,l=u.keptDims,h=c;if(h.length<r.length){var d=Oa(t,h);return`
        `+Fa(d)+`
        float `+o+`(int row, int col, int depth) {
          return `+o+"("+_a(["row","col","depth"],l)+`);
        }
      `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(`+a+", "+i+`, 1)));
        `+Ta(t)+`
      }
    `;var p=t.shapeInfo.texShape,f=p[0],m=p[1],g=t.shapeInfo.flatOffset;if(m===a&&g==null)return`
        float `+o+`(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(`+i+`, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(`+m+".0, "+f+`.0);
          return sampleTexture(`+s+`, uv);
        }
      `;if(m===i&&g==null)return`
    float `+o+`(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(`+r[1]+`, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+m+".0, "+f+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `;var x=Io(s);return`
      float `+o+`(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * `+a+" + col * "+i+" + depth + "+x+`;
        vec2 uv = uvFromFlat(`+f+", "+m+`, index);
        return sampleTexture(`+s+`, uv);
      }
  `}(n);case 4:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[3],i=r[2]*a,u=r[1]*i,c=zs(r),l=c.newShape,h=c.keptDims;if(l.length<r.length){var d=Oa(t,l);return`
      `+Fa(d)+`
      float `+o+`(int row, int col, int depth, int depth2) {
        return `+o+"("+_a(["row","col","depth","depth2"],h)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(`+u+", "+i+", "+a+`, 1)));
        `+Ta(t)+`
      }
    `;var p=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,m=f[0],g=f[1];if(g===u&&p==null)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(`+i+", "+a+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+g+".0, "+m+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(g===a&&p==null)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(`+r[1]*r[2]+", "+r[2]+`, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+g+".0, "+m+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var x=Io(s);return`
    float `+o+`(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+u+" + col * "+i+` +
          depth * `+a+` + depth2;
      vec2 uv = uvFromFlat(`+m+", "+g+", index + "+x+`);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);case 5:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[4],i=r[3]*a,u=r[2]*i,c=r[1]*u,l=zs(r),h=l.newShape,d=l.keptDims;if(h.length<r.length){var p=Oa(t,h);return`
      `+Fa(p)+`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        return `+o+"("+_a(["row","col","depth","depth2","depth3"],d)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(`+c+", "+u+", "+i+", "+a+`)) +
          depth3;
        `+Ta(t)+`
      }
    `;var f=t.shapeInfo.flatOffset,m=t.shapeInfo.texShape,g=m[0],x=m[1];if(x===c&&f==null)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(`+u+", "+i+", "+a+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(x===a&&f==null)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(`+r[1]*r[2]*r[3]+`,
               `+r[2]*r[3]+", "+r[3]+`, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var y=Io(s);return`
    float `+o+`(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+c+" + col * "+u+" + depth * "+i+` +
          depth2 * `+a+" + depth3 + "+y+`;
      vec2 uv = uvFromFlat(`+g+", "+x+`, index);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);case 6:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=zs(r),i=a.newShape,u=a.keptDims;if(i.length<r.length){var c=Oa(t,i);return`
      `+Fa(c)+`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return `+o+"("+_a(["row","col","depth","depth2","depth3","depth4"],u)+`);
      }
    `}var l=r[5],h=r[4]*l,d=r[3]*h,p=r[2]*d,f=r[1]*p;if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(`+f+", "+p+", "+d+", "+h+`)) +
          dot(
            vec2(depth3, depth4),
            vec2(`+l+`, 1)));
        `+Ta(t)+`
      }
    `;var m=t.shapeInfo.flatOffset,g=t.shapeInfo.texShape,x=g[0],y=g[1];if(y===f&&m==null)return`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(`+p+", "+d+", "+h+", "+l+`)) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+y+".0, "+x+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(y===l&&m==null)return`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(`+r[1]*r[2]*r[3]*r[4]+`,
               `+r[2]*r[3]*r[4]+`,
               `+r[3]*r[4]+`,
               `+r[4]+`)) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+y+".0, "+x+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var b=Io(s);return`
    float `+o+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+f+" + col * "+p+" + depth * "+d+` +
          depth2 * `+h+" + depth3 * "+l+" + depth4 + "+b+`;
      vec2 uv = uvFromFlat(`+x+", "+y+`, index);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function qN(n){var e,t,r;switch(n.shapeInfo.logicalShape.length){case 0:return e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Cn(),`
    vec4 `+t+`() {
      return `+r.texture2D+"("+e+`, halfCR);
    }
  `;case 1:return function(s){var o=s.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=s.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Cn();return`
    vec4 `+a+`(int index) {
      vec2 uv = packedUVfrom1D(
        `+u[0]+", "+u[1]+`, index);
      return `+c.texture2D+"("+o+`, uv);
    }
  `}(n);case 2:return function(s){var o=s.shapeInfo.logicalShape,a=s.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),u=s.shapeInfo.texShape,c=u[0],l=u[1],h=Cn();if(u!=null&&Qt(o,u))return`
      vec4 `+i+`(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(`+l+".0, "+c+`.0);

        return `+h.texture2D+"("+a+`, uv);
      }
    `;var d=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)],p=Math.ceil(o[1]/2);return`
    vec4 `+i+`(int row, int col) {
      vec2 uv = packedUVfrom2D(`+p+", "+d[0]+", "+d[1]+`, row, col);
      return `+h.texture2D+"("+a+`, uv);
    }
  `}(n);case 3:return function(s){var o=s.shapeInfo.logicalShape,a=s.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),u=s.shapeInfo.texShape,c=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];if(o[0]===1){var l=o.slice(1),h=Oa(s,l);return`
        `+qN(h)+`
        vec4 `+i+`(int b, int row, int col) {
          return `+i+"("+_a(["b","row","col"],[1,2])+`);
        }
      `}var d=c[0],p=c[1],f=Math.ceil(o[2]/2),m=f*Math.ceil(o[1]/2),g=Cn();return`
    vec4 `+i+`(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        `+d+", "+p+", "+m+", "+f+`, b, row, col);
      return `+g.texture2D+"("+a+`, uv);
    }
  `}(n);default:return function(s){for(var o=s.shapeInfo.logicalShape,a=o.length,i=s.name,u="get"+i.charAt(0).toUpperCase()+i.slice(1),c=s.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],h=l[0],d=l[1],p=Math.ceil(o[a-1]/2),f=p*Math.ceil(o[a-2]/2),m="int b, int row, int col",g="b * "+f+" + (row / 2) * "+p+" + (col / 2)",x=2;x<a-1;x++)m="int b"+x+", "+m,f*=o[a-x-1],g="b"+x+" * "+f+" + "+g;var y=Cn();return`
    vec4 `+u+"("+m+`) {
      int index = `+g+`;
      int texR = index / `+d+`;
      int texC = index - texR * `+d+`;
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+d+", "+h+`);
      return `+y.texture2D+"("+i+`, uv);
    }
  `}(n)}}var JQ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,eZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Io(n){return"offset"+n}function Ta(n){var e=n.name,t=be(n.shapeInfo.logicalShape);return t<2?"return "+e+";":`
    for (int i = 0; i < `+t+`; i++) {
      if (i == index) {
        return `+e+`[i];
      }
    }
  `}function mt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error("GPU for rank "+n+" is not yet supported")}function Oa(n,e){var t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function _a(n,e){return e.map(function(t){return n[t]}).join(", ")}var rZ=function(n,e,t,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(n.length>2,function(){return"Packed arg"+(t.charAt(0).toUpperCase()+t.slice(1))+" supports only inputs with rank above 2."});var s=n[n.length-1],o=Math.ceil(s/e);this.outputShape=n.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");var a,i,u=this.outputShape,c=u.length,l=mt(c),h=Bn("coords",c);if(o===1){var d=mt(i=c+1);a=`
        `+d+" sourceLocR = "+d+"("+h.join()+`, 0);
        ++`+h[c-1]+`;
        `+d+" sourceLocG = "+d+"("+h.join()+`, 0);
        ++`+h[c-2]+`;
        `+d+" sourceLocA = "+d+"("+h.join()+`, 0);
        --`+h[c-1]+`;
        `+d+" sourceLocB = "+d+"("+h.join()+`, 0);
        --`+h[c-2]+";"}else i=c,a=`
        `+l+` sourceLocR = coords;
        ++`+h[c-1]+`;
        `+l+` sourceLocG = coords;
        ++`+h[c-2]+`;
        `+l+` sourceLocA = coords;
        --`+h[c-1]+`;
        `+l+` sourceLocB = coords;
        --`+h[c-2]+";";var p=["x","y","z","w","u","v"].slice(0,i),f="."+p[i-1],m=p.map(function(k){return"int "+k}),g=Bn("sourceLocR",i-1).concat("inIdx.r"),x=Bn("sourceLocG",i-1).concat("inIdx.g"),y=Bn("sourceLocB",i-1).concat("inIdx.b"),b=Bn("sourceLocA",i-1).concat("inIdx.a"),v=t==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(`+g.join()+`),
                             getBestIndicesAChannel(`+x.join()+`),
                             getBestIndicesAChannel(`+y.join()+`),
                             getBestIndicesAChannel(`+b.join()+")));",C=`vec4(
            getAChannel(`+g.join()+`),
            hasNextCol ? getAChannel(`+x.join()+`) : 0.,
            hasNextRow ? getAChannel(`+y.join()+`) : 0.,
            hasNextRow && hasNextCol ? getAChannel(`+b.join()+") : 0.)",I=r?"":`
      float getBestIndicesAChannel(`+m.join()+`) {
        return getChannel(getBestIndicesA(`+p.join()+`),
                                          vec2(`+p.slice(-2).join()+`));
      }`;this.userCode=`
      float getAChannel(`+m.join()+`) {
        return getChannel(getA(`+p.join()+`),
                               vec2(`+p.slice(-2).join()+`));
      }
      `+I+`
      void main() {
        `+l+` coords = getOutputCoords();
        bool hasNextCol = `+h[c-1]+" < "+(u[c-1]-1)+`;
        bool hasNextRow = `+h[c-2]+" < "+(u[c-2]-1)+`;
        `+a+`
        ivec4 srcIdx = ivec4(sourceLocR`+f+", sourceLocG"+f+`,
          sourceLocB`+f+", sourceLocA"+f+") * "+e+`;
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = `+C+`;

        for (int i = 0; i < `+e+`; i++) {
          inIdx = srcIdx;
          `+w+`
          vec4 candidate = `+C+`;
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(`+v+`(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `},sZ=function(n){this.variableNames=["dy"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=n.dilationHeight,a=n.dilationWidth,i=n.effectiveFilterHeight,u=n.effectiveFilterWidth,c=i-1-n.padInfo.top,l=u-1-n.padInfo.left,h=1/(e*t);this.userCode=`
      const ivec2 pads = ivec2(`+c+", "+l+`);
      const float avgMultiplier = float(`+h+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+i+`;
            wR += `+o+`) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+u+`;
            wC+= `+a+`) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `},oZ=function(n){this.variableNames=["dy"],this.outputShape=n.inShape;var e=n.filterDepth,t=n.filterHeight,r=n.filterWidth,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.dilationDepth,u=n.dilationHeight,c=n.dilationWidth,l=n.effectiveFilterDepth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,p=l-1-n.padInfo.front,f=h-1-n.padInfo.top,m=d-1-n.padInfo.left,g=1/(e*t*r);this.userCode=`
      const ivec3 pads = ivec3(`+p+", "+f+", "+m+`);
      const float avgMultiplier = float(`+g+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+l+`;
            wD += `+i+`) {
          float dyD = float(dyDCorner + wD) / `+s+`.0;

          if (dyD < 0.0 || dyD >= `+n.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+h+`;
              wR += `+u+`) {
            float dyR = float(dyRCorner + wR) / `+o+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+d+`;
                wC += `+c+`) {
              float dyC = float(dyCCorner + wC) / `+a+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `},aZ=function(n,e,t,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],qe(n,e),qe(n,t);var a="0.0";r!=null&&(qe(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");var i="1.0";s!=null&&(qe(n,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = `+a+`;
        float scale = `+i+`;
        float inv = scale * inversesqrt(variance + float(`+o+`));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `},iZ=function(n,e,t,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qe(n,e),qe(n,t);var a="vec4(0.0)";r!=null&&(qe(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");var i="vec4(1.0)";s!=null&&(qe(n,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`
      void main() {
        vec4 offset = `+a+`;
        vec4 scale = `+i+`;

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(`+o+`));

        setOutput((x - mean) * inv + offset);
      }
    `},uZ="return areal * breal - aimag * bimag;",cZ="return areal * bimag + aimag * breal;",Q0=function(n,e,t){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qe(e,t),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        `+n+`
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `},Up="return a + b;",Gp="return a - b;",Z0="return a * b;",lZ=`
if (a == b) {
  return 1.0;
};
return a / b;`,KN="return (a < 0.) ? b * a : a;",Nt=function(n,e,t){this.variableNames=["A","B"],this.outputShape=qe(e,t),this.userCode=`
      float binaryOperation(float a, float b) {
        `+n+`
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `},hZ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,XN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,Hr=function(n,e,t,r){r===void 0&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qe(e,t);var s=this.outputShape.length,o="";if(r)if(s===0||be(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          `+mt(s)+` coords = getOutputCoords();
        `,s===1)o+=`
            result.y = (coords + 1) >= `+this.outputShape[0]+` ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{var a=Bn("coords",s);o+=`
            bool nextRowOutOfBounds =
              (`+a[s-2]+" + 1) >= "+this.outputShape[s-2]+`;
            bool nextColOutOfBounds =
              (`+a[s-1]+" + 1) >= "+this.outputShape[s-1]+`;
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        `+n+`
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        `+o+`

        setOutput(result);
      }
    `},dZ=function(){function n(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}return n.prototype.getCustomSetupFunc=function(e,t){var r=this;return function(s,o){r.minLoc==null&&(r.minLoc=s.getUniformLocationNoThrow(o,"minVal"),r.maxLoc=s.getUniformLocationNoThrow(o,"maxVal")),s.gl.uniform1f(r.minLoc,e),s.gl.uniform1f(r.maxLoc,t)}},n}(),pZ=function(){function n(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}return n.prototype.getCustomSetupFunc=function(e,t){var r=this;return function(s,o){r.minLoc==null&&(r.minLoc=s.getUniformLocationNoThrow(o,"minVal"),r.maxLoc=s.getUniformLocationNoThrow(o,"maxVal")),s.gl.uniform1f(r.minLoc,e),s.gl.uniform1f(r.maxLoc,t)}},n}(),fZ=function(n){this.variableNames=["real","imag"],this.outputShape=n,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `},mZ=function(n){this.outputShape=[],this.outputShape=ci(n,1),this.variableNames=n.map(function(i,u){return"T"+u});var e=new Array(n.length-1);e[0]=n[0][1];for(var t=1;t<e.length;t++)e[t]=e[t-1]+n[t][1];var r=["if (yC < "+e[0]+") setOutput(getT0(yR, yC));"];for(t=1;t<e.length;t++){var s=e[t-1];r.push("else if (yC < "+e[t]+") setOutput(getT"+t+"(yR, yC-"+s+"));")}var o=e.length,a=e[e.length-1];r.push("else setOutput(getT"+o+"(yR, yC-"+a+"));"),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        `+r.join(`
        `)+`
      }
    `},gZ=function(n,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ci(n,e);var t=this.outputShape,r=t.length,s=mt(r),o=Bn("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=n.map(function(g,x){return"T"+x});var i=new Array(n.length-1);i[0]=n[0][e];for(var u=1;u<i.length;u++)i[u]=i[u-1]+n[u][e];var c=a[e],l=a.slice(-2),h=a.join(),d="if ("+c+" < "+i[0]+`) {
        return getChannel(
            getT0(`+h+"), vec2("+l.join()+`));
        }`;for(u=1;u<i.length;u++){var p=i[u-1];d+=`
        if (`+c+" < "+i[u]+"  && "+c+" >= "+i[u-1]+`) {
          return getChannel(
            getT`+u+"("+ml(a,c,p)+`),
            vec2(`+ml(l,c,p)+`));
        }`}var f=i.length,m=i[i.length-1];d+=`
        return getChannel(
          getT`+f+"("+ml(a,c,m)+`),
          vec2(`+ml(l,c,m)+"));",this.userCode=`
      float getValue(`+a.map(function(g){return"int "+g})+`) {
        `+d+`
      }

      void main() {
        `+s+` coords = getOutputCoords();
        vec4 result = vec4(getValue(`+o+`), 0., 0., 0.);

        `+o[r-1]+" = "+o[r-1]+` + 1;
        if (`+o[r-1]+" < "+t[r-1]+`) {
          result.g = getValue(`+o+`);
        }

        `+o[r-2]+" = "+o[r-2]+` + 1;
        if (`+o[r-2]+" < "+t[r-2]+`) {
          result.a = getValue(`+o+`);
        }

        `+o[r-1]+" = "+o[r-1]+` - 1;
        if (`+o[r-2]+" < "+t[r-2]+` &&
            `+o[r-1]+" < "+t[r-1]+`) {
          result.b = getValue(`+o+`);
        }
        setOutput(result);
      }
    `};function ml(n,e,t){var r=n.indexOf(e);return n.map(function(s,o){return o===r?s+" - "+t:s}).join()}var xZ=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideHeight,t=n.strideWidth,r=n.padInfo.top,s=n.padInfo.left,o=n.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yR = 0; yR < `+n.outHeight+`; yR++) {
            int xR = wR + yR * `+e+" - "+r+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+n.outWidth+`; yC++) {
              int xC = wC + yC * `+t+" - "+s+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              if (`+o+`) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},yZ=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=n.dataFormat==="channelsLast",a=e-1-n.padInfo.top,i=t-1-n.padInfo.left,u=o?1:2,c=o?2:3,l=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[`+l+`];

        ivec2 dyCorner = ivec2(coords[`+u+"], coords["+c+`]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+e+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+e+` - 1 - wR;

          for (int wC = 0; wC < `+t+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+t+` - 1 - wC;

            for (int d2 = 0; d2 < `+n.outChannels+`; d2++) {

              if (`+o+`) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},vZ=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideDepth,t=n.strideHeight,r=n.strideWidth,s=n.padInfo.front,o=n.padInfo.top,a=n.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yF = 0; yF < `+n.outDepth+`; yF++) {
            int xF = wF + yF * `+e+" - "+s+`;

            if (xF < 0 || xF >= `+n.inDepth+`) {
              continue;
            }

            for (int yR = 0; yR < `+n.outHeight+`; yR++) {
              int xR = wR + yR * `+t+" - "+o+`;

              if (xR < 0 || xR >= `+n.inHeight+`) {
                continue;
              }

              for (int yC = 0; yC < `+n.outWidth+`; yC++) {
                int xC = wC + yC * `+r+" - "+a+`;

                if (xC < 0 || xC >= `+n.inWidth+`) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},bZ=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterDepth,t=n.filterHeight,r=n.filterWidth,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=e-1-n.padInfo.front,u=t-1-n.padInfo.top,c=r-1-n.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(`+i+", "+u+", "+c+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < `+e+`; wF++) {
          float dyF = float(dyFCorner + wF) / `+s+`.0;

          if (dyF < 0.0 || dyF >= `+n.outDepth+`.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = `+e+` - 1 - wF;

          for (int wR = 0; wR < `+t+`; wR++) {
            float dyR = float(dyRCorner + wR) / `+o+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = `+t+` - 1 - wR;

            for (int wC = 0; wC < `+r+`; wC++) {
              float dyC = float(dyCCorner + wC) / `+a+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = `+r+` - 1 - wC;

              for (int d2 = 0; d2 < `+n.outChannels+`; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},wZ=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideHeight,t=n.strideWidth,r=n.padInfo.top,s=n.padInfo.left,o=n.outChannels/n.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * `+o+` + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yR = 0; yR < `+n.outHeight+`; yR++) {
            int xR = wR + yR * `+e+" - "+r+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+n.outWidth+`; yC++) {
              int xC = wC + yC * `+t+" - "+s+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `},CZ=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=e-1-n.padInfo.top,a=t-1-n.padInfo.left,i=n.outChannels/n.inChannels;this.userCode=`
      const ivec2 pads = ivec2(`+o+", "+a+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < `+e+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+e+` - 1 - wR;

          for (int wC = 0; wC < `+t+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+t+` - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < `+i+`; dm++) {
              int d2 = d1 * `+i+` + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `},J0=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.outputShape=n.outShape;var s=n.padInfo.top,o=n.padInfo.left,a=n.strideHeight,i=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,l=n.filterHeight,h=n.filterWidth,d=4*Math.floor(n.inChannels/4),p=n.inChannels%4,f=n.dataFormat==="channelsLast",m=f?1:2,g=f?2:3,x=f?3:1,y="",b="";t&&(y=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`
          float activation(float x) {
            `+t+`
          }
        `,b="result = activation(result);");var v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+y+`

      const ivec2 strides = ivec2(`+a+", "+i+`);
      const ivec2 pads = ivec2(`+s+", "+o+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[`+x+`];

        ivec2 xRCCorner =
            ivec2(coords[`+m+"], coords["+g+`]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+l+`; wR++) {
          int xR = xRCorner + wR * `+u+`;

          if (xR < 0 || xR >= `+n.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+h+`; wC++) {
            int xC = xCCorner + wC * `+c+`;

            if (xC < 0 || xC >= `+n.inWidth+`) {
              continue;
            }

            for (int d1 = 0; d1 < `+d+`; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (`+f+`) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (`+(p===1)+`) {

              if (`+f+`) {
                dotProd +=
                    getX(batch, xR, xC, `+d+`) *
                    getW(wR, wC, `+d+`, d2);
              } else {
                dotProd +=
                    getX(batch, `+d+`, xR, xC) *
                    getW(wR, wC, `+d+`, d2);
              }

            } else if (`+(p===2)+`) {
              vec2 wValues = vec2(
                getW(wR, wC, `+d+`, d2),
                getW(wR, wC, `+d+` + 1, d2)
              );

              if (`+f+`) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, `+d+`),
                  getX(batch, xR, xC, `+d+` + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, `+d+`, xR, xC),
                  getX(batch, `+d+` + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (`+(p===3)+`) {
              vec3 wValues = vec3(
                getW(wR, wC, `+d+`, d2),
                getW(wR, wC, `+d+` + 1, d2),
                getW(wR, wC, `+d+` + 2, d2)
              );

              if (`+f+`) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, `+d+`),
                  getX(batch, xR, xC, `+d+` + 1),
                  getX(batch, xR, xC, `+d+` + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, `+d+`, xR, xC),
                  getX(batch, `+d+` + 1, xR, xC),
                  getX(batch, `+d+` + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        `+v+`
        `+b+`
        setOutput(result);
      }
    `},IZ=function(n){this.variableNames=["x","W"],this.outputShape=n.outShape;var e=n.padInfo.front,t=n.padInfo.top,r=n.padInfo.left,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.dilationDepth,u=n.dilationHeight,c=n.dilationWidth,l=n.filterDepth,h=n.filterHeight,d=n.filterWidth,p=4*Math.floor(n.inChannels/4),f=n.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(`+s+", "+o+", "+a+`);
      const ivec3 pads = ivec3(`+e+", "+t+", "+r+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < `+l+`; wF++) {
          int xF = xFCorner + wF * `+i+`;

          if (xF < 0 || xF >= `+n.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+h+`; wR++) {
            int xR = xRCorner + wR * `+u+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+d+`; wC++) {
              int xC = xCCorner + wC * `+c+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              for (int d1 = 0; d1 < `+p+`; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (`+(f===1)+`) {
                dotProd +=
                  getX(batch, xF, xR, xC, `+p+`) *
                  getW(wF, wR, wC, `+p+`, d2);
              } else if (`+(f===2)+`) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (`+(f===3)+`) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1),
                  getX(batch, xF, xR, xC, `+p+` + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2),
                  getW(wF, wR, wC, `+p+` + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},eb=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.outputShape=n.outShape;var s=n.inHeight,o=n.inWidth,a=n.padInfo.top,i=n.padInfo.left,u=n.strideHeight,c=n.strideWidth,l=n.dilationHeight,h=n.dilationWidth,d=n.filterHeight,p=n.filterWidth,f=n.outChannels/n.inChannels,m="",g="";t&&(m=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`
          float activation(float x) {
            `+t+`
          }
        `,g="result = activation(result);");var x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+m+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / `+f+`;
        int q = d2 - d1 * `+f+`;

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < `+d+`; wR++) {
          int xR = xRCorner + wR * `+l+`;

          if (xR < 0 || xR >= `+s+`) {
            continue;
          }

          for (int wC = 0; wC < `+p+`; wC++) {
            int xC = xCCorner + wC * `+h+`;

            if (xC < 0 || xC >= `+o+`) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        `+x+`
        `+g+`
        setOutput(result);
      }
    `},tb=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.outShape;for(var s=n.inHeight,o=n.inWidth,a=n.padInfo.top,i=n.padInfo.left,u=n.strideHeight,c=n.strideWidth,l=n.dilationHeight,h=n.dilationWidth,d=n.filterHeight,p=n.filterWidth,f=p,m="int xR; int xC; int xCOffset;",g=0;g<d;g++)for(var x=0;x<p;x++)m+=`
          vec4 xTexelR`+g+"C"+2*x+` = vec4(0.);
          vec4 wR`+g+"C"+x+` = vec4(0.);
          vec4 xR`+g+"C"+x+" = vec4(0.);";for(g=0;g<d;g++)for(var y=0;y<f;y++){if(m+=`
          xR = xRCorner + `+g*l+`;
          xC = xCCorner + `+(x=2*y)*h+`;
        `,c===1){if(x<p&&(m+=i%2==1?`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < `+s+" && xCOffset >= 0 && xCOffset < "+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+o+`) {
                    xTexelR`+g+"C"+x+`.zw = vec2(0.);
                  }
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < `+s+" && xCOffset >= 0 && xCOffset < "+o+`) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+o+`) {
                    previous.zw = vec2(0.);
                  }

                  xR`+g+"C"+x+" = vec4(previous.zw, xTexelR"+g+"C"+x+`.xy);
                } else {
                  xR`+g+"C"+x+" = vec4(0, 0, xTexelR"+g+"C"+x+`.xy);
                }
              `:`
                if(xR >= 0 && xR < `+s+" && xC >= 0 && xC < "+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xR`+g+"C"+x+" = xTexelR"+g+"C"+x+`;
              `,x+1<p)){var b=i%2==0?iy(h):h;h%2==0&&i%2==1||h%2!=0&&i%2!=1?(m+=`
                  xCOffset = xC + `+i%2+" + "+b+`;

                  if(xR >= 0 && xR < `+s+` &&
                    xCOffset >= 0 && xCOffset < `+o+`) {
                    xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                  }
                `,h>1&&(m+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < `+s+` &&
                      xCOffset >= 0 && xCOffset < `+o+`) {
                      xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR`+g+"C"+x+` = vec4(0.);
                    }
                  `),m+=`
                  xR`+g+"C"+(x+1)+` = vec4(
                    xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.xy);
                `):m+=`
                  xCOffset = xC + `+b+`;

                  if(xR >= 0 && xR < `+s+` &&
                    xCOffset >= 0 && xCOffset < `+o+`) {
                    xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                  }

                  xR`+g+"C"+(x+1)+" = xTexelR"+g+"C"+(x+2)+`;
                `}}else x<p&&(m+=`
              if(xR >= 0 && xR < `+s+`) {
            `,i%2==1?(m+=`
                xCOffset = xC + 1 - `+c+`;
                if(xCOffset >= 0 && xCOffset < `+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < `+o+`) {
                  xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR`+g+"C"+(x+2)+` = vec4(0.);
                }

                xR`+g+"C"+x+` = vec4(
                  xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.zw);
              `,x+1<p&&(m+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + `+c+`;
                  if(xCOffset >= 0 && xCOffset < `+o+`) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR`+g+"C"+(x+1)+" = vec4(xTexelR"+g+"C"+(x+2)+`.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < `+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xCOffset = xC + `+c+`;
                if(xCOffset >= 0 && xCOffset < `+o+`) {
                  xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+g+"C"+(x+2)+` = vec4(0.);
                }

                xR`+g+"C"+x+` = vec4(
                  xTexelR`+g+"C"+x+".xy, xTexelR"+g+"C"+(x+2)+`.xy);
              `,x+1<p&&(m+=`
                  xR`+g+"C"+(x+1)+` = vec4(
                    xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.zw);
                `)),m+="}");x<p&&(m+=`
            vec4 wTexelR`+g+"C"+x+" = getW("+g+", "+x+`, d1, q);
            wR`+g+"C"+x+" = vec4(wTexelR"+g+"C"+x+".xz, wTexelR"+g+"C"+x+`.xz);
          `,x+1<p&&(m+=`
              vec4 wTexelR`+g+"C"+(x+1)+" = getW("+g+", "+(x+1)+`, d1, q);
              wR`+g+"C"+(x+1)+` =
                vec4(wTexelR`+g+"C"+(x+1)+".xz, wTexelR"+g+"C"+(x+1)+".xz);"))}for(g=0;g<d;g++)for(x=0;x<p;x++)m+="dotProd += xR"+g+"C"+x+" * wR"+g+"C"+x+";";var v="",w="";t&&(v=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`vec4 activation(vec4 x) {
          `+t+`
        }`,w="result = activation(result);");var C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+v+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        `+m+`

        vec4 result = dotProd;
        `+C+`
        `+w+`
        setOutput(result);
      }
    `},kZ=function(n,e,t,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var o=n[0],a=n[1],i=n[2],u=n[3],c=e[0],l=t[0],h=t[1];this.outputShape=[c,l,h,u];var d=r==="bilinear"?1:0,p=[a-1+".0",i-1+".0"],f=p[0],m=p[1],g=l>1?[""+(a-1)/(l-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],x=g[0],y=g[1],b=g[2],v=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=v[0],C=v[1],I=v[2];this.userCode=`
      const float height_ratio = float(`+x+`);
      const float width_ratio = float(`+w+`);
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= `+o+`) {
          return;
        }

        float height_scale = `+y+`;
        float width_scale = `+C+`;

        float in_y = `+b+`;
        if( in_y < 0.0 || in_y > `+f+` ) {
          setOutput(float(`+s+`));
          return;
        }
        float in_x = `+I+`;
        if( in_x < 0.0 || in_x > `+m+` ) {
          setOutput(float(`+s+`));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(`+d+` == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `},SZ=function(n,e,t){this.variableNames=["x"],this.outputShape=n;var r=n.length,s=n[n.length-1],o=t?"<":">";this.userCode=`
      int getIndex(int i) {
        `+(t?"return "+s+" -i - 1;":"return i;")+`
      }

      void main() {
        `+mt(r)+` coords = getOutputCoords();
        int end = `+nb(r,"coords")+`;
        float val = 0.0;
        for (int i = `+s+` - 1; i >= 0; i -= 1) {
          int idx = getIndex(i);
          if (idx `+o+` end) {
            continue;
          }
          if (idx == end && `+e+`) {
            continue;
          }
          `+nb(r,"coords")+` = idx;
          val += getX(`+function(a,i){if(a===1)return""+i;if(a===2)return i+".x, "+i+".y";if(a===3)return i+".x, "+i+".y, "+i+".z";if(a===4)return i+".x, "+i+".y, "+i+".z, "+i+".w";throw Error("Cumulative sum for rank "+a+" is not yet supported")}(r,"coords")+`);
        }
        setOutput(val);
      }
    `};function nb(n,e){if(n===1)return""+e;if(n===2)return e+".y";if(n===3)return e+".z";if(n===4)return e+".w";throw Error("Cumulative sum for rank "+n+" is not yet supported")}var NZ=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ku.DENSE;var e=su(n),t=Cn();this.outputShape=n,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+Oo(["r","c","d"],n)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+e[0]+", "+e[1]+`));
        int index = 4 * (resTexRC.x * `+e[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        `+t.output+` = result;
      }
    `},TZ=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ku.DENSE;var e=su(n),t=Cn();this.outputShape=n,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+Oo(["r","c","d"],n)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+e[0]+", "+e[1]+`));
        int index = 4 * (resTexRC.x * `+e[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        `+t.output+` = result;
      }
    `},EZ=function(){function n(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = `+this.getHeightCoordString()+`;
      int w = `+this.getWidthCoordString()+`;
      int d = `+this.getDepthCoordString()+`;

      int in_h = h / `+t+`;
      int offset_h = imod(h, `+t+`);
      int in_w = w / `+t+`;
      int offset_w = imod(w, `+t+`);
      int offset_d = (offset_h * `+t+` + offset_w) *
        `+this.getOutputDepthSize()+`;
      int in_d = d + offset_d;

      float result = `+this.getInputSamplingString()+`;
      setOutput(result);
    }
  `}return n.prototype.getHeightCoordString=function(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"},n.prototype.getWidthCoordString=function(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"},n.prototype.getDepthCoordString=function(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"},n.prototype.getOutputDepthSize=function(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]},n.prototype.getInputSamplingString=function(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},n}(),RZ=function(n){this.variableNames=["X"],this.outputShape=[n,n],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `},$Z=function(n){this.variableNames=["A"],this.outTexUsage=tr.DOWNLOAD;var e=Cn();this.outputShape=n,this.userCode=`
      `+jN+`

      void main() {
        float x = getAAtOutCoords();
        `+e.output+` = encode_float(x);
      }
    `},AZ=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=tr.DOWNLOAD;var e=Cn();this.outputShape=n,this.userCode=`
      `+jN+`

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        `+e.output+` = encode_float(x);
      }
    `},DZ=function(n,e,t){t===void 0&&(t=!1),this.variableNames=["A"];var r=Cn(),s=e[0],o=e[1];this.outputShape=n;var a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`
      `+Ty(n)+`

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);
        
        int r = flatIndex / `+o+`;
        int c = imod(flatIndex, `+o+`);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(`+o+".0, "+s+`.0);
        vec4 values = `+r.texture2D+`(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        `+r.output+" = vec4("+a+`, 0., 0., 0.);
      }
    `},FZ=function(n,e,t){t===void 0&&(t=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=Cn(),s=e[0],o=e[1];this.outputShape=n;var a="",i="result";t&&(i="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var c=0;c<=1;c++){var l=2*u+c;a+=`
          localCoords = coords;
          if(localCoords[2] + `+c+" < "+n[2]+`) {
            localCoords[2] += `+c+`;
            if(localCoords[1] + `+u+" < "+n[1]+`) {
              localCoords[1] += `+u+`;

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / `+o+`;
              c = imod(flatIndex, `+o+`);
              uv = (vec2(c, r) + halfCR) / vec2(`+o+".0, "+s+`.0);
              values = `+r.texture2D+`(A, uv);

              if(offset == 0) {
                result[`+l+`] = values[0];
              } else if(offset == 1) {
                result[`+l+`] = values[1];
              } else if(offset == 2) {
                result[`+l+`] = values[2];
              } else {
                result[`+l+`] = values[3];
              }
            }
          }
        `}this.userCode=`
      `+Ty(n)+`

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        `+a+`

        `+r.output+" = "+i+`;
      }
    `},OZ="return real * expR - imag * expI;",_Z="return real * expI + imag * expR;",rb=function(n,e,t){this.variableNames=["real","imag"];var r=e[1];this.outputShape=e;var s=t?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=t?r+".0":"1.0";this.userCode=`
      const float exponentMultiplier = `+s+`;

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        `+n+`
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(`+r+`);
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < `+r+`; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / `+o+`;
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `},MZ=function(){function n(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;return function(r,s){t.valueLoc==null&&(t.valueLoc=r.getUniformLocationNoThrow(s,"value")),r.gl.uniform1f(t.valueLoc,e)}},n}(),LZ=function(n,e,t){this.variableNames=["A","indices"];var r=n.slice();r[t]=e,this.outputShape=r,this.rank=r.length;var s=mt(this.rank),o=function(a,i){var u=a.length;if(u>4)throw Error("Gather for rank "+u+" is not yet supported");if(u===1)return"int(getIndices(resRC))";for(var c=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],h=0;h<a.length;h++)h===i?l.push("int(getIndices("+c[h]+"))"):l.push(""+c[h]);return l.join()}(n,t);this.userCode=`
      void main() {
        `+s+` resRC = getOutputCoords();
        setOutput(getA(`+o+`));
      }
    `},PZ=function(n,e,t){this.sliceDim=n,this.strides=e,this.variableNames=["x","indices"],this.outputShape=t;var r=mt(e.length),s=mt(t.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        `+r+" strides = "+r+"("+this.strides+`);
         void main() {
          `+s+` coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < `+this.sliceDim+`; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * `+o+`;
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `};function BZ(n,e){var t=Cn();return W9(n,e,t.version+`
    precision highp float;
    `+t.attribute+` vec3 clipSpacePos;
    `+t.attribute+` vec2 uv;
    `+t.varyingVs+` vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function zZ(n,e){return q9(n,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function VZ(n,e){return K9(n,e,new Uint16Array([0,1,2,2,1,3]))}function Xc(n,e,t,r,s,o,a){Y9(t,r);var i=X9(n,e),u=n.TEXTURE_2D;return Ne(n,e,function(){return n.bindTexture(u,i)}),Ne(n,e,function(){return n.texParameteri(u,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)}),Ne(n,e,function(){return n.texParameteri(u,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)}),Ne(n,e,function(){return n.texParameteri(u,n.TEXTURE_MIN_FILTER,n.NEAREST)}),Ne(n,e,function(){return n.texParameteri(u,n.TEXTURE_MAG_FILTER,n.NEAREST)}),Ne(n,e,function(){return n.texImage2D(u,0,s,t,r,0,o,a,null)}),Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)}),i}function WZ(n,e,t,r,s){var o=Zd(t,r);return Xc(n,e,o[0],o[1],s.internalFormatFloat,s.textureFormatFloat,n.FLOAT)}function UZ(n,e,t,r,s){var o=Zd(t,r);return Xc(n,e,o[0],o[1],s.internalFormatHalfFloat,s.textureFormatFloat,s.textureTypeHalfFloat)}function GZ(n,e,t,r,s){var o=Zd(t,r);return Xc(n,e,o[0],o[1],n.RGBA,n.RGBA,n.UNSIGNED_BYTE)}function HZ(n,e,t,r,s){var o=qc(t,r);return Xc(n,e,o[0],o[1],s.internalFormatPackedFloat,n.RGBA,n.FLOAT)}function jZ(n,e,t,r,s){var o=qc(t,r);return Xc(n,e,o[0],o[1],s.internalFormatPackedHalfFloat,n.RGBA,s.textureTypeHalfFloat)}function qZ(n,e,t,r){return Ne(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,r)}),G0(n,e,t,"clipSpacePos",r,3,20,0)&&G0(n,e,t,"uv",r,2,20,12)}function KZ(n,e,t,r,s,o,a){var i,u,c;Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)}),o instanceof Uint8Array?(i=new Uint8Array(r*s*4),u=n.UNSIGNED_BYTE,c=n.RGBA):(i=new Float32Array(r*s*4),u=n.FLOAT,c=a.internalFormatPackedFloat),i.set(o),Ne(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,c,r,s,0,n.RGBA,u,i)}),Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)})}function XZ(n,e,t,r){Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)}),r.data instanceof Uint8Array?Ne(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,n.RGBA,r.width,r.height,0,n.RGBA,n.UNSIGNED_BYTE,r.data)}):Ne(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,r)}),Ne(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)})}function YZ(n,e,t,r,s){var o=n.createBuffer();Ne(n,e,function(){return n.bindBuffer(n.PIXEL_PACK_BUFFER,o)});var a=16*t*r;return Ne(n,e,function(){return n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)}),Ne(n,e,function(){return n.readPixels(0,0,r,t,n.RGBA,n.FLOAT,0)}),Ne(n,e,function(){return n.bindBuffer(n.PIXEL_PACK_BUFFER,null)}),o}function QZ(n,e,t){var r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function ZZ(n,e,t,r,s){var o=Zd(t,r),a=o[0],i=o[1],u=new Uint8Array(t*r*4);return Ne(n,e,function(){return n.readPixels(0,0,a,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function JZ(n,e,t,r,s,o,a,i){var u=n,c=new Float32Array(function(l,h){var d=qc(l,h);return d[0]*d[1]*4}(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function eJ(n,e,t,r){var s=new Float32Array(t*r*4);return Ne(n,e,function(){return n.readPixels(0,0,r,t,n.RGBA,n.FLOAT,s)}),s}var tJ=function(){function n(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=se().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,L9(t,e)):this.gl=hs(t);var r="WEBGL_color_buffer_float";if(se().getNumber("WEBGL_VERSION")===1){if(this.textureFloatExtension=hl(this.gl,this.debug,"OES_texture_float"),yr(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=hl(this.gl,this.debug,"OES_texture_half_float");else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),yr(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=hl(this.gl,this.debug,"EXT_color_buffer_half_float");else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",yr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!yr(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=zZ(this.gl,this.debug),this.indexBuffer=VZ(this.gl,this.debug),this.framebuffer=Q9(this.gl,this.debug),this.textureConfig=py(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(n.prototype,"debug",{get:function(){return se().getBool("DEBUG")},enumerable:!0,configurable:!0}),n.prototype.dispose=function(){var e=this;if(!this.disposed){this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;Ne(t,this.debug,function(){return t.finish()}),Ne(t,this.debug,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),Ne(t,this.debug,function(){return t.deleteFramebuffer(e.framebuffer)}),Ne(t,this.debug,function(){return t.bindBuffer(t.ARRAY_BUFFER,null)}),Ne(t,this.debug,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}),Ne(t,this.debug,function(){return t.deleteBuffer(e.indexBuffer)}),this.disposed=!0}},n.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),WZ(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),UZ(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),GZ(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),XZ(this.gl,this.debug,e,t)},n.prototype.uploadDenseMatrixToTexture=function(e,t,r,s){this.throwIfDisposed(),KZ(this.gl,this.debug,e,t,r,s,this.textureConfig)},n.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),jZ(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),HZ(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(H0(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Ne(this.gl,this.debug,function(){return t.gl.deleteTexture(e)})},n.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,r){var s=this;return this.downloadMatrixDriver(e,function(){return ZZ(s.gl,s.debug,t,r,s.textureConfig)})},n.prototype.downloadPackedMatrixFromBuffer=function(e,t,r,s,o,a){return JZ(this.gl,e,0,0,0,o,a,this.textureConfig)},n.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return QZ(this.gl,e,t)},n.prototype.createBufferFromTexture=function(e,t,r){this.bindTextureToFrameBuffer(e);var s=YZ(this.gl,this.debug,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s},n.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},n.prototype.createFence=function(e){var t,r,s=this;if(se().getBool("WEBGL_FENCE_API_ENABLED")){var o=e,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=function(){var i=o.clientWaitSync(a,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=a}else se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=function(){return s.isQueryAvailable(t,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):r=function(){return!0};return{query:t,isFencePassed:r}},n.prototype.downloadMatrixFromPackedTexture=function(e,t,r){var s=this;return this.downloadMatrixDriver(e,function(){return eJ(s.gl,s.debug,t,r)})},n.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,r=U9(t,this.debug,e),s=BZ(t,this.debug),o=H9(t,this.debug);return Ne(t,this.debug,function(){return t.attachShader(o,s)}),Ne(t,this.debug,function(){return t.attachShader(o,r)}),j9(t,this.debug,o),this.debug&&Bp(t,this.debug,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=qZ(t,this.debug,this.program,this.vertexBuffer)),o},n.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ne(this.gl,this.debug,function(){return t.gl.deleteProgram(e)})},n.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Bp(this.gl,this.debug,this.program),Ne(this.gl,this.debug,function(){return t.gl.useProgram(e)})},n.prototype.getUniformLocation=function(e,t,r){return r===void 0&&(r=!0),this.throwIfDisposed(),r?J9(this.gl,this.debug,e,t):eQ(this.gl,e,t)},n.prototype.getAttributeLocation=function(e,t){var r=this;return this.throwIfDisposed(),Ne(this.gl,this.debug,function(){return r.gl.getAttribLocation(e,t)})},n.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},n.prototype.setInputMatrixTexture=function(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),tQ(this.gl,this.debug,this.program,e,t,r)},n.prototype.setOutputMatrixTexture=function(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)},n.prototype.setOutputPackedMatrixTexture=function(e,t,r){this.throwIfDisposed();var s=qc(t,r),o=s[0],a=s[1];this.setOutputMatrixTextureDriver(e,o,a)},n.prototype.setOutputMatrixWriteRegion=function(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)},n.prototype.setOutputPackedMatrixWriteRegion=function(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},n.prototype.debugValidate=function(){this.program!=null&&Bp(this.gl,this.debug,this.program),dl(this.gl)},n.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),Ne(e,this.debug,function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)})},n.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),Ne(this.gl,this.debug,function(){return e.gl.finish()})},n.prototype.getQueryTimerExtension=function(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=hl(this.gl,this.debug,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},n.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},n.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},n.prototype.beginQuery=function(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}var s=this.getQueryTimerExtensionWebGL1(),o=s.createQueryEXT();return s.beginQueryEXT(s.TIME_ELAPSED_EXT,o),o},n.prototype.endQuery=function(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")!==2){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT)}},n.prototype.waitForQueryAndGetTime=function(e){return ke(this,void 0,void 0,function(){var t=this;return Se(this,function(r){switch(r.label){case 0:return[4,Gf(function(){return t.disposed||t.isQueryAvailable(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})];case 1:return r.sent(),[2,this.getQueryTime(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}})})},n.prototype.getQueryTime=function(e,t){if(t===0)return null;if(t===2){var r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}var s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6},n.prototype.isQueryAvailable=function(e,t){if(t===0)return!0;if(t===2){var r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}return o=(s=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT),this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint},n.prototype.pollFence=function(e){var t=this;return new Promise(function(r){t.addItemToPoll(function(){return e.isFencePassed()},function(){return r()})})},n.prototype.pollItems=function(){for(var e=function(r){for(var s=0;s<r.length&&r[s]();++s);return s-1}(this.itemsToPoll.map(function(r){return r.isDoneFn})),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},n.prototype.addItemToPoll=function(e,t){var r=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||Gf(function(){return r.pollItems(),r.itemsToPoll.length===0})},n.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),zp(this.gl,this.debug,e,this.framebuffer),this.debug&&dl(this.gl)},n.prototype.unbindTextureToFrameBuffer=function(){this.outputTexture!=null?(zp(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&dl(this.gl)):H0(this.gl,this.debug,this.framebuffer)},n.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var r=t();return this.unbindTextureToFrameBuffer(),r},n.prototype.setOutputMatrixTextureDriver=function(e,t,r){this.throwIfDisposed();var s=this.gl;zp(s,this.debug,e,this.framebuffer),this.debug&&dl(s),this.outputTexture=e,Ne(s,this.debug,function(){return s.viewport(0,0,t,r)}),Ne(s,this.debug,function(){return s.scissor(0,0,t,r)})},n.prototype.setOutputMatrixWriteRegionDriver=function(e,t,r,s){var o=this;this.throwIfDisposed(),Ne(this.gl,this.debug,function(){return o.gl.scissor(e,t,r,s)})},n.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},n.prototype.throwIfNoProgram=function(){if(this.program==null)throw new Error("No GPU program is currently set.")},n}();function sb(n,e){if(n.length!==e.length)throw Error("Binary was compiled with "+n.length+" inputs, but was executed with "+e.length+" inputs");n.forEach(function(t,r){var s=t.logicalShape,o=e[r],a=o.shape;if(!Qt(s,a))throw Error("Binary was compiled with different shapes than the current args. Shapes "+s+" and "+a+" must match");if(!t.isUniform||!o.isUniform){var i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Qt(i,u))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+i+" and "+u+" must match")}})}var nJ=function(n,e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;for(var r=t.filterWidth,s=t.inChannels,o=t.strideWidth,a=t.strideHeight,i=t.padInfo,u=t.outWidth,c=t.dilationWidth,l=t.dilationHeight,h=t.dataFormat,d=i.left,p=i.top,f=s*r,m=Cn(),g=h==="channelsLast",x=g?0:1,y=g?1:2,b="",v=0;v<=1;v++)for(var w=0;w<=1;w++)b+=`
          blockIndex = rc.y + `+w+`;
          pos = rc.x + `+v+`;

          if(blockIndex < `+n[1]+" && pos < "+n[0]+`) {
            offsetY = int(blockIndex / (`+u+")) * "+a+" - "+p+`;
            d0 = offsetY + `+l+" * (pos / "+f+`);

            if(d0 < `+e[x]+` && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), `+u+".) * "+o+". - "+d+`.);
              d1 = offsetX + `+c+" * (int(mod(float(pos), "+f+".) / "+s+`.));

              if(d1 < `+e[y]+` && d1 >= 0) {

                ch = int(mod(float(pos), `+s+`.));

                if (`+g+`) {
                  innerDims = vec2(d1, ch);
                  result[`+(2*v+w)+`] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[`+(2*v+w)+`] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        `+b+`

        `+m.output+` = result;
      }
    `},rJ=function(n,e,t,r,s){this.variableNames=["x"],this.outputShape=[];var o,a=e,i=n[3]-1;this.outputShape=n;var u="float("+t+") + float("+r+") * sum";o=s===.5?"inversesqrt("+u+")":s===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+s+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -`+a+"; j <= "+a+`; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  `+i+`) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * `+o+`;
        setOutput(val);
      }
    `},sJ=function(n,e,t,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=n,this.depth=n[3],this.depthRadius=e,this.bias=t,this.alpha=r,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < `+this.depth+`; ++d) {
          int depthBegin = int(max(0.0, float(d - `+e+`)));
          int depthEnd = int(min(float(`+this.depth+`),
              float(d + `+e+` + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = `+this.depth+`;

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(`+r+") * norm + float("+t+`);

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(`+r+`)
                * float(`+s+`)
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * `+s+`);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `},oJ=function(n,e,t,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var o,a=e,i=n[3]-1;this.outputShape=n;var u="float("+t+") + float("+r+") * sum";o=s===.5?"inversesqrt("+u+")":s===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+s+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < `+this.outputShape[3]+`;
        bool hasNextRow = c < `+this.outputShape[2]+`;

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - `+a+`;
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - `+a+"; j <= "+a+`; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(`+i+`));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * `+o+`;
        setOutput(result);
      }
    `},aJ=function(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;var e=n.strideHeight,t=n.strideWidth,r=n.dilationHeight,s=n.effectiveFilterHeight,o=n.effectiveFilterWidth,a=s-1-n.padInfo.top,i=o-1-n.padInfo.left,u=s*o-1;this.userCode=`
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+s+`;
          wR += `+r+`) {
          float dyR = float(dyRCorner + wR) / `+e+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+o+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+t+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = `+u+` - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * `+o+` + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `},iJ=function(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;var e=n.strideDepth,t=n.strideHeight,r=n.strideWidth,s=n.dilationDepth,o=n.dilationHeight,a=n.dilationWidth,i=n.effectiveFilterDepth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,l=i-1-n.padInfo.front,h=u-1-n.padInfo.top,d=c-1-n.padInfo.left,p=i*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(`+l+", "+h+", "+d+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+i+`;
           wD += `+s+`) {
          float dyD = float(dyDCorner + wD) / `+e+`.0;

          if (dyD < 0.0 || dyD >= `+n.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+u+`;
              wR += `+o+`) {
            float dyR = float(dyRCorner + wR) / `+t+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+c+`;
                wC += `+a+`) {
              float dyC = float(dyCCorner + wC) / `+r+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = `+p+` -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * `+u+" * "+c+` +
                  wR * `+c+` + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `},Hp=function(n,e,t,r,s,o,a){t===void 0&&(t=!1),r===void 0&&(r=!1),s===void 0&&(s=!1),o===void 0&&(o=null),a===void 0&&(a=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;var i=t?n[1]:n[2],u=Math.ceil(i/2),c=t?"i * 2, rc.y":"rc.y, i * 2",l=r?"rc.z, i * 2":"i * 2, rc.z",h=t?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",f="";o&&(p=a?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+o+`
        }`:`vec4 activation(vec4 x) {
          `+o+`
        }`,f="result = activation(result);");var m=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+p+`

      const float sharedDimension = `+u+`.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < `+u+`; i++) {
          vec4 a = getMatrixA(rc.x, `+c+`);
          vec4 b = getMatrixB(rc.x, `+l+`);

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (`+h[0]+" * "+d[0]+`);
          result += (`+h[1]+" * "+d[1]+`);
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        `+m+`

        `+f+`

        setOutput(result);
      }
    `},uJ=function(){function n(e,t,r){this.variableNames=["probs"],this.outputShape=[e,r],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < `+(t-1)+`; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(`+(t-1)+`));
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;return function(r,s){t.seedLoc==null&&(t.seedLoc=r.getUniformLocation(s,"seed")),r.gl.uniform1f(t.seedLoc,e)}},n}(),cJ=function(n,e,t,r){this.variableNames=["indices"],this.outputShape=[n,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(`+r+"), float("+t+`),
                      float(index == coords.y)));
      }
    `},lJ=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=n;var e=n.length;if(e===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{var t=Bn("rc",e),r=mt(e),s=function(i,u,c){if(i===1)return"rc > "+u[0];for(var l="",h=i-2;h<i;h++)l+=c[h]+" >= "+u[h],h<i-1&&(l+="||");return l}(e,n,t),o=function(i,u,c,l){if(i===1)return"";var h=l.slice(-2);return`
    int r = `+h[0]+`;
    int c = `+h[1]+`;
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= `+u+`;
    bool rEdge = rp1 >= `+c+`;
  `}(e,n[n.length-1],n[n.length-2],t),a=function(i,u){var c=i.length,l=function(h,d){for(var p=[],f=0;f<=1;f++)for(var m=0;m<=1;m++){for(var g=(f===0?"r":"rp1")+", "+(m===0?"c":"cp1"),x=2;x<h;x++)g=d[d.length-1-x]+","+g;p.push(g)}return p}(c,u);return c===1?`getA(rc),
            rc + 1 >= `+i[0]+` ? 0. : getA(rc + 1),
            0, 0`:"getA("+l[0]+`),
          cEdge ? 0. : getA(`+l[1]+`),
          rEdge ? 0. : getA(`+l[2]+`),
          rEdge || cEdge ? 0. : getA(`+l[3]+")"}(n,t);this.userCode=`
        void main() {
          `+r+` rc = getOutputCoords();

          if(`+s+`) {
            setOutput(vec4(0));
          } else {
            `+o+`

            setOutput(vec4(`+a+`));
          }
        }
      `}},hJ=function(n,e,t){this.variableNames=["x"],this.outputShape=e.map(function(u,c){return u[0]+n[c]+u[1]});var r=n.length,s=mt(r),o=e.map(function(u){return u[0]}).join(","),a=e.map(function(u,c){return u[0]+n[c]}).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=r!==1?`
      `+s+" start = "+s+"("+o+`);
      `+s+" end = "+s+"("+a+`);

      void main() {
        `+s+` outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(`+t+`));
        } else {
          `+s+` coords = outC - start;
          setOutput(getX(`+i+`));
        }
      }
    `:`
        int start = `+o+`;
        int end = `+a+`;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(`+t+`));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `},dJ=function(n,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(function(g,x){return g[0]+n[x]+g[1]});for(var r=n.length,s=mt(r),o=e.map(function(g){return g[0]}).join(","),a=e.map(function(g,x){return g[0]+n[x]}).join(","),i=Bn("rc",r),u=Bn("source",r),c=i[r-1]+" < "+this.outputShape[r-1],l=r===1?"source":"vec2("+u.slice(-2).join()+")",h=[s+" rc = outputLoc;",i[r-1]+` += 1;
       if(`+c+`) {
      `,r===1?"":`}
       rc = outputLoc;
       `+i[r-2]+` += 1;
       if(`+i[r-2]+" < "+this.outputShape[r-2]+") {",r===1?"":"  "+i[r-1]+` += 1;
         if(`+c+") {"],d=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",f=0,m=r===1?2:4;f<m;f++)p+=`
        `+h[f]+`
        if (`+d+`) {
          result[`+f+"] = float("+t+`);
        } else {
          `+s+` source = rc - start;
          result[`+f+"] = getChannel(getX("+u.join()+"), "+l+`);
        }
      `;p+=r===1?"} ":"}}",this.userCode=`
      const `+s+" start = "+s+"("+o+`);
      const `+s+" end = "+s+"("+a+`);

      void main() {
        `+s+` outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        `+p+`
        setOutput(result);
      }
    `},au=function(n,e,t,r,s){if(r===void 0&&(r=!1),s===void 0&&(s=!1),this.variableNames=["x"],e==="avg"&&t)throw new Error("Cannot compute positions for average pool.");var o=n.filterWidth,a=n.strideHeight,i=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,l=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.top,p=n.padInfo.left;this.outputShape=n.outShape;var f=e==="avg",m="((batch  * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + d",g="(xR * "+n.inWidth+" + xC) * "+n.inChannels+" + d",x="0.0";if(f||(x="-1.0 / 1e-20"),t)this.userCode=`
        const ivec2 strides = ivec2(`+a+", "+i+`);
        const ivec2 pads = ivec2(`+d+", "+p+`);

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < `+l+`;
              wR += `+u+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+h+`;
                wC += `+c+`) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = `+(r?s?m:g:"wR * "+h+" + wC")+`;
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var y=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="avg"&&(y="avgValue / count");var b=4*Math.floor(o/4),v=o%4,w=`
      if (`+f+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(`+a+", "+i+`);
      const ivec2 pads = ivec2(`+d+", "+p+`);
      const float initializationValue = `+x+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= `+n.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+x+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < `+l+`;
            wR += `+u+`) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= `+n.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+b+`; wC += 4) {
            int xC = xCCorner + wC * `+c+`;

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              getValue(batch, xR, xC + 2 * `+c+`, d),
              getValue(batch, xR, xC + 3 * `+c+`, d)
            );

            `+w+`
          }

          int xC = xCCorner + `+b+`;
          if (`+(v===1)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            `+w+`
          } else if (`+(v===2)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              initializationValue,
              initializationValue
            );

            `+w+`
          } else if (`+(v===3)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              getValue(batch, xR, xC + 2 * `+c+`, d),
              initializationValue
            );

            `+w+`
          }
        }
        setOutput(`+y+`);
      }
    `}},jp=function(n,e,t,r,s){if(r===void 0&&(r=!1),s===void 0&&(s=!1),this.variableNames=["x"],e==="avg"&&t)throw new Error("Cannot compute positions for average pool.");var o=n.filterWidth,a=n.strideDepth,i=n.strideHeight,u=n.strideWidth,c=n.dilationDepth,l=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=n.padInfo.front,g=n.padInfo.top,x=n.padInfo.left;this.outputShape=n.outShape;var y=e==="avg",b="0.0";if(y||(b="-1.0 / 1e-20"),t)this.userCode=`
        const ivec3 strides =
            ivec3(`+a+", "+i+", "+u+`);
        const ivec3 pads = ivec3(`+m+", "+g+", "+x+`);

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < `+d+`;
              wD += `+c+`) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= `+n.inDepth+`) {
              continue;
            }

            for (int wR = 0; wR < `+p+`;
                wR += `+l+`) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= `+n.inHeight+`) {
                continue;
              }

              for (int wC = 0; wC < `+f+`;
                  wC += `+h+`) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= `+n.inWidth+`) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = `+(r?s?"(((batch * "+n.inDepth+" + xD) * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + ch":"((xD * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + ch":"wD * "+p+" * "+f+` +
                      wR * `+f+" + wC")+`;
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var v=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="avg"&&(v="avgValue / count");var w=4*Math.floor(o/4),C=o%4,I=`
      if (`+y+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(`+a+", "+i+", "+u+`);
      const ivec3 pads = ivec3(`+m+", "+g+", "+x+`);
      const float initializationValue = `+b+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= `+n.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+b+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < `+d+`;
            wD += `+c+`) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= `+n.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+p+`;
            wR += `+l+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+w+`; wC += 4) {
              int xC = xCCorner + wC * `+h+`;

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+h+`, ch),
                getValue(batch, xD, xR, xC + 3 * `+h+`, ch)
              );

              `+I+`
            }

            int xC = xCCorner + `+w+`;
            if (`+(C===1)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              `+I+`
            } else if (`+(C===2)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                initializationValue,
                initializationValue
              );

              `+I+`
            } else if (`+(C===3)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+h+`, ch),
                initializationValue
              );

              `+I+`
            }
          }
          setOutput(`+v+`);
        }
      }
    `}},pJ=function(n,e){this.variableNames=["x"];var t=n.windowSize,r=n.batchSize,s=n.inSize,o=Math.ceil(s/t);this.outputShape=[r,o];var a="0.0",i="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",i="min"):e==="max"&&(a="-1.0 / 1e-20",i="max");var u=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");var c=4*Math.floor(t/4),l=t%4,h=`
      if (`+(e==="sum")+`) {
        sumValue += dot(values, ones);
      } else if (`+(e==="prod")+`) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = `+i+`(values, minMaxValue);
      }
    `,d="vec4";e==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");var p="";s%t>0&&(p=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = `+a+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        `+p+`
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+t+`;

        vec4 minMaxValue = vec4(`+a+`);
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < `+c+`; i += 4) {
          int inIdx = inOffset + i;
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          `+h+`
        }

        int inIdx = inOffset + `+c+`;
        if (`+(l===1)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===2)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===3)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          `+h+`
        }
        setOutput(`+u+`);
      }
    `},fJ=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;for(var t="",r=0;r<4;r++){var s="thisRC = rc;";r%2==1&&(s+="thisRC.z += 1;"),r>1&&(s+="thisRC.y += 1;"),t+=`
        `+s+`
        `+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+`
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[`+r+`] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        `+(r>0?"}":"")+`
      `}this.userCode=`
      
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      `+Oo(["r","c","d"],e)+`
      return ivec3(r, c, d);
    }
  
      `+Ty(n)+`

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = `+n[1]+`;
        int cols = `+n[2]+`;

        `+t+`

        setOutput(result);
      }
    `},mJ=function(n,e,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,s=r[1],o=r[2],a=n.shape,i=a[1],u=a[2],c=[t&&i>1?s-1:s,t&&u>1?o-1:o],l=[t&&i>1?i-1:i,t&&u>1?u-1:u],h=c[0]/l[0],d=c[1]/l[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+d+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+f+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+g+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+i+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), `+(s-1)+`.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), `+(o-1)+`.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},gJ=function(n,e,t,r){this.variableNames=["A"],this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+o+".0, "+a+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `},xJ=function(n,e,t,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`,
          `+u[1]/c[1]+`);
      const vec3 inputShapeRC = vec3(`+o+".0, "+a+`.0,
                                     `+a+`.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < `+(i-1)+`;
        bool hasNextRow = coords.z < `+(t-1)+`;

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `},yJ=function(n,e,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,s=r[1],o=r[2],a=n.shape,i=a[1],u=a[2],c=[t&&i>1?s-1:s,t&&u>1?o-1:o],l=[t&&i>1?i-1:i,t&&u>1?u-1:u],h=c[0]/l[0],d=c[1]/l[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+d+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+f+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+g+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+i+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float sourceFracRow =
              float(`+c[0]+`) *
                (float(dyR) / float(`+l[0]+`));

            float sourceFracCol =
                float(`+c[1]+`) *
                  (float(dyC) / float(`+l[1]+`));

            int sourceNearestRow = int(min(
                float(int(`+s+`) - 1),
                `+t+` ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(`+o+`) - 1),
                `+t+` ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},vJ=function(n,e,t,r){this.variableNames=["A"],this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t],l=r?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+o+".0, "+a+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + `+l+`)));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `},bJ=function(n,e){this.variableNames=["x"];var t=n.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");if(this.outputShape=n,t!==1){var r=n.map(function(o,a){return function(i){return e.indexOf(i)!==-1&&n[i]!==1?n[i]+" - coords["+i+"] - 1":"coords["+i+"]"}(a)}).join(","),s=mt(t);this.userCode=`
      void main() {
        `+s+` coords = getOutputCoords();
        setOutput(getX(`+r+`));
      }
    `}else this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(`+n[0]+` - coord - 1));
        }
      `},wJ=function(n,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var t=n.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");this.outputShape=n;var r=Bn("rc",t),s=r[t-1]+" + 1 < "+this.outputShape[t-1],o=r[t-2]+" + 1 < "+this.outputShape[t-2],a=mt(t);function i(u){var c=n.map(function(l,h){return function(d,p){return e.indexOf(d)!==-1&&n[d]!==1?n[d]+" - "+p[d]+" - 1":""+p[d]}(h,u)});return"getChannel(getX("+c.join(",")+"), vec2("+c.slice(-2).join(",")+"))"}this.userCode=t===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(`+n[0]+` - rc - 1),
            `+n[0]+` - rc - 1);
          if(`+s+`){
              result.g = getChannel(getX(`+n[0]+` - (rc  + 1) - 1),
                `+n[0]+` - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          `+a+` rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = `+function(u){return i(u)}(r.slice())+`;
          if(`+s+`){
            result.g = `+function(u){return u[t-1]="("+u[t-1]+" + 1)",i(u)}(r.slice())+`;
          }
          if(`+o+`) {
            result.b = `+function(u){return u[t-2]="("+u[t-2]+" + 1)",i(u)}(r.slice())+`;
            if(`+s+`) {
              result.a = `+function(u){return u[t-1]="("+u[t-1]+" + 1)",u[t-2]="("+u[t-2]+" + 1)",i(u)}(r.slice())+`;
            }
          }
          setOutput(result);
        }
    `},ob=function(n,e,t,r,s,o,a){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;var i=mt(s.length),u=mt(o.length),c="";t===1?c="i":t===2&&(c="i, j");var l="getIndices("+c+")",h="";r===1?h="i":r===2&&(h="i, coords[1]");var d="getUpdates("+h+")",p=e>1?"strides[j]":"strides";this.userCode=`
        `+i+" strides = "+i+"("+s+`);

        void main() {
          `+u+` coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < `+n+`; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < `+e+`; j++) {
              int index = round(`+l+`);
              flattenedIndex += index * `+p+`;
            }
            if (flattenedIndex == coords[0]) {
              sum += `+d+`;
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `},CJ=function(n,e){this.variableNames=["x","segmentIds"];var t=n.windowSize,r=n.batchSize,s=n.inSize,o=n.numSegments,a=o*Math.ceil(s/t);this.outputShape=[r,a];var i=4*Math.floor(t/4),u=t%4,c=`
        sumValue += dot(values, segFilter);
    `,l="";s%t>0&&(l=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return initializationValue;
        }
      `);var h="";s%t>0&&(h=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        `+l+`
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        `+h+`
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          `+o+")) * float("+t+`));
        int currentSeg = int(mod(float(outIdx), float(`+o+`)));

        float sumValue = 0.0;

        for (int i = 0; i < `+i+`; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          `+c+`
        }

        int inIdx = inOffset + `+i+`;
        if (`+(u===1)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          `+c+`
        } else if (`+(u===2)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          `+c+`
        } else if (`+(u===3)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          `+c+`
        }
        setOutput(sumValue);
      }
    `},IJ=function(n,e,t){var r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,t>4)throw Error("Where for rank "+t+" is not yet supported");if(t===1)s="resRC",r="resRC";else{for(var o=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[],u=0;u<e.length;u++)i.push(""+o[u]),u<n&&a.push(""+o[u]);r=a.join(),s=i.join()}var c=mt(t);this.userCode=`
      void main() {
        `+c+` resRC = getOutputCoords();
        float cVal = getC(`+r+`);
        if (cVal >= 1.0) {
          setOutput(getA(`+s+`));
        } else {
          setOutput(getB(`+s+`));
        }
      }
    `},kJ=function(){function n(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,r=mt(this.rank),s="uniform int start["+this.rank+"];",o=function(a){if(a===1)return"sourceLoc";if(a<=6)return qp.slice(0,a).map(function(i){return"sourceLoc."+i}).join(",");throw Error("Slicing for rank "+a+" is not yet supported")}(this.rank);t=`
        `+r+` sourceLoc;
        `+r+` coords = getOutputCoords();
        `+e.map(function(a,i){return"sourceLoc."+qp[i]+" = start["+i+"] + coords."+qp[i]+";"}).join(`
`)+`
      `,this.userCode=`
      `+s+`
      void main() {
        `+t+`
        setOutput(getSource(`+o+`));
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(r,s){t.startLoc==null&&(t.startLoc=r.getUniformLocationNoThrow(s,"start"),t.startLoc==null)||r.gl.uniform1iv(t.startLoc,e)}},n}(),qp=["x","y","z","w","u","v"],SJ=function(){function n(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=mt(this.rank),r=Bn("coords",this.rank),s=Bn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":"vec2("+s.slice(-2).join()+")",a="getChannel(getSource("+s.join()+"), "+o+")",i=`
      result.x = `+a+`;
      if (++`+r[this.rank-1]+" < "+e[this.rank-1]+`) {
        ++`+s[this.rank-1]+`;
        result.y = `+a+`;
        --`+s[this.rank-1]+`;
      }
    `,u=this.rank===1?"":`
      --`+r[this.rank-1]+`;
      if (++`+r[this.rank-2]+" < "+e[this.rank-2]+`) {
        ++`+s[this.rank-2]+`;
        result.z = `+a+`;
        if (++`+r[this.rank-1]+" < "+e[this.rank-1]+`) {
          ++`+s[this.rank-1]+`;
          result.w = `+a+`;
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            `+t+"("+e.map(function(l,h){return"start["+h+"]"}).join()+");":e.map(function(l,h){return s[h]+" = "+r[h]+" + start["+h+"];"}).join(`
`);this.userCode=`
      uniform int start[`+this.rank+`];
      void main() {
        `+t+` coords = getOutputCoords();
        `+t+` sourceLoc;
        `+c+`
        vec4 result = vec4(0.);
        `+i+`
        `+u+`
        setOutput(result);
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(r,s){t.startLoc==null&&(t.startLoc=r.getUniformLocationNoThrow(s,"start"),t.startLoc==null)||r.gl.uniform1iv(t.startLoc,e)}},n}(),NJ=function(n,e,t){this.variableNames=["x"],this.outputShape=t;var r=t.length,s=mt(t.length),o=mt(t.length),a="";if(r===1)a="coords * strides + begin";else{var i=0;a=t.map(function(u,c){return i++,t.length===1?"coords * strides["+c+"] + begin["+c+"]":"coords["+(i-1)+"] * strides["+c+"] + begin["+c+"]"}).join(",")}this.userCode=`
      `+s+" begin = "+s+"("+n+`);
      `+s+" strides = "+s+"("+e+`);

      void main() {
        `+o+` coords = getOutputCoords();
        setOutput(getX(`+a+`));
      }
    `},TJ=function(){function n(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return n.prototype.acquireTexture=function(e,t,r){var s,o=ab(t,r),a=ib(e,o,r);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[a].shift();return this.usedTextures[a].push(i),i}return this.numUsedTextures++,this.log(),o===Qn.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Qn.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Qn.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Qn.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Qn.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),s},n.prototype.releaseTexture=function(e,t,r,s){if(this.freeTextures!=null){var o=ib(t,ab(r,s),s);o in this.freeTextures||(this.freeTextures[o]=[]),this.freeTextures[o].push(e),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[o],i=a.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(i,1),this.log()}},n.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},n.prototype.getNumUsedTextures=function(){return this.numUsedTextures},n.prototype.getNumFreeTextures=function(){return this.numFreeTextures},n.prototype.dispose=function(){var e=this;if(this.freeTextures!=null){for(var t in this.freeTextures)this.freeTextures[t].forEach(function(r){e.gpgpu.deleteMatrixTexture(r)});for(var t in this.usedTextures)this.usedTextures[t].forEach(function(s){e.gpgpu.deleteMatrixTexture(s)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},n}();function ab(n,e){if(n===tr.UPLOAD)return Qn.PACKED_2X2_FLOAT32;if(n===tr.RENDER||n==null)return function(t){return se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Qn.PACKED_2X2_FLOAT32:Qn.UNPACKED_FLOAT32:t?Qn.PACKED_2X2_FLOAT16:Qn.UNPACKED_FLOAT16}(e);if(n===tr.DOWNLOAD||n===tr.PIXELS)return Qn.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+n)}function ib(n,e,t){return n[0]+"_"+n[1]+"_"+e+"_"+t}var EJ=function(n,e){this.variableNames=["A"];for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[r]*e[r];this.outputShape=t,this.rank=t.length;var s=mt(this.rank),o=function(a){var i=a.length;if(i>5)throw Error("Tile for rank "+i+" is not yet supported");if(i===1)return"imod(resRC, "+a[0]+")";for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],c=[],l=0;l<a.length;l++)c.push("imod("+u[l]+", "+a[l]+")");return c.join()}(n);this.userCode=`
      void main() {
        `+s+` resRC = getOutputCoords();
        setOutput(getA(`+o+`));
      }
    `},Ey=1.7580993408473768,Ry=1.0507009873554805,Ve=function(n,e){this.variableNames=["A"],this.outputShape=n,this.userCode=`
      float unaryOperation(float x) {
        `+e+`
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `},Ur="if (isnan(x)) return x;",RJ="return x;",ub="return abs(x);",YN=Ur+`
  return (x < 0.0) ? 0.0 : x;
`,QN=Ur+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ZN="return (x >= 0.0) ? x : (exp(x) - 1.0);",$J=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = `+Ey+`;
  float scale = `+Ry+`;
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,cb="return -x;",lb="return ceil(x);",hb="return floor(x);",db="return exp(x);",pb="return exp(x) - 1.0;",AJ=Ur+`
  return sin(x);
`,DJ=Ur+`
  return cos(x);
`,FJ=Ur+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,OJ=Ur+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,_J=Ur+`
  return atan(x);
`,MJ=Ur+"return log(x + sqrt(x * x + 1.0));",LJ=Ur+`
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`,PJ=Ur+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,gl="return x;",BJ="return x;",JN=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eT=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tT=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Hi=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        `+e+`
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `},zJ=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=n;var e=n.length,t=Bn("rc",e),r=mt(e),s=function(i,u){if(i===1)return"rc";for(var c="",l=0;l<i;l++)c+=u[l],l<i-1&&(c+=",");return c}(e,t),o=t.slice(-2),a=e<=1?"rc":"vec2("+o.join(",")+")";this.userCode=`
      void main() {
        `+r+` rc = getOutputCoords();
        vec4 packedInput = getA(`+s+`);

        setOutput(getChannel(packedInput, `+a+`));
      }
    `},xl={};function yl(n,e){if(e===void 0&&(e=!1),n==="linear")return e?BJ:RJ;if(n==="relu")return e?JN:YN;if(n==="elu")return e?tT:ZN;if(n==="relu6")return e?eT:QN;if(n==="prelu")return e?XN:KN;throw new Error("Activation "+n+" has not been implemented for the WebGL backend.")}var VJ=600,WJ=function(n){function e(t){var r,s=n.call(this)||this;if(s.pendingRead=new WeakMap,s.pendingDisposal=new WeakSet,s.dataRefCount=new WeakMap,s.numBytesInGPU=0,s.uploadWaitMs=0,s.downloadWaitMs=0,s.warnedAboutMemory=!1,s.pendingDeletes=0,s.disposed=!1,!se().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){var o=hs(se().getNumber("WEBGL_VERSION"));s.binaryCache=((r=se().getNumber("WEBGL_VERSION"))in xl||(xl[r]={}),xl[r]),s.gpgpu=new tJ(o),s.canvas=o.canvas,s.gpgpuCreatedLocally=!0}else s.gpgpu=t,s.binaryCache={},s.gpgpuCreatedLocally=!1,s.canvas=t.gl.canvas;return s.textureManager=new TJ(s.gpgpu),s.numMBBeforeWarning=se().global.screen==null?1024:se().global.screen.height*se().global.screen.width*window.devicePixelRatio*VJ/1024/1024,s.texData=new MN(s,G),s}return Wr(e,n),e.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},e.prototype.write=function(t,r,s){if(se().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var o={};return this.texData.set(o,{shape:r,dtype:s,values:t,usage:tr.UPLOAD}),o},e.prototype.move=function(t,r,s,o){if(se().getBool("DEBUG")&&this.checkNumericalProblems(r),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:o,values:r,usage:tr.UPLOAD})},e.prototype.readSync=function(t){var r=this.texData.get(t),s=r.values,o=r.dtype,a=r.complexTensors,i=r.slice,u=r.shape,c=r.isPacked;if(i!=null){var l=void 0;l=c?new Hi(u,gl):new Ve(u,gl);var h=this.runWebGLProgram(l,[{dataId:t,shape:u,dtype:o}],o),d=this.readSync(h.dataId);return this.disposeData(h.dataId),d}if(s!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return s;var p,f,m=this.activeTimers!=null;return m&&(p=$r()),o==="complex64"?f=Jf(a.real.dataSync(),a.imag.dataSync()):f=this.getValuesFromTexture(t),m&&(this.downloadWaitMs+=$r()-p),this.convertAndCacheOnCPU(t,f)},e.prototype.read=function(t){return ke(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v,w,C,I,k;return Se(this,function(S){switch(S.label){case 0:if(this.pendingRead.has(t))return r=this.pendingRead.get(t),[2,new Promise(function(N){return r.push(N)})];if(s=this.texData.get(t),o=s.values,a=s.shape,i=s.slice,u=s.dtype,c=s.complexTensors,l=s.isPacked,i!=null)return h=void 0,h=l?new Hi(a,gl):new Ve(a,gl),d=this.runWebGLProgram(h,[{dataId:t,shape:a,dtype:u}],u),p=this.read(d.dataId),this.disposeData(d.dataId),[2,p];if(o!=null)return[2,this.convertAndCacheOnCPU(t)];if(!se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&se().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return f=null,u!=="complex64"&&se().get("WEBGL_BUFFER_SUPPORTED")&&(m=this.decode(t),g=this.texData.get(m.dataId),f=(k=this.gpgpu).createBufferFromTexture.apply(k,[g.texture].concat(su(a)))),this.pendingRead.set(t,[]),u==="complex64"?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:S.sent(),S.label=2;case 2:return u!=="complex64"?[3,4]:[4,Promise.all([c.real.data(),c.imag.data()])];case 3:return y=S.sent(),b=y[0],v=y[1],x=Jf(b,v),[3,5];case 4:f==null?x=this.getValuesFromTexture(t):(w=be(a),x=this.gpgpu.downloadFloat32MatrixFromBuffer(f,w)),S.label=5;case 5:return m!=null&&this.disposeData(m.dataId),C=this.convertAndCacheOnCPU(t,x),I=this.pendingRead.get(t),this.pendingRead.delete(t),I.forEach(function(N){return N(C)}),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),[2,C]}})})},e.prototype.checkNumericalProblems=function(t){if(t!=null)for(var r=0;r<t.length;r++){var s=t[r];if(!z9(s))throw se().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error("The value "+s+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'"):Error("The value "+s+" cannot be represented on this device.")}},e.prototype.getValuesFromTexture=function(t){var r,s=this.texData.get(t),o=s.shape,a=s.dtype,i=s.isPacked,u=be(o);if(se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var c=this.decode(t),l=this.texData.get(c.dataId),h=(r=this.gpgpu).downloadMatrixFromPackedTexture.apply(r,[l.texture].concat(su(o))).subarray(0,u);return this.disposeData(c.dataId),h}var d=se().getBool("WEBGL_PACK")&&i===!0,p=d?Vp(o):o,f=d?new AZ(p):new $Z(p),m=this.runWebGLProgram(f,[{shape:p,dtype:a,dataId:t}],"float32"),g=this.texData.get(m.dataId),x=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(g.texture,g.texShape[0],g.texShape[1]).subarray(0,u);return this.disposeData(m.dataId),x},e.prototype.time=function(t){return ke(this,void 0,void 0,function(){var r,s,o,a,i,u,c;return Se(this,function(l){switch(l.label){case 0:return r=this.activeTimers,s=[],o=!1,this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,t(),a=na(this.activeTimers.map(function(h){return h.query})).filter(function(h){return h!=null}),i=na(this.activeTimers.map(function(h){return h.name})).filter(function(h){return h!=null}),this.activeTimers=r,o&&(this.programTimersStack=null),u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return c=l.sent(),u.kernelMs=TS(c),u.getExtraProfileInfo=function(){return c.map(function(h,d){return{name:i[d],ms:h}}).map(function(h){return h.name+": "+h.ms}).join(", ")},[3,3];case 2:u.kernelMs={error:"WebGL query timers are not supported in this environment."},l.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,u]}})})},e.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},e.prototype.startTimer=function(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:$r(),endMs:null}},e.prototype.endTimer=function(t){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=$r(),t)},e.prototype.getQueryTime=function(t){return ke(this,void 0,void 0,function(){var r;return Se(this,function(s){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(t)]:[2,(r=t).endMs-r.startMs]})})},e.prototype.disposeData=function(t){if(!this.pendingDisposal.has(t)){if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(this.texData.has(t)){this.releaseGPUData(t);var r=this.texData.get(t).complexTensors;r!=null&&(r.real.dispose(),r.imag.dispose()),this.texData.delete(t)}}},e.prototype.releaseGPUData=function(t){var r=this.texData.get(t),s=r.texture,o=r.dtype,a=r.texShape,i=r.usage,u=r.isPacked,c=r.slice,l=c&&c.origDataId||t,h=this.dataRefCount.get(l);h>1?this.dataRefCount.set(l,h-1):(this.dataRefCount.delete(l),s!=null&&(this.numBytesInGPU-=this.computeBytes(a,o),this.textureManager.releaseTexture(s,a,i,u)));var d=this.texData.get(t);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null},e.prototype.getTexture=function(t){return this.uploadToGPU(t),this.texData.get(t).texture},e.prototype.getDataInfo=function(t){return this.texData.get(t)},e.prototype.getCPUBackend=function(){return se().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=G.findBackend("cpu")),this.cpuBackend):null},e.prototype.shouldExecuteOnCPU=function(t,r){var s=this;return r===void 0&&(r=128),this.getCPUBackend()!=null&&t.every(function(o){return s.texData.get(o.dataId).texture==null&&be(o.shape)<r})},e.prototype.getGPGPUContext=function(){return this.gpgpu},e.prototype.complex=function(t,r){var s=this.makeOutput(t.shape,"complex64");return this.texData.get(s.dataId).complexTensors={real:G.keep(t.clone()),imag:G.keep(r.clone())},s},e.prototype.real=function(t){return this.texData.get(t.dataId).complexTensors.real.clone()},e.prototype.imag=function(t){return this.texData.get(t.dataId).complexTensors.imag.clone()},e.prototype.slice=function(t,r,s){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,r,s);if(be(s)===0)return nn([],s,t.dtype);var o=this.texData.get(t.dataId).isPacked,a=FN(t.shape,r,s);if(o||!a){var i=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SJ(s):new kJ(s),u=i.getCustomSetupFunc(r);return this.compileAndRun(i,[t],null,u)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,r,s)},e.prototype.shallowSlice=function(t,r,s){var o=this.texData.get(t.dataId),a=this.makeOutput(s,t.dtype),i=this.texData.get(a.dataId);Object.assign(i,o),i.shape=s,i.dtype=t.dtype;var u=ON(r,t.strides);o.slice&&(u+=o.slice.flatOffset),i.slice={flatOffset:u,origDataId:o.slice&&o.slice.origDataId||t.dataId};var c=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,c+1),a},e.prototype.stridedSlice=function(t,r,s,o){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,r,s,o);var a=Cy(r,s,o);if(a.some(function(u){return u===0}))return nn([],a);var i=new NJ(r,o,a);return this.compileAndRun(i,[t])},e.prototype.reverse=function(t,r){var s=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wJ(t.shape,r):new bJ(t.shape,r);return this.compileAndRun(s,[t])},e.prototype.concat=function(t,r){if(t[0].dtype==="complex64"){var s=t.map(function(p){return Jn(p)}),o=t.map(function(p){return Ar(p)});return tn(this.concat(s,r),this.concat(o,r))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,r);if(t.length===1)return t[0];if(t.length>se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(t.length/2),i=this.concat(t.slice(0,a),r),u=this.concat(t.slice(a),r);return this.concat([i,u],r)}if(se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){var c=new gZ(t.map(function(p){return p.shape}),r);return this.compileAndRun(c,t)}var l=ci(t.map(function(p){return p.shape}),r),h=t.map(function(p){return p.as2D(-1,be(p.shape.slice(r)))}),d=new mZ(h.map(function(p){return p.shape}));return this.compileAndRun(d,h).reshape(l)},e.prototype.neg=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,cb,t.dtype);var r=new Ve(t.shape,cb);return this.compileAndRun(r,[t])},e.prototype.batchMatMul=function(t,r,s,o){var a=s?t.shape[2]:t.shape[1],i=o?r.shape[1]:r.shape[2],u=s?t.shape[1]:t.shape[2],c=t.shape[0];if((a===1||i===1)&&u>1e3){s&&(t=hr(t,[0,2,1])),o&&(r=hr(r,[0,2,1]));var l=i===1?t:t.as3D(c,u,1),h=i===1?2:1,d=i===1?r.as3D(c,1,u):r;return this.multiply(l,d).sum(h,!0)}var p=ln(t.dtype,r.dtype),f=new Hp(t.shape,[c,a,i],s,o);return this.compileAndRun(f,[t,r],p)},e.prototype.fusedBatchMatMul=function(t){var r=t.a,s=t.b,o=t.transposeA,a=t.transposeB,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=o?r.shape[2]:r.shape[1],h=a?s.shape[1]:s.shape[2],d=r.shape[0],p=ln(r.dtype,s.dtype),f=i!=null,m=c!=null,g=u?yl(u,!0):null,x=new Hp(r.shape,[d,l,h],o,a,f,g,m),y=[r,s];return i&&y.push(i),c&&y.push(c),this.compileAndRun(x,y,p)},e.prototype.multiply=function(t,r){if(t.dtype==="complex64"){var s=this.texData.get(t.dataId),o=this.texData.get(r.dataId),a=new Q0(uZ,t.shape,r.shape),i=new Q0(cZ,t.shape,r.shape),u=[this.makeComplexComponentTensorInfo(t,s.complexTensors.real),this.makeComplexComponentTensorInfo(t,s.complexTensors.imag),this.makeComplexComponentTensorInfo(r,o.complexTensors.real),this.makeComplexComponentTensorInfo(r,o.complexTensors.imag)],c=this.compileAndRun(a,u),l=this.compileAndRun(i,u),h=this.complex(c,l);return c.dispose(),l.dispose(),h}if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.multiply(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,Z0,t.dtype);var d=new Nt(Z0,t.shape,r.shape);return this.compileAndRun(d,[t,r],t.dtype)},e.prototype.batchNormalization=function(t,r,s,o,a,i){var u=[t,r,s],c=null;i!=null&&(c=i.shape,u.push(i));var l=null;if(a!=null&&(l=a.shape,u.push(a)),se().getBool("WEBGL_PACK_NORMALIZATION")){var h=new iZ(t.shape,r.shape,s.shape,c,l,o);return this.compileAndRun(h,u)}var d=new aZ(t.shape,r.shape,s.shape,c,l,o);return this.compileAndRun(d,u)},e.prototype.localResponseNormalization4D=function(t,r,s,o,a){var i=se().getBool("WEBGL_PACK_NORMALIZATION")?new oJ(t.shape,r,s,o,a):new rJ(t.shape,r,s,o,a);return this.compileAndRun(i,[t])},e.prototype.LRNGrad=function(t,r,s,o,a,i,u){var c=new sJ(r.shape,o,a,i,u);return this.compileAndRun(c,[r,s,t])},e.prototype.tile=function(t,r){if(t.dtype==="string"){var s=this.readSync(t.dataId).map(function(a){return Cu(a)});return UN(Pe(t.shape,t.dtype,s),r)}var o=new EJ(t.shape,r);return this.compileAndRun(o,[t])},e.prototype.pad=function(t,r,s){var o=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dJ(t.shape,r,s):new hJ(t.shape,r,s);return this.compileAndRun(o,[t])},e.prototype.gather=function(t,r,s){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.gather(t,r,s);var o=new LZ(t.shape,r.size,s);return this.compileAndRun(o,[t,r])},e.prototype.batchToSpaceND=function(t,r,s){D(t.rank<=4,function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"});var o=r.reduce(function(h,d){return h*d}),a=lh(t.shape,r,o),i=hh(a.length,r.length),u=dh(t.shape,r,o),c=KS(s,r.length),l=XS(u,s,r.length);return hr(t.reshape(a),i).reshape(u).slice(c,l)},e.prototype.spaceToBatchND=function(t,r,s){D(t.rank<=4,function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"});var o=r.reduce(function(d,p){return d*p}),a=[[0,0]];a.push.apply(a,s);for(var i=1+r.length;i<t.shape.length;++i)a.push([0,0]);var u=t.pad(a),c=lh(u.shape,r,o,!1),l=hh(c.length,r.length,!1),h=dh(u.shape,r,o,!1);return hr(u.reshape(c),l).reshape(h)},e.prototype.reduce=function(t,r,s){var o=t.shape[0],a=t.shape[1],i=Wp(a),u=new pJ({windowSize:i,inSize:a,batchSize:o},r),c=this.compileAndRun(u,[t],s);return c.shape[1]===1?c:this.reduce(c,r,s)},e.prototype.argReduce=function(t,r,s){s===void 0&&(s=null);var o=t.shape[0],a=t.shape[1];s!=null&&(o=s.shape[0],a=s.shape[1]);var i=Wp(a),u=new QQ({windowSize:i,inSize:a,batchSize:o},r,s==null),c=[t];s!=null&&c.push(s);var l=this.compileAndRun(u,c,"int32");return l.shape[1]===1?l:this.argReduce(t,r,l)},e.prototype.argReducePacked=function(t,r,s){s===void 0&&(s=null);var o=s!=null?s.shape:t.shape,a=Wp(o[o.length-1]),i=new rZ(o,a,r,s==null),u=s==null?[t]:[t,s],c=this.compileAndRun(i,u,"int32");return c.rank===t.rank?this.argReducePacked(t,r,c):c},e.prototype.sum=function(t,r){Yn("sum",r,t.rank);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a),u=Op(t.dtype);return this.reduce(i,"sum",u).reshape(o)},e.prototype.prod=function(t,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,r);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a),u=Op(t.dtype);return this.reduce(i,"prod",u).reshape(o)},e.prototype.unsortedSegmentSum=function(t,r,s){var o=0,a=ds([o],t.rank),i=t;a!=null&&(i=hr(t,a),o=ps(1,t.rank)[0]);var u=function(p,f,m){for(var g=[],x=p.length,y=0;y<x;y++)y!==f?g.push(p[y]):g.push(m);return g}(i.shape,o,s),c=be([i.shape[o]]),l=i.as2D(-1,c),h=Op(t.dtype),d=this.segOpCompute(l,"unsortedSegmentSum",r,h,s).reshape(u);return a!=null&&(d=hr(d,fy(a))),d},e.prototype.segOpCompute=function(t,r,s,o,a){var i=t.shape[0],u=t.shape[1],c=function(d,p){var f,m=!1;for(d<=DN?(f=d,m=!0):f=rh(d,Math.floor(Math.sqrt(d)));!m;)f>p||f===d?m=!0:f=rh(d,f+1);return f}(u,a),l=new CJ({windowSize:c,inSize:u,batchSize:i,numSegments:a}),h=this.compileAndRun(l,[t,s],o);return h.shape[1]===a?h:(s=Su(0,a).tile([u/c]),this.segOpCompute(h,r,s,o,a))},e.prototype.argMinMaxReduce=function(t,r,s){var o=[r];if(Yn("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,t.rank),!se().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){var a=vn(t.shape,o),i=a[0],u=be(a[1]),c=t.as2D(-1,u);return this.argReduce(c,s).reshape(i)}return this.argReducePacked(t,s)},e.prototype.argMin=function(t,r){return this.argMinMaxReduce(t,r,"min")},e.prototype.argMax=function(t,r){return this.argMinMaxReduce(t,r,"max")},e.prototype.cumsum=function(t,r,s,o){if(r!==t.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(t.rank-1)+" but got axis="+r);var a=new SZ(t.shape,s,o);return this.compileAndRun(a,[t])},e.prototype.equal=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(equal(a, b));
`,"bool");var s=new Nt("return float(a == b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.notEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(notEqual(a, b));
`,"bool");var s=new Nt("return float(a != b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.less=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.less(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(lessThan(a, b));
`,"bool");var s=new Nt("return float(a < b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.lessEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(lessThanEqual(a, b));
`,"bool");var s=new Nt("return float(a <= b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.greater=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.greater(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(greaterThan(a, b));
`,"bool");var s=new Nt("return float(a > b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.greaterEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(greaterThanEqual(a, b));
`,"bool");var s=new Nt("return float(a >= b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.logicalNot=function(t){var r=new Ve(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(r,[t])},e.prototype.logicalAnd=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,"bool");var s=new Nt("return float(a >= 1.0 && b >= 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.logicalOr=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,"bool");var s=new Nt("return float(a >= 1.0 || b >= 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.select=function(t,r,s){var o=new IJ(t.rank,r.shape,r.rank);return this.compileAndRun(o,[t,r,s],ln(r.dtype,s.dtype))},e.prototype.where=function(t){uh("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var r=t.dataSync();return Ny(t.shape,r)},e.prototype.topk=function(t,r,s){return GN(t.dataSync(),t.shape,t.dtype,r)},e.prototype.min=function(t,r){Yn("min",r,t.rank);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(o)},e.prototype.minimum=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.minimum(t,r);var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new Nt(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return min(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.mod=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new Nt(`if (b == 0.0) return NAN;
  return mod(a, b);`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.max=function(t,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.max(t,r);Yn("max",r,t.rank);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a);return this.reduce(i,"max",i.dtype).reshape(o)},e.prototype.maximum=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.maximum(t,r);var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new Nt(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return max(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.all=function(t,r){Yn("all",r,t.rank);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(o)},e.prototype.any=function(t,r){Yn("any",r,t.rank);var s=vn(t.shape,r),o=s[0],a=be(s[1]),i=t.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(o)},e.prototype.floorDiv=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,"int32");var s=new Nt(`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,t.shape,r.shape);return this.compileAndRun(s,[t,r],"int32")},e.prototype.add=function(t,r){if(t.dtype==="complex64"&&r.dtype==="complex64")return this.complexSeparableBinaryOp(t,r,Up);if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.add(t,r);var s=ln(t.dtype,r.dtype);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,Up,s);var o=new Nt(Up,t.shape,r.shape);return this.compileAndRun(o,[t,r],s)},e.prototype.packedUnaryOp=function(t,r,s){var o=new Hi(t.shape,r);return this.compileAndRun(o,[t],s)},e.prototype.packedBinaryOp=function(t,r,s,o,a){a===void 0&&(a=!1);var i=new Hr(s,t.shape,r.shape,a);return this.compileAndRun(i,[t,r],o)},e.prototype.complexSeparableBinaryOp=function(t,r,s){var o=this,a=this.texData.get(t.dataId),i=this.texData.get(r.dataId),u=[[a.complexTensors.real,i.complexTensors.real],[a.complexTensors.imag,i.complexTensors.imag]].map(function(d){var p=d[0],f=d[1],m=o.makeComplexComponentTensorInfo(t,p),g=o.makeComplexComponentTensorInfo(r,f),x=new Nt(s,t.shape,r.shape);return o.compileAndRun(x,[m,g],ln(p.dtype,f.dtype))}),c=u[0],l=u[1],h=this.complex(c,l);return c.dispose(),l.dispose(),h},e.prototype.makeComplexComponentTensorInfo=function(t,r){return{dataId:r.dataId,dtype:r.dtype,shape:t.shape}},e.prototype.addN=function(t){if(t.length===1)return t[0];if(t.length>se().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var r=Math.floor(t.length/2),s=this.addN(t.slice(0,r)),o=this.addN(t.slice(r));return this.addN([s,o])}var a=t.map(function(c){return c.dtype}).reduce(function(c,l){return ln(c,l)}),i=t.map(function(c){return c.shape}),u=se().getBool("WEBGL_PACK")?new YQ(t[0].shape,i):new XQ(t[0].shape,i);return this.compileAndRun(u,t,a)},e.prototype.subtract=function(t,r){if(t.dtype==="complex64"&&r.dtype==="complex64")return this.complexSeparableBinaryOp(t,r,Gp);if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.subtract(t,r);var s=ln(t.dtype,r.dtype);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,Gp,t.dtype);var o=new Nt(Gp,t.shape,r.shape);return this.compileAndRun(o,[t,r],s)},e.prototype.pow=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new Nt(`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,t.shape,r.shape),o=ln(t.dtype,r.dtype);return this.compileAndRun(s,[t,r],o)},e.prototype.ceil=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,lb,t.dtype);var r=new Ve(t.shape,lb);return this.compileAndRun(r,[t])},e.prototype.floor=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hb,t.dtype);var r=new Ve(t.shape,hb);return this.compileAndRun(r,[t])},e.prototype.sign=function(t){var r=new Ve(t.shape,`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`);return this.compileAndRun(r,[t])},e.prototype.isNaN=function(t){var r=new Ve(t.shape,"return float(isnan(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.isInf=function(t){var r=new Ve(t.shape,"return float(isinf(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.isFinite=function(t){var r=new Ve(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.round=function(t){var r=new Ve(t.shape,`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`);return this.compileAndRun(r,[t])},e.prototype.exp=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,db,t.dtype);var r=new Ve(t.shape,db);return this.compileAndRun(r,[t])},e.prototype.expm1=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,pb,t.dtype);var r=new Ve(t.shape,pb);return this.compileAndRun(r,[t])},e.prototype.softmax=function(t,r){var s=Gt([r],t.shape),o=this.max(t,s),a=qn(o.shape,s),i=this.subtract(t,o.reshape(a)),u=this.exp(i),c=this.sum(u,s).reshape(a);return As(u,c)},e.prototype.log=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,t.dtype);var r=new Ve(t.shape,`if (x < 0.0) return NAN;
  return log(x);`);return this.compileAndRun(r,[t])},e.prototype.log1p=function(t){var r=new Ve(t.shape,"return log(1.0 + x);");return this.compileAndRun(r,[t])},e.prototype.sqrt=function(t){var r=new Ve(t.shape,"return sqrt(x);");return this.compileAndRun(r,[t])},e.prototype.rsqrt=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);var r=new Ve(t.shape,"return inversesqrt(x);");return this.compileAndRun(r,[t])},e.prototype.reciprocal=function(t){var r=new Ve(t.shape,"return 1.0 / x;");return this.compileAndRun(r,[t])},e.prototype.relu=function(t){var r;return r=se().getBool("WEBGL_PACK")?new Hi(t.shape,JN):new Ve(t.shape,YN),this.compileAndRun(r,[t])},e.prototype.relu6=function(t){var r;return r=se().getBool("WEBGL_PACK")?new Hi(t.shape,eT):new Ve(t.shape,QN),this.compileAndRun(r,[t])},e.prototype.prelu=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(XN,t.shape,r.shape):new Nt(KN,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.elu=function(t){if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,tT,t.dtype);var r=new Ve(t.shape,ZN);return this.compileAndRun(r,[t])},e.prototype.eluDer=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,t.shape,r.shape):new Nt("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.selu=function(t){var r=new Ve(t.shape,$J);return this.compileAndRun(r,[t])},e.prototype.int=function(t){var r=new Ve(t.shape,"return float(int(x));");return this.compileAndRun(r,[t],"int32")},e.prototype.clip=function(t,r,s){var o,a=(o=se().getBool("WEBGL_PACK_CLIP")?new pZ(t.shape):new dZ(t.shape)).getCustomSetupFunc(r,s);return this.compileAndRun(o,[t],null,a)},e.prototype.abs=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,ub,t.dtype);var r=new Ve(t.shape,ub);return this.compileAndRun(r,[t])},e.prototype.complexAbs=function(t){var r=this.texData.get(t.dataId),s=new fZ(t.shape),o=[this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)];return this.compileAndRun(s,o)},e.prototype.sigmoid=function(t){var r=new Ve(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(r,[t])},e.prototype.softplus=function(t){var r=new Ve(t.shape,`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`);return this.compileAndRun(r,[t])},e.prototype.sin=function(t){var r=new Ve(t.shape,AJ);return this.compileAndRun(r,[t])},e.prototype.cos=function(t){var r=new Ve(t.shape,DJ);return this.compileAndRun(r,[t])},e.prototype.tan=function(t){var r=new Ve(t.shape,"return tan(x);");return this.compileAndRun(r,[t])},e.prototype.asin=function(t){var r=new Ve(t.shape,FJ);return this.compileAndRun(r,[t])},e.prototype.acos=function(t){var r=new Ve(t.shape,OJ);return this.compileAndRun(r,[t])},e.prototype.atan=function(t){var r=new Ve(t.shape,_J);return this.compileAndRun(r,[t])},e.prototype.atan2=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new Nt(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return atan(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.sinh=function(t){var r=new Ve(t.shape,`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`);return this.compileAndRun(r,[t])},e.prototype.cosh=function(t){var r=new Ve(t.shape,`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`);return this.compileAndRun(r,[t])},e.prototype.tanh=function(t){var r=new Ve(t.shape,`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`);return this.compileAndRun(r,[t])},e.prototype.asinh=function(t){var r=new Ve(t.shape,MJ);return this.compileAndRun(r,[t])},e.prototype.acosh=function(t){var r=new Ve(t.shape,LJ);return this.compileAndRun(r,[t])},e.prototype.atanh=function(t){var r=new Ve(t.shape,PJ);return this.compileAndRun(r,[t])},e.prototype.erf=function(t){var r=new Ve(t.shape,`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = 0.3275911;
  float a1 = 0.254829592;
  float a2 = -0.284496736;
  float a3 = 1.421413741;
  float a4 = -1.453152027;
  float a5 = 1.061405429;

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`);return this.compileAndRun(r,[t])},e.prototype.step=function(t,r){var s=new Ve(t.shape,function(o){return o===void 0&&(o=0),Ur+`
    return x > 0.0 ? 1.0 : float(`+o+`);
  `}(r));return this.compileAndRun(s,[t])},e.prototype.conv2dByMatMul=function(t,r,s,o,a,i){var u=t.shape,c=this.texData.get(t.dataId),l=s.inChannels,h=u[0]*u[1]*u[2],d=s.outChannels,p=s.dataFormat==="channelsLast",f=(h===1||d===1)&&l>1e3,m=u[2]%2!=0&&!!c.isPacked;if(f||!se().getBool("WEBGL_LAZILY_UNPACK")||!se().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!m){var g=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],x=this.reshape(t,[1,g,s.inChannels]),y=this.reshape(r,[1,s.inChannels,s.outChannels]);return this.reshape(this.fusedBatchMatMul({a:x,b:y,transposeA:!1,transposeB:!1,bias:o,activation:a,preluActivationWeights:i}),s.outShape)}var b=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),v={dataId:t.dataId,shape:[1,b,s.inChannels],dtype:t.dtype},w=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,D(fl(c.shape,v.shape),function(){return"packed reshape "+c.shape+" to "+v.shape+" isn't free"});var C=this.reshape(r,[1,s.inChannels,s.outChannels]),I=this.fusedBatchMatMul({a:v,b:C,transposeA:!1,transposeB:!1,bias:o,activation:a,preluActivationWeights:i}),k=this.texData.get(I.dataId);return D(k.isPacked,function(){return"batchMatMul result is expected to be packed"}),c.shape=w,k.shape=s.outShape,G.makeTensorFromDataId(I.dataId,s.outShape,I.dtype)},e.prototype.conv2dWithIm2Row=function(t,r,s,o,a,i){var u=s.filterWidth,c=s.filterHeight,l=s.inChannels,h=s.outWidth,d=s.outHeight,p=s.dataFormat==="channelsLast",f=u*c*l,m=d*h,g=[f,m],x=t.squeeze([0]),y=r.reshape([1,f,-1]),b=new nJ(g,x.shape,s),v=this.compileAndRun(b,[x]).reshape([1,g[0],g[1]]),w=o!=null,C=i!=null,I=a?yl(a,!0):null,k=new Hp(v.shape,[1,m,s.outChannels],!0,!1,w,I,C),S=[v,y];o&&S.push(o),C&&S.push(i);var N=this.compileAndRun(k,S);return p?N.reshape([1,d,h,s.outChannels]):N.reshape([1,s.outChannels,d,h])},e.prototype.fusedConv2d=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights;if(o.filterHeight===1&&o.filterWidth===1&&o.dilationHeight===1&&o.dilationWidth===1&&o.strideHeight===1&&o.strideWidth===1&&(o.padInfo.type==="SAME"||o.padInfo.type==="VALID"))return this.conv2dByMatMul(r,s,o,a,i,u);if(se().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)return this.conv2dWithIm2Row(r,s,o,a,i,u);var c=a!=null,l=u!=null,h=i?yl(i,!1):null,d=new J0(o,c,h,l),p=[r,s];return a&&p.push(a),u&&p.push(u),this.compileAndRun(d,p)},e.prototype.conv2d=function(t,r,s){if(s.filterHeight===1&&s.filterWidth===1&&s.dilationHeight===1&&s.dilationWidth===1&&s.strideHeight===1&&s.strideWidth===1&&(s.padInfo.type==="SAME"||s.padInfo.type==="VALID"))return this.conv2dByMatMul(t,r,s);if(se().getBool("WEBGL_CONV_IM2COL")&&t.shape[0]===1)return this.conv2dWithIm2Row(t,r,s);var o=new J0(s);return this.compileAndRun(o,[t,r])},e.prototype.conv2dDerInput=function(t,r,s){var o=new yZ(s);return this.compileAndRun(o,[t,r])},e.prototype.conv2dDerFilter=function(t,r,s){var o=new xZ(s);return this.compileAndRun(o,[t,r])},e.prototype.fusedDepthwiseConv2D=function(t){var r,s=t.input,o=t.filter,a=t.convInfo,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,h=u?yl(u,l):null,d=[s,o],p=i!=null,f=c!=null;return p&&d.push(i),f&&d.push(c),l?(r=new tb(a,p,h,f),this.compileAndRun(r,d)):(r=new eb(a,p,h,f),this.compileAndRun(r,d))},e.prototype.depthwiseConv2D=function(t,r,s){var o;return se().getBool("WEBGL_PACK_DEPTHWISECONV")&&s.strideWidth<=2&&s.outChannels/s.inChannels==1?(o=new tb(s),this.compileAndRun(o,[t,r])):(o=new eb(s),this.compileAndRun(o,[t,r]))},e.prototype.depthwiseConv2DDerInput=function(t,r,s){var o=new CZ(s);return this.compileAndRun(o,[t,r])},e.prototype.depthwiseConv2DDerFilter=function(t,r,s){var o=new wZ(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3d=function(t,r,s){var o=new IZ(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3dDerInput=function(t,r,s){var o=new bZ(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3dDerFilter=function(t,r,s){var o=new vZ(s);return this.compileAndRun(o,[t,r])},e.prototype.maxPool=function(t,r){var s=new au(r,"max",!1);return this.compileAndRun(s,[t])},e.prototype.avgPool=function(t,r){var s=new au(r,"avg",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.maxPoolBackprop=function(t,r,s,o){var a=new au(o,"max",!0),i=this.compileAndRun(a,[r]),u=new aJ(o),c=this.compileAndRun(u,[t,i],r.dtype);return i.dispose(),c},e.prototype.avgPoolBackprop=function(t,r,s){var o=new sZ(s);return this.compileAndRun(o,[t],r.dtype)},e.prototype.cast=function(t,r){return BN(t,r,this)},e.prototype.unstack=function(t,r){for(var s=t.shape[r],o=new Array(t.rank-1),a=0,i=0;i<t.rank;i++)i!==r&&(o[a++]=t.shape[i]);var u=new Array(t.rank).fill(0),c=t.shape.slice();c[r]=1;var l=new Array(s);for(i=0;i<l.length;i++)u[r]=i,l[i]=this.slice(t,u,c).reshape(o);return l},e.prototype.avgPool3d=function(t,r){var s=new jp(r,"avg",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.avgPool3dBackprop=function(t,r,s){var o=new oZ(s);return this.compileAndRun(o,[t],r.dtype)},e.prototype.maxPool3d=function(t,r){var s=new jp(r,"max",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.maxPool3dBackprop=function(t,r,s,o){var a=new jp(o,"max",!0),i=this.compileAndRun(a,[r]),u=new iJ(o),c=this.compileAndRun(u,[t,i],r.dtype);return i.dispose(),c},e.prototype.reshape=function(t,r){var s=this.texData.get(t.dataId);if(s.isPacked&&!fl(t.shape,r)&&(s.texture===null||!fl(s.shape,r))){var o=this.packedReshape(t,r);return G.makeTensorFromDataId(o.dataId,o.shape,o.dtype)}return Zf(t,r)},e.prototype.resizeBilinear=function(t,r,s,o){var a=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xJ(t.shape,r,s,o):new gJ(t.shape,r,s,o);return this.compileAndRun(a,[t],"float32")},e.prototype.resizeBilinearBackprop=function(t,r,s){var o=new mJ(t,r,s);return this.compileAndRun(o,[t])},e.prototype.resizeNearestNeighbor=function(t,r,s,o){var a=new vJ(t.shape,r,s,o);return this.compileAndRun(a,[t])},e.prototype.resizeNearestNeighborBackprop=function(t,r,s){var o=new yJ(t,r,s);return this.compileAndRun(o,[t])},e.prototype.multinomial=function(t,r,s,o){var a=r?t:ap(t),i=a.shape[0],u=a.shape[1],c=new uJ(i,u,s),l=c.getCustomSetupFunc(o);return this.compileAndRun(c,[a],"int32",l)},e.prototype.oneHot=function(t,r,s,o){var a=new cJ(t.size,r,s,o);return this.compileAndRun(a,[t])},e.prototype.diag=function(t){var r=new RZ(t.size);return this.compileAndRun(r,[t])},e.prototype.nonMaxSuppression=function(t,r,s,o,a){return uh("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),ky(t.dataSync(),r.dataSync(),s,o,a)},e.prototype.cropAndResize=function(t,r,s,o,a,i){var u=new kZ(t.shape,r.shape,o,a,i);return this.compileAndRun(u,[t,r,s],"float32")},e.prototype.depthToSpace=function(t,r,s){D(r>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+r});var o=t.shape[0],a=s==="NHWC"?t.shape[1]:t.shape[2],i=s==="NHWC"?t.shape[2]:t.shape[3],u=s==="NHWC"?t.shape[3]:t.shape[1],c=a*r,l=i*r,h=u/(r*r),d=new EZ(s==="NHWC"?[o,c,l,h]:[o,h,c,l],r,s);return this.compileAndRun(d,[t])},e.prototype.split=function(t,r,s){return WN(t,r,s)},e.prototype.scatterND=function(t,r,s){var o=ph(0,t,s),a=o.sliceRank,i=o.numUpdates,u=o.sliceSize,c=o.strides,l=o.outputSize,h=[l/u,u],d=t.reshape([i,a]),p=r.reshape([i,u]);if(l===0)return Zf(nn([]),s);var f=ve(0),m=new ob(i,a,d.rank,p.rank,c,h);return this.compileAndRun(m,[p,d,f]).reshape(s)},e.prototype.sparseToDense=function(t,r,s,o){var a=ph(0,t,s),i=a.sliceRank,u=a.numUpdates,c=a.strides,l=a.outputSize,h=new ob(u,i,t.rank,r.rank,c,[l,1]);return this.compileAndRun(h,[r,t,o]).reshape(s)},e.prototype.fft=function(t){return this.fftImpl(t,!1)},e.prototype.ifft=function(t){return this.fftImpl(t,!0)},e.prototype.fftImpl=function(t,r){var s=this.texData.get(t.dataId),o=new rb(OZ,t.shape,r),a=new rb(_Z,t.shape,r),i=[this.makeComplexComponentTensorInfo(t,s.complexTensors.real),this.makeComplexComponentTensorInfo(t,s.complexTensors.imag)],u=this.compileAndRun(o,i),c=this.compileAndRun(a,i),l=this.complex(u,c).as2D(t.shape[0],t.shape[1]);return u.dispose(),c.dispose(),l},e.prototype.gatherND=function(t,r){var s=r.shape,o=s[s.length-1],a=AN(t,r),i=a[0],u=a[1],c=a[2],l=a[3],h=r.reshape([u,o]),d=t.reshape([t.size/c,c]),p=new PZ(o,l,[u,c]);return this.compileAndRun(p,[d,h]).reshape(i)},e.prototype.fill=function(t,r,s){if((s=s||Ri(r))==="string"){var o=wu(s,be(t));return o.fill(r),G.makeTensor(o,t,s,this)}var a=new MZ(t,r),i=a.getCustomSetupFunc(r);return this.compileAndRun(a,[],s,i)},e.prototype.onesLike=function(t){if(t.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)},e.prototype.zerosLike=function(t){return this.fill(t.shape,t.dtype==="string"?"":0,t.dtype)},e.prototype.linspace=function(t,r,s){return zN(t,r,s)},e.prototype.makeTensorInfo=function(t,r){var s=this.write(null,t,r);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:r}},e.prototype.makeOutput=function(t,r){var s=this.makeTensorInfo(t,r).dataId;return G.makeTensorFromDataId(s,t,r,this)},e.prototype.unpackTensor=function(t){var r=new zJ(t.shape);return this.runWebGLProgram(r,[t],t.dtype)},e.prototype.packTensor=function(t){var r=new lJ(t.shape);return this.runWebGLProgram(r,[t],t.dtype,null,!0)},e.prototype.packedReshape=function(t,r){var s=[ah(t.shape)].concat(ih(t.shape)),o={dtype:t.dtype,shape:s,dataId:t.dataId},a=[ah(r)].concat(ih(r)),i=new fJ(a,s),u=this.runWebGLProgram(i,[o],t.dtype,null,!0);return{dataId:u.dataId,shape:r,dtype:u.dtype}},e.prototype.decode=function(t){var r,s=this.texData.get(t),o=s.isPacked,a=s.shape,i=s.dtype,u=Vp(a);return r=o?new TZ(u):new NZ(u),{dtype:i,shape:a,dataId:this.runWebGLProgram(r,[{shape:u,dtype:i,dataId:t}],i,null,!0).dataId}},e.prototype.runWebGLProgram=function(t,r,s,o,a){var i=this;a===void 0&&(a=!1);var u=this.makeTensorInfo(t.outputShape,s),c=this.texData.get(u.dataId);if(t.packedOutput&&(c.isPacked=!0),t.outPackingScheme===ku.DENSE){var l=su(t.outputShape);c.texShape=l.map(function(b){return 2*b})}if(t.outTexUsage!=null&&(c.usage=t.outTexUsage),be(u.shape)===0)return c.values=ra(u.dtype,0),u;var h=[],d=r.map(function(b){if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var v=i.texData.get(b.dataId);if(v.texture==null){if(!t.packedInputs&&be(b.shape)<=se().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:v.values};t.packedInputs&&(v.isPacked=!0,v.shape=b.shape)}else if(!!v.isPacked!=!!t.packedInputs)b=v.isPacked?i.unpackTensor(b):i.packTensor(b),h.push(b),v=i.texData.get(b.dataId);else if(v.isPacked&&!fl(v.shape,b.shape)){var w=b,C=b.shape;b.shape=v.shape,b=i.packedReshape(b,C),h.push(b),v=i.texData.get(b.dataId),w.shape=C}return i.uploadToGPU(b.dataId),{shape:b.shape,texData:v,isUniform:!1}});this.uploadToGPU(u.dataId);var p,f={shape:u.shape,texData:c,isUniform:!1},m=function(b,v,w){var C="";v.concat(w).forEach(function(S){var N=S.texData!=null&&S.texData.slice!=null&&S.texData.slice.flatOffset>0,E=S.isUniform?"uniform":S.texData.texShape;C+=S.shape+"_"+E+"_"+N});var I=b.userCode,k=b.constructor.name;return k+="_"+C+"_"+I}(t,d,f),g=this.getAndSaveBinary(m,function(){return function(b,v,w,C){var I=v.userCode,k=w.map(function(M,z){var H={logicalShape:M.shape,texShape:M.isUniform?null:M.texData.texShape,isUniform:M.isUniform,isPacked:!M.isUniform&&M.texData.isPacked,flatOffset:null};return M.texData!=null&&M.texData.slice!=null&&M.texData.slice.flatOffset>0&&(H.flatOffset=M.texData.slice.flatOffset),{name:v.variableNames[z],shapeInfo:H}}),S=k.map(function(M){return M.shapeInfo}),N={logicalShape:C.shape,texShape:C.texData.texShape,isUniform:!1,isPacked:C.texData.isPacked,flatOffset:null},E=ZQ(k,N,I,v.packedInputs),R=b.createProgram(E),_=null,O=b.getUniformLocation(R,"NAN",!1);se().getNumber("WEBGL_VERSION")===1&&(_=b.getUniformLocation(R,"INFINITY",!1));for(var F={},L=0;L<v.variableNames.length;L++){var B=v.variableNames[L];F[B]=b.getUniformLocation(R,B,!1),F["offset"+B]=b.getUniformLocation(R,"offset"+B,!1)}return{program:v,source:E,webGLProgram:R,uniformLocations:F,inShapeInfos:S,outShapeInfo:N,infLoc:_,nanLoc:O}}(i.gpgpu,t,d,f)}),x=this.activeTimers!=null;if(x&&(p=this.startTimer()),function(b,v,w,C,I){sb(v.inShapeInfos,w),sb([v.outShapeInfo],[C]);var k=C.texData.texture,S=C.texData.texShape;C.texData.isPacked?b.setOutputPackedMatrixTexture(k,S[0],S[1]):b.setOutputMatrixTexture(k,S[0],S[1]),b.setProgram(v.webGLProgram),se().getNumber("WEBGL_VERSION")===1&&v.infLoc!==null&&b.gl.uniform1f(v.infLoc,1/0),v.nanLoc!==null&&b.gl.uniform1f(v.nanLoc,NaN),w.forEach(function(N,E){var R=v.program.variableNames[E],_=v.uniformLocations[R],O=v.uniformLocations["offset"+R];if(_!=null)if(N.isUniform)if(be(N.shape)<2)b.gl.uniform1f(_,N.uniformValues[0]);else{var F=N.uniformValues;F instanceof Float32Array||(F=new Float32Array(F)),b.gl.uniform1fv(_,F)}else N.texData.slice!=null&&O!=null&&b.gl.uniform1i(O,N.texData.slice.flatOffset),b.setInputMatrixTexture(N.texData.texture,_,E)}),I!=null&&I(b,v.webGLProgram),b.executeProgram()}(this.gpgpu,g,d,f,o),h.forEach(function(b){return i.disposeData(b.dataId)}),x&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!se().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&a===!1){var y=this.unpackTensor(u);return this.disposeData(u.dataId),y}return u},e.prototype.compileAndRun=function(t,r,s,o,a){a===void 0&&(a=!1),s=s||r[0].dtype;var i=this.runWebGLProgram(t,r,s,o,a);return G.makeTensorFromDataId(i.dataId,i.shape,i.dtype)},e.prototype.getAndSaveBinary=function(t,r){return t in this.binaryCache||(this.binaryCache[t]=r()),this.binaryCache[t]},e.prototype.getTextureManager=function(){return this.textureManager},e.prototype.dispose=function(){var t=this;this.disposed||(se().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(function(r){t.gpgpu.deleteProgram(t.binaryCache[r].webGLProgram),delete t.binaryCache[r]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},e.prototype.floatPrecision=function(){var t=this;return this.floatPrecisionValue==null&&(this.floatPrecisionValue=je(function(){if(!se().get("WEBGL_RENDER_FLOAT32_ENABLED")){var r=se().getBool("DEBUG");se().set("DEBUG",!1);var s=t.abs(ve(1e-8)).dataSync()[0];if(se().set("DEBUG",r),s>0)return 32}return 16})),this.floatPrecisionValue},e.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},e.prototype.uploadToGPU=function(t){var r,s=this.texData.get(t),o=s.shape,a=s.dtype,i=s.values,u=s.texture,c=s.usage,l=s.isPacked;if(u==null){var h,d=this.activeTimers!=null;d&&(h=$r());var p=s.texShape;if(p==null&&(p=sQ(o,l),s.texShape=p),i!=null){var f=Vp(o),m=void 0,g=p[1],x=p[0],y=i instanceof Uint8Array;l?(g=(r=qc(p[0],p[1]))[0],x=r[1],m=new FZ(f,[x,g],y)):m=new DZ(f,[x,g],y);var b=this.makeTensorInfo([x,g],a);this.texData.get(b.dataId).usage=y?tr.PIXELS:tr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),g,x,i);var v=this.runWebGLProgram(m,[b],a,null,!0),w=this.texData.get(v.dataId);s.texture=w.texture,s.texShape=w.texShape,s.isPacked=w.isPacked,s.usage=w.usage,this.disposeData(b.dataId),this.texData.delete(v.dataId),s.values=null,d&&(this.uploadWaitMs+=$r()-h)}else{var C=this.acquireTexture(p,c,a,l);s.texture=C}}},e.prototype.convertAndCacheOnCPU=function(t,r){var s=this.texData.get(t),o=s.dtype;return this.releaseGPUData(t),r!=null&&(s.values=function(a,i){if(i==="float32"||i==="complex64")return a;if(i==="int32"||i==="bool"){for(var u=i==="int32"?new Int32Array(a.length):new Uint8Array(a.length),c=0;c<u.length;++c)u[c]=Math.round(a[c]);return u}throw new Error("Unknown dtype "+i)}(r,o)),s.values},e.prototype.acquireTexture=function(t,r,s,o){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(t,r,o)},e.prototype.computeBytes=function(t,r){return t[0]*t[1]*uy(r)},e}(LN);zS()&&G.registerBackend("webgl",function(){return new WJ},2);function wa(n,e){return n(e={exports:{}},e.exports),e.exports}var UJ=wa(function(n){(function(e,t,r){function s(i){var u,c=this,l=(u=4022871197,function(h){h=h.toString();for(var d=0;d<h.length;d++){var p=.02519603282416938*(u+=h.charCodeAt(d));p-=u=p>>>0,u=(p*=u)>>>0,u+=4294967296*(p-=u)}return 23283064365386963e-26*(u>>>0)});c.next=function(){var h=2091639*c.s0+23283064365386963e-26*c.c;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=0|h)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(i),c.s0<0&&(c.s0+=1),c.s1-=l(i),c.s1<0&&(c.s1+=1),c.s2-=l(i),c.s2<0&&(c.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function a(i,u){var c=new s(i),l=u&&u.state,h=c.next;return h.int32=function(){return 4294967296*c.next()|0},h.double=function(){return h()+11102230246251565e-32*(2097152*h()|0)},h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.alea=a})(0,n)}),GJ=wa(function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(0|i)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(0,n)}),HJ=wa(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^h^h<<1)|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(0|i)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(0,n)}),jJ=wa(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var c,l,h=u.x,d=u.i;return c=h[d],l=(c^=c>>>7)^c<<24,l^=(c=h[d+1&7])^c>>>10,l^=(c=h[d+3&7])^c>>>3,l^=(c=h[d+4&7])^c<<7,c=h[d+7&7],l^=(c^=c<<13)^c<<9,h[d]=l,u.i=d+1&7,l},function(c,l){var h,d=[];if(l===(0|l))d[0]=l;else for(l=""+l,h=0;h<l.length;++h)d[7&h]=d[7&h]<<15^l.charCodeAt(h)+d[h+1&7]<<13;for(;d.length<8;)d.push(0);for(h=0;h<8&&d[h]===0;++h);for(h==8?d[7]=-1:d[h],c.x=d,c.i=0,h=256;h>0;--h)c.next()}(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(0,n)}),qJ=wa(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var c,l,h=u.w,d=u.X,p=u.i;return u.w=h=h+1640531527|0,l=d[p+34&127],c=d[p=p+1&127],l^=l<<13,c^=c<<17,l^=l>>>15,c^=c>>>12,l=d[p]=l^c,u.i=p,l+(h^h>>>16)|0},function(c,l){var h,d,p,f,m,g=[],x=128;for(l===(0|l)?(d=l,l=null):(l+="\0",d=0,x=Math.max(x,l.length)),p=0,f=-32;f<x;++f)l&&(d^=l.charCodeAt((f+32)%l.length)),f===0&&(m=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(m=m+1640531527|0,p=(h=g[127&f]^=d+m)==0?p+1:0);for(p>=128&&(g[127&(l&&l.length||0)]=-1),p=127,f=512;f>0;--f)d=g[p+34&127],h=g[p=p+1&127],d^=d<<13,h^=h<<17,d^=d>>>15,h^=h>>>12,g[p]=d^h;c.w=m,c.X=g,c.i=p}(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(0,n)}),KJ=wa(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=0|i):c+=i;for(var l=0;l<c.length+20;l++)u.b^=0|c.charCodeAt(l),u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(0,n)}),To=wa(function(n){(function(e,t){var r,s=this,o=256,a=6,i="random",u=t.pow(o,a),c=t.pow(2,52),l=2*c,h=o-1;function d(x,y,b){var v=[],w=m(function k(S,N){var E,R=[],_=typeof S;if(N&&_=="object")for(E in S)try{R.push(k(S[E],N-1))}catch{}return R.length?R:_=="string"?S:S+"\0"}((y=y==1?{entropy:!0}:y||{}).entropy?[x,g(e)]:x??function(){try{var k;return r&&(k=r.randomBytes)?k=k(o):(k=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(k)),g(k)}catch{var S=s.navigator,N=S&&S.plugins;return[+new Date,s,N,s.screen,g(e)]}}(),3),v),C=new p(v),I=function(){for(var k=C.g(a),S=u,N=0;k<c;)k=(k+N)*o,S*=o,N=C.g(1);for(;k>=l;)k/=2,S/=2,N>>>=1;return(k+N)/S};return I.int32=function(){return 0|C.g(4)},I.quick=function(){return C.g(4)/4294967296},I.double=I,m(g(C.S),e),(y.pass||b||function(k,S,N,E){return E&&(E.S&&f(E,C),k.state=function(){return f(C,{})}),N?(t[i]=k,S):k})(I,w,"global"in y?y.global:this==t,y.state)}function p(x){var y,b=x.length,v=this,w=0,C=v.i=v.j=0,I=v.S=[];for(b||(x=[b++]);w<o;)I[w]=w++;for(w=0;w<o;w++)I[w]=I[C=h&C+x[w%b]+(y=I[w])],I[C]=y;(v.g=function(k){for(var S,N=0,E=v.i,R=v.j,_=v.S;k--;)S=_[E=h&E+1],N=N*o+_[h&(_[E]=_[R=h&R+S])+(_[R]=S)];return v.i=E,v.j=R,N})(o)}function f(x,y){return y.i=x.i,y.j=x.j,y.S=x.S.slice(),y}function m(x,y){for(var b,v=x+"",w=0;w<v.length;)y[h&w]=h&(b^=19*y[h&w])+v.charCodeAt(w++);return g(y)}function g(x){return String.fromCharCode.apply(0,x)}if(t["seed"+i]=d,m(t.random(),e),n.exports){n.exports=d;try{r=require("crypto")}catch{}}})([],Math)});To.alea=UJ,To.xor128=GJ,To.xorwow=HJ,To.xorshift7=jJ,To.xor4096=qJ,To.tychei=KJ;var ip=To.alea,nT=V({addN_:function(n){D(Array.isArray(n),function(){return"The argument passed to tf.addN() must be a list of tensors"}),D(n.length>=1,function(){return"Must pass at least one tensor to tf.addN(), but got "+n.length});var e=n.map(function(s,o){return A(s,"tensors"+o,"addN")}),t=e[0];e.forEach(function(s){if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(function(s){if(!Qt(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var r=e;return G.runKernelFunc(function(s,o){return s.addN(e)},r,null,"AddN")}});function up(){VS("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function rT(n){return n.rank===0||n.rank===1?n.as4D(1,1,1,n.size):n.rank===2?n.as4D(1,1,n.shape[0],n.shape[1]):n.rank===3?n.as4D(1,n.shape[0],n.shape[1],n.shape[2]):n}function sT(n,e,t,r,s,o){o==null&&(o=.001);var a,i,u=A(n,"x","batchNorm"),c=A(e,"mean","batchNorm"),l=A(t,"variance","batchNorm");s!=null&&(a=A(s,"scale","batchNorm")),r!=null&&(i=A(r,"offset","batchNorm")),D(c.rank===l.rank,function(){return"Batch normalization gradient requires mean and variance to have equal ranks."}),D(i==null||c.rank===i.rank,function(){return"Batch normalization gradient requires mean and offset to have equal ranks."}),D(a==null||c.rank===a.rank,function(){return"Batch normalization gradient requires mean and scale to have equal ranks."});var h={x:u,scale:a,offset:i,mean:c,variance:l},d={varianceEpsilon:o};return G.runKernelFunc(function(p,f){var m=rT(u),g=p.batchNormalization(m,vl(c),vl(l),o,vl(a),vl(i));return f([u,c,l,a]),g},h,null,"FusedBatchNorm",d).reshape(u.shape)}function vl(n){return n==null?null:n.rank===0?n.as1D():n.rank===1?n:n.rank===2?n.as4D(1,1,n.shape[0],n.shape[1]):n.rank===3?n.as4D(1,n.shape[0],n.shape[1],n.shape[2]):n}var XJ=V({batchNormalization_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),up(),sT(n,e,t,o,s,r)}}),Ai=V({batchNorm_:sT});function oT(n,e,t,r,s,o){var a,i,u=A(n,"x","batchNorm"),c=A(e,"mean","batchNorm"),l=A(t,"variance","batchNorm");return s!=null&&(a=A(s,"scale","batchNorm")),r!=null&&(i=A(r,"offset","batchNorm")),D(u.rank===2,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),D(c.rank===2||c.rank===1,function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+c.rank+"."}),D(l.rank===2||l.rank===1,function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+l.rank+"."}),a!=null&&D(a.rank===2||a.rank===1,function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+a.rank+"."}),i!=null&&D(i.rank===2||i.rank===1,function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+i.rank+"."}),Ai(u,c,l,i,a,o)}var YJ=V({batchNormalization2d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),up(),oT(n,e,t,o,s,r)}}),QJ=V({batchNorm2d_:oT});function aT(n,e,t,r,s,o){var a,i,u=A(n,"x","batchNorm"),c=A(e,"mean","batchNorm"),l=A(t,"variance","batchNorm");return s!=null&&(a=A(s,"scale","batchNorm")),r!=null&&(i=A(r,"offset","batchNorm")),D(u.rank===3,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),D(c.rank===3||c.rank===1,function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+c.rank+"."}),D(l.rank===3||l.rank===1,function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+l.rank+"."}),a!=null&&D(a.rank===3||a.rank===1,function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+a.rank+"."}),i!=null&&D(i.rank===3||i.rank===1,function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+i.rank+"."}),Ai(u,c,l,i,a,o)}var ZJ=V({batchNormalization3d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),up(),aT(n,e,t,o,s,r)}}),JJ=V({batchNorm3d_:aT});function iT(n,e,t,r,s,o){var a,i,u=A(n,"x","batchNorm"),c=A(e,"mean","batchNorm"),l=A(t,"variance","batchNorm");return s!=null&&(a=A(s,"scale","batchNorm")),r!=null&&(i=A(r,"offset","batchNorm")),D(u.rank===4,function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."}),D(c.rank===4||c.rank===1,function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+c.rank+"."}),D(l.rank===4||l.rank===1,function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+l.rank+"."}),a!=null&&D(a.rank===4||a.rank===1,function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+a.rank+"."}),i!=null&&D(i.rank===4||i.rank===1,function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+i.rank+"."}),Ai(u,c,l,i,a,o)}var eee=V({batchNormalization4d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),up(),iT(n,e,t,o,s,r)}}),tee=V({batchNorm4d_:iT}),uT=V({broadcastTo_:function(n,e){var t=A(n,"broadcastTo","x"),r=t.shape;if(e.some(function(h){return!(h>0)||h%1!=0}))throw new Error("broadcastTo(): Invalid broadcast shape ["+e+"].");if(e.length<t.rank)throw new Error("broadcastTo(): shape.length="+e.length+" < input.rank="+t.rank+".");if(e.length>t.rank){for(var s=t.shape.slice();s.length<e.length;)s.unshift(1);t=t.reshape(s)}for(var o=t.shape,a=Array.from(e),i=e.length-1;i>=0;i--)if(o[i]===e[i])a[i]=1;else if(t.shape[i]!==1)throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+e+"].");var u=a.map(function(h,d){return h>1?d:-1}).filter(function(h){return h>=0});if(u.length===0)return t.clone();var c={x:t},l={shape:e,inputShape:o};return G.runKernelFunc(function(h){return h.tile(t,a)},c,function(h){return{x:function(){return h.sum(u,!0)}}},QS,l)}}),nee=V({clone_:function(n){var e=A(n,"x","clone",null);return G.runKernelFunc(function(){return G.makeTensorFromDataId(e.dataId,e.shape,e.dtype)},{x:e},null,JS)}}),Yc=V({logicalAnd_:function(n,e){var t=A(n,"a","logicalAnd","bool"),r=A(e,"b","logicalAnd","bool");return qe(t.shape,r.shape),G.runKernelFunc(function(s){return s.logicalAnd(t,r)},{a:t,b:r},null,"LogicalAnd")}}),cT=V({logicalNot_:function(n){var e=A(n,"x","logicalNot","bool");return G.runKernelFunc(function(t){return t.logicalNot(e)},{$x:e})}}),$y=V({logicalOr_:function(n,e){var t=A(n,"a","logicalOr","bool"),r=A(e,"b","logicalOr","bool");return qe(t.shape,r.shape),G.runKernelFunc(function(s){return s.logicalOr(t,r)},{$a:t,$b:r})}}),ree=V({logicalXor_:function(n,e){var t=A(n,"a","logicalXor","bool"),r=A(e,"b","logicalXor","bool");return qe(t.shape,r.shape),$y(n,e).logicalAnd(Yc(n,e).logicalNot())}}),ao=V({where_:function(n,e,t){var r=A(e,"a","where"),s=A(t,"b","where"),o=A(n,"condition","where","bool");return st(r.shape,s.shape,"Error in where: "),o.rank===1?D(o.shape[0]===r.shape[0],function(){return"The first dimension of `a` must match the size of `condition`."}):st(o.shape,s.shape,"Error in where: "),G.runKernelFunc(function(a,i){var u=a.select(o,r,s);return i([o]),u},{$condition:o,$a:r,$b:s},function(a,i){var u=i[0];return{$condition:function(){return Ze(u).toFloat()},$a:function(){return a.mul(u.cast(a.dtype))},$b:function(){return a.mul(u.logicalNot().cast(a.dtype))}}})}}),Ay=function(n){return ke(this,void 0,void 0,function(){var e,t,r;return Se(this,function(s){switch(s.label){case 0:return[4,(e=A(n,"condition","whereAsync","bool")).data()];case 1:return t=s.sent(),r=Ny(e.shape,t),n!==e&&e.dispose(),[2,r]}})})},Dy=V({divNoNan_:function(n,e){var t,r=A(n,"a","div"),s=A(e,"b","div");r=(t=kt(r,s))[0],s=t[1];var o=As(r,s),a=Ze(o),i=s.equal(a);return ao(i,a,o)}}),Vo=V({tile_:function(n,e){var t=A(n,"x","tile",null);D(t.rank===e.length,function(){return"Error in transpose: rank of input "+t.rank+" must match length of reps "+e+"."});var r=[t],s={x:t},o={reps:e};return G.runKernelFunc(function(a,i){var u=a.tile(t,e);return i([t]),u},s,null,eN,o,r)}}),lT=V({eye_:function(n,e,t,r){r===void 0&&(r="float32"),e==null&&(e=n);for(var s=Pe([n,e],r),o=n<=e?n:e,a=0;a<o;++a)s.set(1,a,a);var i=s.toTensor().as2D(n,e);if(t==null)return i;if(t.length===1)return Vo(xs(i,0),[t[0],1,1]);if(t.length===2)return Vo(xs(xs(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Vo(xs(xs(xs(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+t.length+"D.")}}),hT=V({multinomial_:function(n,e,t,r){r===void 0&&(r=!1);var s=A(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+o+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);t=t||Math.random();var i=a===1?s.as2D(1,-1):s,u=G.runKernelFunc(function(c){return c.multinomial(i,r,e,t)},{logits2D:i});return a===1?u.as1D():u}}),Tu=V({oneHot_:function(n,e,t,r){if(t===void 0&&(t=1),r===void 0&&(r=0),e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);var s=A(n,"indices","oneHot","int32"),o=s.shape.concat([e]),a={indices:s=s.flatten()},i={depth:e,onValue:t,offValue:r};return G.runKernelFunc(function(u,c){return c([s]),u.oneHot(s,e,t,r)},a,null,ZS,i).reshape(o)}}),bo=V({pad_:function(n,e,t){t===void 0&&(t=0);var r=A(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var s={paddings:e,constantValue:t},o={x:r};return G.runKernelFunc(function(a,i){return i([r]),a.pad(r,e,t)},o,null,tN,s)}}),see=V({pad1d_:function(n,e,t){return t===void 0&&(t=0),D(e.length===2,function(){return"Invalid number of paddings. Must be length of 2."}),bo(n,[e],t)}}),oee=V({pad2d_:function(n,e,t){return t===void 0&&(t=0),D(e.length===2&&e[0].length===2&&e[1].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),bo(n,e,t)}}),aee=V({pad3d_:function(n,e,t){return t===void 0&&(t=0),D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),bo(n,e,t)}}),iee=V({pad4d_:function(n,e,t){return t===void 0&&(t=0),D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),bo(n,e,t)}}),uee=V({rand_:function(n,e,t){var r=be(n),s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else{if(t!=="bool")throw new Error("Unknown data type "+t);s=new Uint8Array(r)}for(var o=0;o<r;o++)s[o]=e();return G.makeTensor(s,n,t)}}),Fy=function(){function n(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=o||Math.random();this.random=ip(a.toString())}return n.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,r,s=!1;!s;){var o=void 0,a=void 0,i=void 0;do i=(o=2*this.random()-1)*o+(a=2*this.random()-1)*a;while(i>=1||i===0);var u=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*u,r=this.mean+this.stdDev*a*u,this.truncated&&!this.isValidTruncated(t)||(s=!0)}return this.truncated&&!this.isValidTruncated(r)||(this.nextVal=this.convertValue(r)),this.convertValue(t)},n.prototype.convertValue=function(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)},n.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},n}(),cee=function(){function n(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;var o=s||Math.random();this.randu=ip(o.toString()),this.randn=new Fy(0,1,r,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return n.prototype.nextValue=function(){for(var e,t,r,s,o,a;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,t=1-.331*(e=s*s)*e,r=.5*e+this.d*(1-a+Math.log(a)),(o=this.randu())<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)},n.prototype.convertValue=function(e){return this.dtype==="float32"?e:Math.round(e)},n}(),lee=function(){function n(e,t,r,s){var o=this;if(e===void 0&&(e=0),t===void 0&&(t=1),this.canReturnFloat=function(){return o.dtype==null||o.dtype==="float32"},this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=ip(s)}return n.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},n.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},n}(),hee=V({randomGamma_:function(n,e,t,r,s){if(t===void 0&&(t=1),r===void 0&&(r="float32"),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error("Unsupported data type "+r);for(var o=new cee(e,t,r,s),a=Pe(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),dee=V({randomNormal_:function(n,e,t,r,s){if(e===void 0&&(e=0),t===void 0&&(t=1),r!=null&&r==="bool")throw new Error("Unsupported data type "+r);for(var o=new Fy(e,t,r,!1,s),a=Pe(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),Oy=V({randomUniform_:function(n,e,t,r,s){e===void 0&&(e=0),t===void 0&&(t=1),r===void 0&&(r="float32");for(var o=Pe(n,r),a=new lee(e,t,null,s),i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),_y=V({square_:function(n){var e=A(n,"x","square"),t=[e];return G.runKernelFunc(function(r,s){return s([e]),r.square(e)},{x:e},null,"Square",{},t,[])}}),My=V({squaredDifference_:function(n,e){var t,r=A(n,"a","squaredDifference"),s=A(e,"b","squaredDifference");t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape);var o={a:r,b:s},a=[r,s];return G.runKernelFunc(function(i,u){var c=i.squaredDifference(r,s);return u([r,s]),c},o,function(i,u){var c=u[0],l=u[1],h=ve(2);return{a:function(){return i.mul(c.sub(l).mul(h))},b:function(){return i.mul(l.sub(c).mul(h))}}},np,{},a,[])}}),dT=V({truncatedNormal_:function(n,e,t,r,s){if(e===void 0&&(e=0),t===void 0&&(t=1),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");for(var o=new Fy(e,t,r,!0,s),a=Pe(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),Ly=V({equal_:function(n,e){var t,r=A(n,"a","equal"),s=A(e,"b","equal");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o){return o.equal(r,s)},{$a:r,$b:s})}}),pee=V({equalStrict_:function(n,e){var t=A(n,"a","equalStrict"),r=A(e,"b","equalStrict");return st(t.shape,r.shape,"Error in equalStrict: "),t.equal(r)}}),pT=V({greater_:function(n,e){var t,r=A(n,"a","greater"),s=A(e,"b","greater");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o){return o.greater(r,s)},{a:r,b:s},null,"Greater")}}),Py=V({greaterEqual_:function(n,e){var t,r=A(n,"a","greaterEqual"),s=A(e,"b","greaterEqual");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o,a){var i=o.greaterEqual(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return Ze(i)},b:function(){return Ze(u)}}},"GreaterEqual")}}),fee=V({greaterEqualStrict_:function(n,e){var t=A(n,"a","greaterEqualStrict"),r=A(e,"b","greaterEqualStrict");return st(t.shape,r.shape,"Error in greaterEqualStrict: "),t.greaterEqual(r)}}),mee=V({greaterStrict_:function(n,e){var t=A(n,"a","greaterStrict"),r=A(e,"b","greaterStrict");return st(t.shape,r.shape,"Error in greaterStrict: "),t.greater(r)}}),fT=V({less_:function(n,e){var t,r=A(n,"a","less"),s=A(e,"b","less");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o){return o.less(r,s)},{a:r,b:s},null,"Less")}}),mT=V({lessEqual_:function(n,e){var t,r=A(n,"a","lessEqual"),s=A(e,"b","lessEqual");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o,a){var i=o.lessEqual(r,s);return a([r,s]),i},{a:r,b:s},null,"LessEqual")}}),gee=V({lessEqualStrict_:function(n,e){var t=A(n,"a","lessEqualStrict"),r=A(e,"b","lessEqualStrict");return st(t.shape,r.shape,"Error in lessEqualStrict: "),t.lessEqual(r)}}),xee=V({lessStrict_:function(n,e){var t=A(n,"a","lessStrict"),r=A(e,"b","lessStrict");return st(t.shape,r.shape,"Error in lessStrict: "),t.less(r)}}),gT=V({notEqual_:function(n,e){var t,r=A(n,"a","notEqual"),s=A(e,"b","notEqual");return t=kt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),G.runKernelFunc(function(o){return o.notEqual(r,s)},{a:r,b:s},null,"NotEqual")}}),yee=V({notEqualStrict_:function(n,e){var t=A(n,"a","notEqualStrict"),r=A(e,"b","notEqualStrict");return st(t.shape,r.shape,"Error in notEqualStrict: "),t.notEqual(r)}});function fb(n,e){for(var t=[],r=n;r<e;++r)t.push(r);return t}function mb(n){for(var e=[],t=0;t<n.length;++t)for(var r=0;r<n[t].length;++r)e.push(n[t][r]);return e}var cp=V({gather_:function(n,e,t){t===void 0&&(t=0);var r=A(n,"x","gather"),s=A(e,"indices","gather","int32");t=Gt(t,r.shape)[0];var o=function(a,i,u){for(var c=a.shape[u],l=[],h=1,d=1,p=0;p<u;p++)l.push(a.shape[p]),h*=a.shape[p];for(p=0;p<i.rank;p++)l.push(i.shape[p]);for(p=u+1;p<a.rank;p++)l.push(a.shape[p]),d*=a.shape[p];return{batchSize:h,sliceSize:d,dimSize:c,outputShape:l}}(r,s,t);return G.runKernelFunc(function(a,i){var u=a.gather(r,s.flatten(),t);return i([s]),u},{x:r,indices:s},function(a,i){var u=i[0];return{x:function(){var c=r.shape,l=u.size,h=c.slice(0,t),d=h.length,p=c.slice(t,c.length).slice(1),f=p.length,m=fb(0,d),g=fb(d+1,d+1+f),x=mb([h,[l],p]),y=a.reshape(x),b=u.reshape([l]),v=mb([[d],m,g]),w=y.transpose(v),C=xT(w,b,r.shape[t]),I=fy(v);return C=C.transpose(I)},indices:function(){return u}}},"Gather",{axis:t}).reshape(o.outputShape)}}),xT=V({unsortedSegmentSum_:function(n,e,t){var r=A(n,"x","unsortedSegmentSum"),s=A(e,"segmentIds","unsortedSegmentSum","int32");return D(Rt(t),function(){return"numSegments must be of dtype int"}),G.runKernelFunc(function(o,a){var i=o.unsortedSegmentSum(r,s,t);return a([s]),i},{$x:r},function(o,a){var i=a[0];return{$x:function(){return function(u,c){for(var l=sp(c,Ze(c)),h=cp(u,l),d=Py(c,ve(0,"int32")),p=h.rank-d.rank,f=0;f<p;++f)d=xs(d,f+1);d=Yc(d,va(h.shape,"bool"));var m=Ze(h);return ao(d,h,m)}(o,i)}}})}}),vee=function(n,e,t){return ke(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m;return Se(this,function(g){switch(g.label){case 0:for(r=A(n,"tensor","boolMask"),s=A(e,"mask","boolMask","bool"),o=t??0,a=s.rank,i=r.shape,D(a>0,function(){return"mask cannot be scalar"}),st(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,c=o;c<o+a;c++)u*=i[c];return l=i.slice(0,o).concat([u],i.slice(o+a)),h=r.reshape(l),d=s.reshape([-1]),[4,Ay(d)];case 1:return p=g.sent(),f=p.squeeze([1]),m=cp(h,f,o),n!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,m]}})})};function yT(n,e,t,r,s,o,a){o===void 0&&(o="NHWC"),D(n.length===e.rank,function(){return"Length of inShape ("+n.length+") and rank of dy ("+e.rank+") must match"});var i=n,u=e,c=!1;e.rank===3&&(c=!0,u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]),i=[1,n[0],n[1],n[2]]),D(i.length===4,function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."}),D(u.rank===4,function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank}),D(t.rank===4,function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+t.rank});var l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];D(l===t.shape[2],function(){return"Error in conv2dDerInput: depth of input ("+l+") must match input depth for filter "+t.shape[2]+"."}),D(h===t.shape[3],function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+t.shape[3]+"."}),a!=null&&D(Rt(s),function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+s+"."});var d=Iy(o),p=ba(i,t.shape,r,1,s,a,!1,d),f=G.runKernelFunc(function(m,g){var x=m.conv2dDerInput(u,t,p);return g([t,u]),x},{dy4D:u,filter:t},function(m,g){var x=g[0],y=g[1];return{dy4D:function(){return Di(m,x,r,s,o,1,a)},filter:function(){return By(m,y,x.shape,r,s,o,a)}}});return c?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function Kp(n){var e=function(o){return typeof o=="number"?[o,o,o]:o.length===2?[o[0],o[1],1]:o}(n),t=e[0],r=e[1],s=e[2];return t===1&&r===1&&s===1}function vT(n,e,t,r,s){D(n.length===e.rank,function(){return"Length of inShape ("+n.length+") and rank of dy ("+e.rank+") must match"});var o=n,a=e,i=!1;e.rank===4&&(i=!0,a=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]),o=[1,n[0],n[1],n[2],n[3]]);var u=o[4],c=a.shape[4];D(o.length===5,function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."}),D(a.rank===5,function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank}),D(t.rank===5,function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+t.rank}),D(u===t.shape[3],function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+t.shape[3]+"."}),D(c===t.shape[4],function(){return"Error in conv3dDerInput: depth of output ("+c+") must match output depth for filter "+t.shape[4]+"."});var l=mh(o,t.shape,r,1,s),h=G.runKernelFunc(function(d){return d.conv3dDerInput(a,t,l)},{dy5D:a});return i?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var bT=V({conv1d_:function(n,e,t,r,s,o,a){s===void 0&&(s="NWC"),o===void 0&&(o=1);var i=A(n,"x","conv1d"),u=A(e,"filter","conv1d"),c=i,l=!1;i.rank===2&&(l=!0,c=i.as3D(1,i.shape[0],i.shape[1])),D(c.rank===3,function(){return"Error in conv1d: input must be rank 3, but got rank "+c.rank+"."}),D(u.rank===3,function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."}),a!=null&&D(Rt(r),function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}),D(c.shape[2]===u.shape[1],function(){return"Error in conv1d: depth of input ("+c.shape[2]+") must match input depth for filter "+u.shape[1]+"."}),D(_n(t,o),function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+t+" and dilation '"+o+"'"}),D(s==="NWC",function(){return"Error in conv1d: got dataFormat of "+s+" but only NWC is currently supported."});var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),p=Di(d,h,[1,t],r,"NHWC",[1,o],a);return l?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),Di=V({conv2d_:function(n,e,t,r,s,o,a){s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]);var i=A(n,"x","conv2d"),u=A(e,"filter","conv2d"),c=i,l=!1;i.rank===3&&(l=!0,c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),D(c.rank===4,function(){return"Error in conv2d: input must be rank 4, but got rank "+c.rank+"."}),D(u.rank===4,function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."}),a!=null&&D(Rt(r),function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."});var h=s==="NHWC"?c.shape[3]:c.shape[1];D(h===u.shape[2],function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."}),D(_n(t,o),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"});var d=Iy(s),p=ba(c.shape,u.shape,t,o,r,a,!1,d),f=[u,c],m=G.runKernelFunc(function(g,x){var y=g.conv2d(c,u,p);return x([u,c]),y},{x:c,filter:u},function(g,x){var y=x,b=y[0],v=y[1];return D(li(o),function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+o+"'"}),{x:function(){return CT(v.shape,g,b,t,r,s)},filter:function(){return By(v,g,b.shape,t,r,s)}}},"Conv2D",p,f);return l?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),wT=V({conv3d_:function(n,e,t,r,s,o){s===void 0&&(s="NDHWC"),o===void 0&&(o=[1,1,1]);var a=A(n,"x","conv3d"),i=A(e,"filter","conv3d"),u=a,c=!1;a.rank===4&&(c=!0,u=a.as5D(1,a.shape[0],a.shape[1],a.shape[2],a.shape[3])),D(u.rank===5,function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."}),D(i.rank===5,function(){return"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."}),D(u.shape[4]===i.shape[3],function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+i.shape[3]+"."}),D(function(d,p){return Kp(d)||Kp(p)}(t,o),function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"}),D(s==="NDHWC",function(){return"Error in conv3d: got dataFormat of "+s+" but only NDHWC is currently supported."});var l=mh(u.shape,i.shape,t,o,r),h=G.runKernelFunc(function(d,p){var f=d.conv3d(u,i,l);return p([u,i]),f},{x:u,$filter:i},function(d,p){D(Kp(o),function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+o+"'"});var f=p[0],m=p[1];return{x:function(){return vT(f.shape,d,m,t,r)},$filter:function(){return function(g,x,y,b,v){var w=g;g.rank===4&&(w=g.as5D(1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]));var C=x;C.rank===4&&(C=x.as5D(1,x.shape[0],x.shape[1],x.shape[2],x.shape[3])),D(w.rank===5,function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+w.shape+"."}),D(C.rank===5,function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+C.shape+"."}),D(y.length===5,function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+y+"."}),D(w.shape[4]===y[3],function(){return"Error in conv3dDerFilter: depth of input "+w.shape[4]+") must match input depth in filter ("+y[3]+"."}),D(C.shape[4]===y[4],function(){return"Error in conv3dDerFilter: depth of dy ("+C.shape[4]+") must match output depth for filter ("+y[4]+")."});var I=mh(w.shape,y,b,1,v);return G.runKernelFunc(function(k){return k.conv3dDerFilter(w,C,I)},{x5D:w,dy5D:C})}(f,d,m.shape,t,r)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),By=V({conv2dDerFilter_:function(n,e,t,r,s,o,a){o===void 0&&(o="NHWC");var i=n;n.rank===3&&(i=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]));var u=e;u.rank===3&&(u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),D(i.rank===4,function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."}),D(u.rank===4,function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."}),D(t.length===4,function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+t+"."});var c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];D(c===t[2],function(){return"Error in conv2dDerFilter: depth of input "+c+") must match input depth in filter ("+t[2]+"."}),D(l===t[3],function(){return"Error in conv2dDerFilter: depth of dy ("+l+") must match output depth for filter ("+t[3]+")."}),a!=null&&D(Rt(s),function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+s+"."});var h=Iy(o),d=ba(i.shape,t,r,1,s,a,!1,h);return G.runKernelFunc(function(p){return p.conv2dDerFilter(i,u,d)},{x4D:i,dy4D:u})}}),CT=V({conv2dDerInput_:yT}),lp=V({depthwiseConv2d_:function(n,e,t,r,s,o,a){o===void 0&&(o=[1,1]);var i=A(n,"x","depthwiseConv2d"),u=A(e,"filter","depthwiseConv2d"),c=i,l=!1;i.rank===3&&(l=!0,c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),D(c.rank===4,function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+c.rank+"."}),D(u.rank===4,function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."}),D(c.shape[3]===u.shape[2],function(){return"Error in depthwiseConv2d: number of input channels ("+c.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."}),o==null&&(o=[1,1]),D(_n(t,o),function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"}),a!=null&&D(Rt(r),function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."});var h=ba(c.shape,u.shape,t,o,r,a,!0),d=[c,u],p=G.runKernelFunc(function(f,m){var g=f.depthwiseConv2D(c,u,h);return m([c,u]),g},{x:c,filter:u},function(f,m){D(li(o),function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+o+"'"});var g=m[0],x=m[1];return{x:function(){return IT(g.shape,f,x,h)},filter:function(){return kT(g,f,x.shape,h)}}},"DepthwiseConv2dNative",h,d);return l?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),IT=V({depthwiseConv2dDerInput_:function(n,e,t,r){var s=e,o=!1;e.rank===3&&(o=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var a=G.runKernelFunc(function(i){return i.depthwiseConv2DDerInput(s,t,r)},{dy4D:s});return o?a.as3D(a.shape[1],a.shape[2],a.shape[3]):a}}),kT=V({depthwiseConv2dDerFilter_:function(n,e,t,r){var s=n;n.rank===3&&(s=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]));var o=e;return o.rank===3&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),G.runKernelFunc(function(a){return a.depthwiseConv2DDerFilter(s,o,r)},{x4D:s,dy4D:o})}}),bee=V({separableConv2d_:function(n,e,t,r,s,o,a){o===void 0&&(o=[1,1]),a===void 0&&(a="NHWC");var i=A(n,"x","separableConv2d"),u=A(e,"depthwiseFilter","separableConv2d"),c=A(t,"pointwiseFilter","separableConv2d"),l=i,h=!1;if(i.rank===3&&(h=!0,l=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(l.rank===4,function(){return"Error in separableConv2d: input must be rank 4, but got rank "+l.rank+"."}),D(u.rank===4,function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."}),D(c.rank===4,function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."}),D(c.shape[0]===1,function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+c.shape[0]+"."}),D(c.shape[1]===1,function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+c.shape[1]+"."});var d=u.shape[2],p=u.shape[3];D(c.shape[2]===d*p,function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+d*p+", but got "+c.shape[2]+"."});var f=lp(l,u,r,s,a,o),m=Di(f,c,1,"valid",a);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),ST=V({conv2dTranspose_:function(n,e,t,r,s,o){return yT(t,A(n,"x","conv2dTranspose"),A(e,"filter","conv2dTranspose"),r,s,"NHWC",o)}}),wee=V({conv3dTranspose_:function(n,e,t,r,s){return vT(t,A(n,"x","conv3dTranspose"),A(e,"filter","conv3dTranspose"),r,s)}}),zy=V({matMul_:function(n,e,t,r){var s;t===void 0&&(t=!1),r===void 0&&(r=!1);var o=A(n,"a","matMul"),a=A(e,"b","matMul");s=kt(o,a),o=s[0],a=s[1];var i=t?o.shape[o.rank-2]:o.shape[o.rank-1],u=r?a.shape[a.rank-1]:a.shape[a.rank-2],c=t?o.shape[o.rank-1]:o.shape[o.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],h=o.shape.slice(0,-2),d=a.shape.slice(0,-2),p=be(h),f=be(d);D(o.rank>=2&&a.rank>=2&&o.rank===a.rank,function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+o.rank+" and "+a.rank+"."}),D(Qt(h,d),function(){return"Error in matMul: outer dimensions ("+h+") and ("+d+") of Tensors with shapes "+o.shape+" and "+a.shape+" must match."}),D(i===u,function(){return"Error in matMul: inner shapes ("+i+") and ("+u+") of Tensors with shapes "+o.shape+" and "+a.shape+" and transposeA="+t+" and transposeB="+r+" must match."});var m=o.shape.slice(0,-2).concat([c,l]),g=t?o.as3D(p,i,c):o.as3D(p,c,i),x=r?a.as3D(f,l,u):a.as3D(f,u,l),y={transposeA:t,transposeB:r};return G.runKernelFunc(function(b,v){var w=b.batchMatMul(g,x,t,r);return v([g,x]),w},{a:g,b:x},function(b,v){var w=v,C=w[0],I=w[1];return t||r?!t&&r?{a:function(){return b.matMul(I,!1,!1)},b:function(){return b.matMul(C,!0,!1)}}:t&&!r?{a:function(){return I.matMul(b,!1,!0)},b:function(){return C.matMul(b,!1,!1)}}:{a:function(){return I.matMul(b,!0,!0)},b:function(){return b.matMul(C,!0,!0)}}:{a:function(){return b.matMul(I,!1,!0)},b:function(){return C.matMul(b,!0,!1)}}},"BatchMatMul",y).reshape(m)}}),Cee=V({dot_:function(n,e){var t=A(n,"t1","dot"),r=A(e,"t2","dot");D(!(t.rank!==1&&t.rank!==2||r.rank!==1&&r.rank!==2),function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+t.rank+" and "+r.rank+"."});var s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];return D(s===o,function(){return"Error in dot: inner dimensions of inputs must match, but got "+s+" and "+o+"."}),t.rank===1&&r.rank===1?t.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():t.rank===1&&r.rank===2?t.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():t.rank===2&&r.rank===1?t.matMul(r.as2D(-1,1)).as1D():t.matMul(r.as2D(r.shape[0],r.shape[1]))}}),Iee=V({outerProduct_:function(n,e){var t=A(n,"v1","outerProduct"),r=A(e,"v2","outerProduct");return D(t.rank===1&&r.rank===1,function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+t.rank+" and "+r.rank+"."}),t.as2D(-1,1).matMul(r.as2D(1,-1))}}),Fi=V({reverse_:function(n,e){var t=A(n,"x","reverse");if(t.rank===0)return t.clone();var r=Gt(e,t.shape);return G.runKernelFunc(function(s){return s.reverse(t,r)},{$x:t},function(s){return{$x:function(){return s.reverse(r)}}}).reshapeAs(t)}}),kee=V({reverse1d_:function(n){var e=A(n,"x","reverse");return D(e.rank===1,function(){return"Error in reverse1D: x must be rank 1 but got rank "+e.rank+"."}),Fi(e,0)}}),See=V({reverse2d_:function(n,e){var t=A(n,"x","reverse");return D(t.rank===2,function(){return"Error in reverse2D: x must be rank 2 but got rank "+t.rank+"."}),Fi(t,e)}}),Nee=V({reverse3d_:function(n,e){var t=A(n,"x","reverse");return D(t.rank===3,function(){return"Error in reverse3D: x must be rank 3 but got rank "+t.rank+"."}),Fi(t,e)}}),Tee=V({reverse4d_:function(n,e){var t=A(n,"x","reverse");return D(t.rank===4,function(){return"Error in reverse4D: x must be rank 4 but got rank "+t.rank+"."}),Fi(t,e)}});function NT(n,e,t,r,s,o){var a=A(n,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),D(i.rank===4,function(){return"Error in maxPool: input must be rank 4 but got rank "+i.rank+"."}),D(_n(t,r),function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+r+"'"}),o!=null&&D(Rt(s),function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."});var c=sa(i.shape,e,t,r,s,o);if(c.filterWidth===1&&c.filterHeight===1&&Qt(c.inShape,c.outShape))return a.clone();var l=[i],h=G.runKernelFunc(function(d,p){var f=d.maxPool(i,c);return p([i,f]),f},{x:i},function(d,p){var f=p[0],m=p[1];return{x:function(){return function(g,x,y,b,v,w,C,I){var k=A(g,"dy","maxPoolBackprop"),S=A(x,"input","maxPoolBackprop"),N=A(y,"output","maxPoolBackprop");D(S.rank===k.rank,function(){return"Rank of input ("+S.rank+") does not match rank of dy ("+k.rank+")"}),D(_n(v,w),function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+v+" and dilations '"+w+"'"}),D(k.rank===4,function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+k.rank+"."}),D(S.rank===4,function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+S.rank+"."});var E=sa(S.shape,b,v,w,C,I);return G.runKernelFunc(function(R){return R.maxPoolBackprop(k,S,N,E)},{$dy:k,$input:S})}(d,f,m,e,t,r,s)}}},"MaxPool",c,l);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function TT(n,e,t,r,s,o){var a=A(n,"x","avgPool","float32");D(_n(t,r),function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+r+"'"});var i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),D(i.rank===4,function(){return"Error in avgPool: x must be rank 4 but got rank "+i.rank+"."}),o!=null&&D(Rt(s),function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."});var c=sa(i.shape,e,t,r,s,o);if(c.filterWidth===1&&c.filterHeight===1&&Qt(c.inShape,c.outShape))return a.clone();var l=G.runKernelFunc(function(h){return h.avgPool(i,c)},{x:i},function(h){return{x:function(){return function(d,p,f,m,g,x){var y=A(d,"dy","avgPoolBackprop"),b=A(p,"input","avgPoolBackprop");D(b.rank===y.rank,function(){return"Rank of input ("+b.rank+") does not match rank of dy ("+y.rank+")"}),D(_n(m,g),function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+m+" and dilations '"+g+"'"});var v=b,w=y,C=!1;b.rank===3&&(C=!0,v=b.as4D(1,b.shape[0],b.shape[1],b.shape[2]),w=y.as4D(1,y.shape[0],y.shape[1],y.shape[2])),D(w.rank===4,function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+w.rank+"."}),D(v.rank===4,function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+v.rank+"."});var I=sa(v.shape,f,m,g,x),k=G.runKernelFunc(function(S){return S.avgPoolBackprop(w,v,I)},{dy4D:w,input4D:v});return C?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}(h,i,e,t,r,s)}}},"AvgPool",c);return l=l.cast(a.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}var ET=V({maxPool_:function(n,e,t,r,s){return NT(n,e,t,1,r,s)}}),RT=V({avgPool_:function(n,e,t,r,s){return TT(n,e,t,1,r,s)}}),Eee=V({pool_:function(n,e,t,r,s,o){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");var a=A(n,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),D(_n(o,s),function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+s+"'"});var c,l=sa(i.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];c=r==="same"?function(v,w){var C=v.map(function(S,N){return S+(S-1)*(w[N]-1)}).map(function(S){return S-1}),I=C.map(function(S){return Math.floor(S/2)}),k=C.map(function(S,N){return S-I[N]});return C.map(function(S,N){return[I[N],k[N]]})}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];var d=h[0]===1&&h[1]===1,p=function(v,w,C){var I=C.map(function(O){return O[0]}),k=C.map(function(O){return O[1]}),S=v.concat(I,k),N=w.map(function(O,F){return(O-S[F]%O)%O}),E=k.map(function(O,F){return O+N[F]}),R=w.map(function(O,F){return[I[F],E[F]]}),_=w.map(function(O,F){return[0,N[F]]});return[R,_]}([l.inHeight,l.inWidth],h,c),f=p[0],m=p[1],g=d?r:"valid",x=d?i:xy(i,h,f),y=(t==="avg"?function(){return TT(x,e,o,1,g)}:function(){return NT(x,e,o,1,g)})(),b=d?y:gy(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),$T=V({maxPool3d_:function(n,e,t,r,s,o,a){o===void 0&&(o="NDHWC");var i=A(n,"x","maxPool3d"),u=i,c=!1;i.rank===4&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),a==null&&(a=[1,1,1]),D(u.rank===5,function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."}),D(o==="NDHWC",function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+o}),D(_n(t,a),function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+a+"'"}),s!=null&&D(Rt(r),function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."});var l=fh(u.shape,e,t,a,r,s,o),h=G.runKernelFunc(function(d,p){var f=d.maxPool3d(u,l);return p([u,f]),f},{x:u},function(d,p){var f=p[0],m=p[1];return{x:function(){return function(g,x,y,b,v,w,C,I){var k=A(g,"dy","maxPool3dBackprop"),S=A(x,"input","maxPool3dBackprop"),N=A(y,"output","maxPool3dBackprop"),E=k,R=S,_=N,O=!1;S.rank===4&&(O=!0,E=k.as5D(1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]),R=S.as5D(1,S.shape[0],S.shape[1],S.shape[2],S.shape[3]),_=N.as5D(1,N.shape[0],N.shape[1],N.shape[2],N.shape[3])),D(E.rank===5,function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+E.rank+"."}),D(R.rank===5,function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+R.rank+"."}),D(_.rank===5,function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+_.rank+"."}),w==null&&(w=[1,1,1]),D(_n(v,w),function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+v+" and dilations '"+w+"'"}),I!=null&&D(Rt(C),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+I+" but got pad "+C+"."});var F=fh(R.shape,b,v,w,C,I),L=G.runKernelFunc(function(B){return B.maxPool3dBackprop(E,R,_,F)},{dy5D:E,input5D:R});return O?L.as4D(L.shape[1],L.shape[2],L.shape[3],L.shape[4]):L}(d,f,m,e,t,a,r,s)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),AT=V({avgPool3d_:function(n,e,t,r,s,o,a){o===void 0&&(o="NDHWC");var i=A(n,"x","avgPool3d","float32"),u=i,c=!1;i.rank===4&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),a==null&&(a=[1,1,1]),D(u.rank===5,function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."}),D(o==="NDHWC",function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+o}),D(_n(t,a),function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+a+"'"}),s!=null&&D(Rt(r),function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."});var l=fh(u.shape,e,t,a,r,s,o),h=G.runKernelFunc(function(d){return d.avgPool3d(u,l)},{x:u},function(d){return{x:function(){return function(p,f,m,g,x,y,b){var v=A(p,"dy","avgPool3dBackprop"),w=A(f,"input","avgPool3dBackprop"),C=v,I=w,k=!1;w.rank===4&&(k=!0,C=v.as5D(1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]),I=w.as5D(1,w.shape[0],w.shape[1],w.shape[2],w.shape[3])),D(C.rank===5,function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+C.rank+"."}),D(I.rank===5,function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+I.rank+"."}),x==null&&(x=[1,1,1]),D(_n(g,x),function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+g+" and dilations '"+x+"'"}),b!=null&&D(Rt(y),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+b+" but got pad "+y+"."});var S=fh(I.shape,m,g,x,y,b),N=G.runKernelFunc(function(E){return E.avgPool3dBackprop(C,I,S)},{dy5D:C,input5D:I});return k?N.as4D(N.shape[1],N.shape[2],N.shape[3],N.shape[4]):N}(d,u,e,t,a,r,s)}}});return h=h.cast(u.dtype),c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),DT=V({maxPoolWithArgmax_:function(n,e,t,r,s){s===void 0&&(s=!1);var o=A(n,"x","maxPoolWithArgmax"),a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},i=G.runKernel("MaxPoolWithArgmax",{x:o},a);return{result:i[0],indexes:i[1]}}}),cs=V({slice_:function(n,e,t){var r,s,o=A(n,"x","slice");if(o.rank===0)throw new Error("Slicing scalar is not possible");(r=typeof e=="number"?[e].concat(new Array(o.rank-1).fill(0)):e.length<o.rank?e.concat(new Array(o.rank-e.length).fill(0)):e.slice()).forEach(function(u){D(u!==-1,function(){return"slice() does not support negative begin indexing."})}),s=(s=t==null?new Array(o.rank).fill(-1):typeof t=="number"?[t].concat(new Array(o.rank-1).fill(-1)):t.length<o.rank?t.concat(new Array(o.rank-t.length).fill(-1)):t).map(function(u,c){return u>=0?u:(D(u===-1,function(){return"Negative size values should be exactly -1 but got "+u+" for the slice() size at index "+c+"."}),o.shape[c]-r[c])}),BQ(o,r,s);var a=o.shape,i={begin:r,size:s};return G.runKernelFunc(function(u){return u.slice(o,r,s)},{x:o},function(u){for(var c=[],l=0;l<u.rank;l++)c.push([r[l],a[l]-r[l]-s[l]]);return{x:function(){return bo(u,c)}}},"Slice",i)}}),Ree=V({slice1d_:function(n,e,t){var r=A(n,"x","slice1d");return D(r.rank===1,function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"}),cs(r,[e],[t])}}),$ee=V({slice2d_:function(n,e,t){var r=A(n,"x","slice2d");return D(r.rank===2,function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"}),cs(r,e,t)}}),Aee=V({slice3d_:function(n,e,t){var r=A(n,"x","slice3d");return D(r.rank===3,function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"}),cs(r,e,t)}}),Dee=V({slice4d_:function(n,e,t){var r=A(n,"x","slice4d");return D(r.rank===4,function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"}),cs(r,e,t)}});function FT(n,e,t,r,s){return e.rank<t.rank&&(e=e.reshape(qn(e.shape,r))),n.rank<t.rank&&(n=n.reshape(qn(n.shape,r))),{x:function(){var o=n.mul(t.equal(e).cast(n.dtype));return s==null?o:o.transpose(s)}}}var OT=V({all_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","all","bool"),s=Gt(e,r.shape),o=s,a=ds(o,r.rank);a!=null&&(r=r.transpose(a),o=ps(o.length,r.rank));var i=G.runKernelFunc(function(c){return c.all(r,o)},{$x:r});if(t){var u=qn(i.shape,s);return i.reshape(u)}return i}}),_T=V({any_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","any","bool"),s=Gt(e,r.shape),o=s,a=ds(o,r.rank);a!=null&&(r=r.transpose(a),o=ps(o.length,r.rank));var i=G.runKernelFunc(function(c){return c.any(r,o)},{$x:r});if(t){var u=qn(i.shape,s);return i.reshape(u)}return i}}),MT=V({argMax_:function(n,e){e===void 0&&(e=0);var t=A(n,"x","argMax");e==null&&(e=0);var r=Gt(e,t.shape),s=ds(r,t.rank);s!=null&&(t=t.transpose(s),r=ps(r.length,t.rank));var o={axis:r[0]},a=[t];return G.runKernelFunc(function(i,u){var c=i.argMax(t,r[0]);return u([t]),c},{x:t},function(i,u){var c=u[0];return{x:function(){return Ze(c)}}},"ArgMax",o,a)}}),LT=V({argMin_:function(n,e){e===void 0&&(e=0);var t=A(n,"x","argMin");e==null&&(e=0);var r=Gt(e,t.shape),s=ds(r,t.rank);return s!=null&&(t=t.transpose(s),r=ps(r.length,t.rank)),G.runKernelFunc(function(o,a){var i=o.argMin(t,r[0]);return a([t]),i},{$x:t},function(o,a){var i=a[0];return{$x:function(){return Ze(i)}}})}}),Fee=V({logSumExp_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","logSumExp"),s=Gt(e,r.shape),o=r.max(s,!0),a=r.sub(o).exp().sum(s).log(),i=o.reshape(a.shape).add(a);if(t){var u=qn(i.shape,s);return i.reshape(u)}return i}}),PT=V({max_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","max"),s=r,o=Gt(e,r.shape),a=o,i=ds(a,r.rank);i!=null&&(r=r.transpose(i),a=ps(a.length,r.rank));var u=[r],c=G.runKernelFunc(function(h,d){var p=h.max(r,a);return d([s,p]),p},{x:r},function(h,d){return FT(h,d[1],d[0],o,i)},"Max",{axes:a},u,[!0]);if(t){var l=qn(c.shape,o);c=c.reshape(l)}return c}}),BT=V({mean_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","mean"),s=Gt(e,r.shape),o=be(vn(r.shape,s)[1]);return op(function(a){var i=ve(o);return{value:(i.dtype===a.dtype?a:a.cast(i.dtype)).div(i).sum(e,t),gradFunc:function(u){var c=a.shape.slice();return s.forEach(function(l){c[l]=1}),u.reshape(c).mul(va(a.shape,"float32")).div(o)}}})(r)}}),zT=V({min_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","min"),s=r,o=Gt(e,r.shape),a=o,i=ds(a,r.rank);i!=null&&(r=r.transpose(i),a=ps(a.length,r.rank));var u=[r],c=G.runKernelFunc(function(h,d){var p=h.min(r,a);return d([s,p]),p},{x:r},function(h,d){return FT(h,d[1],d[0],o,i)},"Min",{axes:a},u,[!0]);if(t){var l=qn(c.shape,o);c=c.reshape(l)}return c}}),Oee=V({moments_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=Gt(e,(n=A(n,"x","moments")).shape),s=n.mean(r,t),o=s.shape;t||(o=qn(s.shape,r));var a=n.toFloat().sub(s.reshape(o)).square();return{mean:s,variance:a.mean(r,t)}}}),ys=V({sum_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","sum");r.dtype==="bool"&&(r=r.toInt());var s=Gt(e,r.shape);return op(function(o){var a=ds(s,o.rank),i=s,u=o;a!=null&&(u=o.transpose(a),i=ps(i.length,o.rank));var c=function(p){var f=o.shape.slice();return s.forEach(function(m){f[m]=1}),p.reshape(f).mul(va(o.shape,"float32"))},l={axes:i},h=G.runKernelFunc(function(p){return p.sum(u,i)},{x:u},function(p){return{x:function(){return c(p)}}},"Sum",l);if(t){var d=qn(h.shape,s);h=h.reshape(d)}return{value:h,gradFunc:c}})(r)}}),Vy=V({prod_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=A(n,"x","prod");r.dtype==="bool"&&(r=r.toInt());var s=Gt(e,r.shape),o=ds(s,r.rank),a=s,i=r;o!=null&&(i=r.transpose(o),a=ps(a.length,r.rank));var u=G.runKernelFunc(function(l){return l.prod(i,a)},{permutedX:i});if(t){var c=qn(u.shape,s);u=u.reshape(c)}return u}}),Wy=V({elu_:function(n){var e=A(n,"x","elu");return G.runKernelFunc(function(t,r){var s=t.elu(e);return r([s]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return G.runKernelFunc(function(o){return o.eluDer(t,s)},{dy:t,y:s})}}})}}),VT=V({leakyRelu_:function(n,e){e===void 0&&(e=.2);var t=A(n,"x","leakyRelu");return sp(ve(e).mul(t),t)}}),Uy=V({prelu_:function(n,e){var t=A(n,"x","prelu"),r=A(e,"alpha","prelu");return G.runKernelFunc(function(s,o){var a=s.prelu(t,r);return o([t,r]),a},{x:t,alpha:r},function(s,o){var a=o[0],i=o[1],u=a.greater(0);return{x:function(){return ao(u,s,s.mul(i))},alpha:function(){var c=ao(u,Ze(s),s.mul(a)),l=Xt(i.shape,s.shape);return l.length>0&&(c=c.sum(l)),c.reshape(i.shape)}}},"Prelu")}}),Gy=V({relu_:function(n){var e=A(n,"x","relu");return e.dtype==="bool"?e.toInt():G.runKernelFunc(function(t,r){var s=t.relu(e);return r([e]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mulStrict(s.step().toFloat())}}},"Relu")}}),WT=V({relu6_:function(n){var e=A(n,"x","relu6");return e.dtype==="bool"?e.toInt():G.runKernelFunc(function(t,r){var s=t.relu6(e);return r([e]),s},{x:e},function(t,r){var s=r[0],o=s.lessEqual(6).mul(s.step());return{x:function(){return t.mulStrict(o.toFloat())}}},"Relu6")}}),UT=V({selu_:function(n){var e=A(n,"x","selu");return G.runKernelFunc(function(t,r){var s=t.selu(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){var o=s.greater(ve(0)),a=ve(Ey),i=ve(Ry),u=t.mul(i),c=t.mul(a).mul(s.toFloat().exp());return ao(o,u,c)}}})}}),GT=V({localResponseNormalization_:function(n,e,t,r,s){e===void 0&&(e=5),t===void 0&&(t=1),r===void 0&&(r=1),s===void 0&&(s=.5);var o=A(n,"x","localResponseNormalization");D(o.rank===4||o.rank===3,function(){return`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank `+o.rank+"."}),D(Rt(e),function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+e+"."});var a=o,i=!1;o.rank===3&&(i=!0,a=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]));var u=G.runKernelFunc(function(c,l){var h=c.localResponseNormalization4D(a,e,t,r,s);return l([a,h]),h},{x4D:a},function(c,l){var h=l[0],d=l[1];return{x4D:function(){return G.runKernelFunc(function(p){return p.LRNGrad(c,h,d,e,t,r,s)},{})}}});return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),HT=V({norm_:function(n,e,t,r){e===void 0&&(e="euclidean"),t===void 0&&(t=null),r===void 0&&(r=!1);var s=function i(u,c,l){if(l===void 0&&(l=null),u.rank===0)return u.abs();if(u.rank!==1&&l===null)return i(u.reshape([-1]),c,l);if(u.rank===1||typeof l=="number"||Array.isArray(l)&&l.length===1){if(c===1)return u.abs().sum(l);if(c===1/0)return u.abs().max(l);if(c===-1/0)return u.abs().min(l);if(c==="euclidean"||c===2)return u.abs().pow(ve(2,"int32")).sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}if(Array.isArray(l)&&l.length===2){if(c===1)return u.abs().sum(l[0]).max(l[1]-1);if(c===1/0)return u.abs().sum(l[1]).max(l[0]);if(c===-1/0)return u.abs().sum(l[1]).min(l[0]);if(c==="fro"||c==="euclidean")return u.square().sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}throw new Error("Error in norm: invalid axis: "+l)}(n=A(n,"x","norm"),e,t),o=s.shape;if(r){var a=Gt(t,n.shape);o=qn(s.shape,a)}return s.reshape(o)}}),_ee=V({basicLSTMCell_:function(n,e,t,r,s,o){var a=A(n,"forgetBias","basicLSTMCell"),i=A(e,"lstmKernel","basicLSTMCell"),u=A(t,"lstmBias","basicLSTMCell"),c=A(r,"data","basicLSTMCell"),l=A(s,"c","basicLSTMCell"),h=A(o,"h","basicLSTMCell"),d=c.concat(h,1).matMul(i).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),x=d.slice([0,f],m),y=d.slice([0,2*f],m),b=d.slice([0,3*f],m),v=g.sigmoid().mulStrict(x.tanh()).addStrict(l.mulStrict(a.add(y).sigmoid())),w=v.tanh().mulStrict(b.sigmoid());return[v,w]}}),Mee=V({multiRNNCell_:function(n,e,t,r){for(var s=A(e,"data","multiRNNCell"),o=ch(t,"c","multiRNNCell"),a=ch(r,"h","multiRNNCell"),i=s,u=[],c=0;c<n.length;c++){var l=n[c](i,o[c],a[c]);u.push(l[0]),u.push(l[1]),i=l[1]}var h=[],d=[];for(c=0;c<u.length;c+=2)h.push(u[c]),d.push(u[c+1]);return[h,d]}}),Lee=V({movingAverage_:function(n,e,t,r,s){s===void 0&&(s=!0);var o=A(n,"v","movingAverage"),a=A(e,"x","movingAverage"),i=A(t,"decay","movingAverage");_9(o,a),D(Qt(o.shape,a.shape),function(){return"Shape mismatch in v and x"});var u=ve(1),c=u.sub(i),l=a.sub(o).mul(c);if(s){D(r!=null,function(){return"When using zeroDebias: true, step is required."});var h=A(r,"step","movingAverage");l=l.div(u.sub(Nu(i,h)))}return o.add(l)}}),jT=V({stridedSlice_:function(n,e,t,r,s,o,a,i,u){if(s===void 0&&(s=0),o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),u===void 0&&(u=0),r==null&&(r=new Array(e.length)),a!==0)throw new Error("ellipsis mask is not yet supported");var c=A(n,"x","stridedSlice"),l=K0(i),h=c.shape.slice();l.forEach(function(g){e[g]=0,t[g]=1,h.splice(g,0,1)}),c=c.reshape(h);for(var d=0;d<c.rank;d++)e[d]=zQ(s,e,r,c.shape,d),t[d]=VQ(o,t,r,c.shape,d),r[d]=r[d]||1;var p=K0(u);p.forEach(function(g){t[g]=e[g]+1,r[g]=1});var f=Cy(e,t,r),m=f.filter(function(g,x){return p.indexOf(x)===-1});return r.every(function(g){return g===1})?cs(c,e,f).reshape(m):G.runKernelFunc(function(g){return g.stridedSlice(c,e,t,r)},{$x:c}).reshape(m)}}),qT=V({topk_:function(n,e,t){e===void 0&&(e=1),t===void 0&&(t=!0);var r=A(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");var s=r.shape[r.shape.length-1];if(e>s)throw new Error("'k' passed to topk() must be <= the last dimension ("+s+") but got "+e);var o=G.runKernelFunc(function(a){return a.topk(r,e,t)},{$x:r});return{values:o[0],indices:o[1]}}}),KT=V({scatterND_:function(n,e,t){var r=A(n,"indices","scatterND","int32"),s=A(e,"updates","scatterND");return PQ(s,r,t),G.runKernelFunc(function(o){return o.scatterND(r,s,t)},{indices:r,updates:s},null,"ScatterNd",{shape:t})}}),hp=V({fft_:function(n){D(n.dtype==="complex64",function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+n.dtype+"."});var e=n.shape[n.shape.length-1],t=n.size/e,r=n.as2D(t,e);return G.runKernelFunc(function(s){return s.fft(r)},{input:n}).reshape(n.shape)}}),Eu=V({ifft_:function(n){D(n.dtype==="complex64",function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+n.dtype+"."});var e=n.shape[n.shape.length-1],t=n.size/e,r=n.as2D(t,e);return G.runKernelFunc(function(s){return s.ifft(r)},{input:n}).reshape(n.shape)}}),dp=V({rfft_:function(n,e){D(n.dtype==="float32",function(){return"The dtype for rfft() must be real value but got "+n.dtype});var t,r=n.shape[n.shape.length-1],s=n.size/r;if(e!=null&&e<r){var o=n.shape.map(function(x){return 0}),a=n.shape.map(function(x){return x});a[n.shape.length-1]=e,t=n.slice(o,a),r=e}else if(e!=null&&e>r){var i=n.shape.map(function(x){return x});i[n.shape.length-1]=e-r,t=n.concat(Ct(i),n.shape.length-1),r=e}else t=n;var u=t.zerosLike(),c=tn(t,u).as2D(s,r),l=hp(c),h=Math.floor(r/2)+1,d=Jn(l),p=Ar(l),f=d.split([h,r-h],d.shape.length-1),m=p.split([h,r-h],p.shape.length-1),g=t.shape.slice();return g[t.shape.length-1]=h,tn(f[0],m[0]).reshape(g)}}),Hy=V({irfft_:function(n){var e=n.shape[n.shape.length-1],t=n.size/e;if(e<=2){var r=n.as2D(t,e),s=Eu(r);return Jn(s)}var o=[t,2*(e-1)],a=Jn(n).as2D(t,e),i=Ar(n).as2D(t,e),u=a.slice([0,1],[t,e-2]).reverse(1),c=i.slice([0,1],[t,e-2]).reverse(1).mul(ve(-1)),l=a.concat(u,1),h=i.concat(c,1);return r=tn(l,h).as2D(o[0],o[1]),s=Eu(r),Jn(s)}}),Pee=Object.freeze({fft:hp,ifft:Eu,rfft:dp,irfft:Hy}),jy=V({sparseToDense_:function(n,e,t,r){r===void 0&&(r=0);var s=A(n,"sparseIndices","sparseToDense","int32"),o=A(e,"sparseValues","sparseToDense"),a=A(r,"defaultValue","sparseToDense",o.dtype);return function(i,u,c,l){if(i.dtype!=="int32")throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+i.dtype+".");if(i.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+i.shape+".");var h=i.rank>0?i.shape[0]:1,d=i.rank>1?i.shape[1]:1;if(c.length!==d)throw new Error("outputShape has incorrect number of elements:, "+c.length+", should be: "+d+".");var p=u.size;if(u.rank!==0&&(u.rank!==1||p!==h))throw new Error("sparseValues has incorrect shape "+u.shape+", should be [] or ["+h+"]");if(u.dtype!==l.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,o,t,a),G.runKernelFunc(function(i){return i.sparseToDense(s,o,t,a)},{$sparseIndices:s,$sparseValues:o,$defaultValue:a})}}),XT=V({gatherND_:function(n,e){var t=A(e,"indices","gatherND","int32"),r=A(n,"x","gatherND");return G.runKernelFunc(function(s){return s.gatherND(r,t)},{x:r,indices:t},null,"GatherNd")}}),Bee=V({diag_:function(n){var e=A(n,"x","diag").flatten(),t=n.shape.concat(n.shape);return G.runKernelFunc(function(r){return r.diag(e)},{$x:e}).reshape(t)}}),zee=V({dropout_:function(n,e,t,r){var s=A(n,"x","dropout");if(D(s.dtype==="float32",function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+s.dtype+" tensor instead."}),D(e>=0&&e<1,function(){return"rate must be a float in the range [0, 1), but got "+e+"."}),e===0)return n instanceof It?s.clone():s;var o=function(u,c){if(c==null)return u.shape.slice();if(Qt(u.shape,c))return c;if(u.shape.length===c.length){for(var l=[],h=0;h<u.shape.length;h++)c[h]==null&&u.shape[h]!=null?l.push(u.shape[h]):l.push(c[h]);return l}return c}(s,t),a=1-e,i=Oy(o,0,1,"float32",r).add(a).floor().div(a);return s.mul(i)}});function YT(n,e,t){for(var r=1-n%2,s=new Float32Array(n),o=0;o<n;++o){var a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return Es(s,"float32")}var qy=V({hannWindow_:function(n){return YT(n,.5,.5)}}),QT=V({hammingWindow_:function(n){return YT(n,.54,.46)}}),Ky=V({frame_:function(n,e,t,r,s){r===void 0&&(r=!1),s===void 0&&(s=0);for(var o=0,a=[];o+e<=n.size;)a.push(cs(n,o,e)),o+=t;if(r)for(;o<n.size;){var i=o+e-n.size,u=wr([cs(n,o,e-i),Jd([i],s)]);a.push(u),o+=t}return a.length===0?zo([],[0,e]):wr(a).as2D(a.length,e)}}),ZT=V({stft_:function(n,e,t,r,s){var o;s===void 0&&(s=qy),r==null&&(o=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(o)/Math.log(2)))));for(var a=Ky(n,e,t),i=Ot(a,s(e)),u=[],c=0;c<a.shape[0];c++)u.push(dp(i.slice([c,0],[1,e]),r));return wr(u)}}),Vee=Object.freeze({hannWindow:qy,hammingWindow:QT,frame:Ky,stft:ZT}),In,Wee=function(n,e,t){return t===void 0&&(t=1),ke(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g;return Se(this,function(x){switch(x.label){case 0:return r=A(n,"predictions","inTopK"),s=A(e,"targets","inTopK"),D(r.rank>1,function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank}),D(r.rank-1===s.rank,function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+s.rank}),st(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),o=r.shape[r.shape.length-1],D(t>0&&t<=o,function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+o+"), but got "+t}),[4,r.data()];case 1:return a=x.sent(),[4,s.data()];case 2:for(i=x.sent(),u=[a.length/o,o],l=u[1],h=ra("bool",c=u[0]),d=0;d<c;d++){for(p=d*l,f=a.subarray(p,p+l),m=[],g=0;g<f.length;g++)m.push({value:f[g],index:g});for(m.sort(function(y,b){return b.value-y.value}),h[d]=0,g=0;g<t;g++)if(m[g].index===i[d]){h[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),[2,nn(h,s.shape,"bool")]}})})};(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(In||(In={}));var Uee=V({absoluteDifference_:function(n,e,t,r){r===void 0&&(r=In.SUM_BY_NONZERO_WEIGHTS);var s=A(n,"labels","absoluteDifference"),o=A(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=A(t,"weights","absoluteDifference")),st(s.shape,o.shape,"Error in absoluteDifference: ");var i=s.sub(o).abs();return Ls(i,a,r)}}),Ls=V({computeWeightedLoss_:function(n,e,t){t===void 0&&(t=In.SUM_BY_NONZERO_WEIGHTS);var r=A(n,"losses","computeWeightedLoss"),s=null;e!=null&&(s=A(e,"weights","computeWeightedLoss"));var o=s==null?r:r.mul(s);if(t===In.NONE)return o;if(t===In.SUM)return o.sum();if(t===In.MEAN){if(s==null)return o.mean();var a=r.size/s.size,i=o.sum().div(s.sum());return a>1?i.div(ve(a)):i}if(t===In.SUM_BY_NONZERO_WEIGHTS){if(s==null)return o.sum().div(ve(r.size));var u=s.mul(va(r.shape)).notEqual(ve(0)).sum().toFloat();return o.sum().div(u)}throw Error("Unknown reduction: "+t)}}),Gee=V({cosineDistance_:function(n,e,t,r,s){s===void 0&&(s=In.SUM_BY_NONZERO_WEIGHTS);var o=A(n,"labels","cosineDistance"),a=A(e,"predictions","cosineDistance"),i=null;r!=null&&(i=A(r,"weights","cosineDistance")),st(o.shape,a.shape,"Error in cosineDistance: ");var u=ve(1).sub(o.mul(a).sum(t,!0));return Ls(u,i,s)}}),Hee=V({hingeLoss_:function(n,e,t,r){r===void 0&&(r=In.SUM_BY_NONZERO_WEIGHTS);var s=A(n,"labels","hingeLoss"),o=A(e,"predictions","hingeLoss"),a=null;t!=null&&(a=A(t,"weights","hingeLoss")),st(s.shape,o.shape,"Error in hingeLoss: ");var i=ve(1);s=ve(2).mul(s).sub(i);var u=i.sub(s.mul(o)).relu();return Ls(u,a,r)}}),jee=V({huberLoss_:function(n,e,t,r,s){r===void 0&&(r=1),s===void 0&&(s=In.SUM_BY_NONZERO_WEIGHTS);var o=A(n,"labels","huberLoss"),a=A(e,"predictions","huberLoss"),i=null;t!=null&&(i=A(t,"weights","huberLoss")),st(o.shape,a.shape,"Error in huberLoss: ");var u=ve(r),c=a.sub(o).abs(),l=wy(c,u),h=c.sub(l),d=ve(.5).mul(l.square()).add(u.mul(h));return Ls(d,i,s)}}),qee=V({logLoss_:function(n,e,t,r,s){r===void 0&&(r=1e-7),s===void 0&&(s=In.SUM_BY_NONZERO_WEIGHTS);var o=A(n,"labels","logLoss"),a=A(e,"predictions","logLoss"),i=null;t!=null&&(i=A(t,"weights","logLoss")),st(o.shape,a.shape,"Error in logLoss: ");var u=ve(1),c=ve(r),l=o.mul(a.add(c).log()).neg().sub(u.sub(o).mul(u.sub(a).add(c).log()));return Ls(l,i,s)}}),Kee=V({meanSquaredError_:function(n,e,t,r){r===void 0&&(r=In.SUM_BY_NONZERO_WEIGHTS);var s=A(n,"labels","meanSquaredError"),o=A(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=A(t,"weights","meanSquaredError")),st(s.shape,o.shape,"Error in meanSquaredError: ");var i=s.squaredDifference(o);return Ls(i,a,r)}}),Xee=V({sigmoidCrossEntropy_:function(n,e,t,r,s){r===void 0&&(r=0),s===void 0&&(s=In.SUM_BY_NONZERO_WEIGHTS);var o=A(n,"multiClassLabels","sigmoidCrossEntropy"),a=A(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=A(t,"weights","sigmoidCrossEntropy")),st(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=ve(r),c=ve(1),l=ve(.5);o=o.mul(c.sub(u)).add(l.mul(u))}var h=function(d,p){var f=A(d,"labels","sigmoidCrossEntropyWithLogits"),m=A(p,"logits","sigmoidCrossEntropyWithLogits");st(f.shape,m.shape,"Error in sigmoidCrossEntropyWithLogits: ");var g=m.relu(),x=m.mul(f),y=m.abs().neg().exp().log1p();return g.sub(x).add(y)}(o,a);return Ls(h,i,s)}}),Yee=V({softmaxCrossEntropy_:function(n,e,t,r,s){r===void 0&&(r=0),s===void 0&&(s=In.SUM_BY_NONZERO_WEIGHTS);var o=A(n,"onehotLabels","softmaxCrossEntropy"),a=A(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=A(t,"weights","softmaxCrossEntropy")),st(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){var u=ve(r),c=ve(1),l=ve(o.shape[1]);o=o.mul(c.sub(u)).add(u.div(l))}var h=function(d,p,f){if(f===void 0&&(f=-1),f===-1&&(f=p.rank-1),f!==p.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+p.rank+" and dim was "+f);return op(function(m,g,x){var y=g.logSumExp([f],!0),b=g.toFloat().sub(y);return x([m,b]),{value:b.mul(m).neg().sum([f]),gradFunc:function(v,w){var C=w[0],I=w[1],k=qn(v.shape,[f]);return[v.reshape(k).mul(C.toFloat().sub(I.exp())),v.reshape(k).mul(I.exp().sub(C.toFloat()))]}}})(d,p)}(o,a);return Ls(h,i,s)}}),Qee=Object.freeze({get Reduction(){return In},absoluteDifference:Uee,computeWeightedLoss:Ls,cosineDistance:Gee,hingeLoss:Hee,huberLoss:jee,logLoss:qee,meanSquaredError:Kee,sigmoidCrossEntropy:Xee,softmaxCrossEntropy:Yee});function gb(n,e){return e===void 0&&(e=!1),G.tidy(function(){if(n.shape.length!==2)throw new Error("qr2d() requires a 2D Tensor, but got a "+n.shape.length+"D Tensor.");for(var t=n.shape[0],r=n.shape[1],s=lT(t),o=n.clone(),a=zo([[1]],[1,1]),i=a.clone(),u=t>=r?r:t,c=function(h){var d,p=o,f=i,m=s;d=G.tidy(function(){var g=o.slice([h,h],[t-h,1]),x=g.norm(),y=o.slice([h,h],[1,1]),b=zo([[-1]]).where(y.greater(0),zo([[1]])),v=y.sub(b.mul(x)),w=g.div(v);i=w.shape[0]===1?a.clone():a.concat(w.slice([1,0],[w.shape[0]-1,w.shape[1]]),0);var C=b.matMul(v).div(x).neg(),I=o.slice([h,0],[t-h,r]),k=C.mul(i),S=i.transpose();if(h===0)o=I.sub(k.matMul(S.matMul(I)));else{var N=I.sub(k.matMul(S.matMul(I)));o=o.slice([0,0],[h,r]).concat(N,0)}var E=k.transpose(),R=s.slice([0,h],[t,s.shape[1]-h]);if(h===0)s=R.sub(R.matMul(i).matMul(E));else{var _=R.sub(R.matMul(i).matMul(E));s=s.slice([0,0],[t,h]).concat(_,1)}return[i,o,s]}),i=d[0],o=d[1],s=d[2],Un([p,f,m])},l=0;l<u;++l)c(l);return!e&&t>r&&(s=s.slice([0,0],[t,r]),o=o.slice([0,0],[r,r])),[s,o]})}var Zee=V({bandPart_:function(n,e,t){if(e%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+e+".");if(t%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+t+".");var r=A(n,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var s=r.shape,o=r.shape.slice(-2),a=o[0],i=o[1];if(!(e<=a))throw new Error("bandPart(): numLower ("+e+") must not be greater than the number of rows ("+a+").");if(!(t<=i))throw new Error("bandPart(): numUpper ("+t+") must not be greater than the number of columns ("+i+").");e<0&&(e=a),t<0&&(t=i);var u=Su(0,a,1,"int32").reshape([-1,1]),c=Su(0,i,1,"int32"),l=Is(u,c),h=Yc(l.lessEqual(ve(+e,"int32")),l.greaterEqual(ve(-t,"int32"))),d=Ct([a,i],r.dtype);return Rs(Kc(r.reshape([-1,a,i])).map(function(p){return ao(h,p,d)})).reshape(s)}}),Jee=V({gramSchmidt_:function(n){var e;if(Array.isArray(n)){e=!1,D(n!=null&&n.length>0,function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"});for(var t=n[0].shape[0],r=function(u){D(n[u].shape[0]===t,function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+n[u].shape[0]+" vs. "+t+")"})},s=1;s<n.length;++s)r(s)}else e=!0,n=ep(n,n.shape[0],0).map(function(u){return yy(u,[0])});D(n.length<=n[0].shape[0],function(){return"Gram-Schmidt: Number of vectors ("+n.length+") exceeds number of dimensions ("+n[0].shape[0]+")."});var o=[],a=n,i=function(u){o.push(G.tidy(function(){var c=a[u];if(u>0)for(var l=0;l<u;++l){var h=ys(o[l].mulStrict(c)).mul(o[l]);c=c.sub(h)}return c.div(HT(c,"euclidean"))}))};for(s=0;s<n.length;++s)i(s);return e?Rs(o,0):o}}),ete=V({qr_:function(n,e){if(e===void 0&&(e=!1),n.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+n.rank);if(n.rank===2)return gb(n,e);var t=n.shape.slice(0,n.shape.length-2).reduce(function(a,i){return a*i}),r=Kc(n.reshape([t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];return r.forEach(function(a){var i=gb(a,e),u=i[0],c=i[1];s.push(u),o.push(c)}),[Rs(s,0).reshape(n.shape),Rs(o,0).reshape(n.shape)]}}),tte=Object.freeze({bandPart:Zee,gramSchmidt:Jee,qr:ete});function pp(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);var a=n.shape[0];return t=Math.min(t,a),D(0<=r&&r<=1,function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"}),D(n.rank===2,function(){return"boxes must be a 2D tensor, but was of rank '"+n.rank+"'"}),D(n.shape[1]===4,function(){return"boxes must have 4 columns, but 2nd dimension was "+n.shape[1]}),D(e.rank===1,function(){return"scores must be a 1D tensor"}),D(e.shape[0]===a,function(){return"scores has incompatible shape with boxes. Expected "+a+", but was "+e.shape[0]}),D(0<=o&&o<=1,function(){return"softNmsSigma must be in [0, 1], but was '"+o+"'"}),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}var nte=V({resizeBilinear_:function(n,e,t){t===void 0&&(t=!1);var r=A(n,"images","resizeBilinear");D(r.rank===3||r.rank===4,function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."}),D(e.length===2,function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."});var s=r,o=!1;r.rank===3&&(o=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var a=e[0],i=e[1],u=G.runKernelFunc(function(c,l){return l([s]),c.resizeBilinear(s,a,i,t)},{x:s},function(c,l){return{x:function(){return G.runKernelFunc(function(h){return h.resizeBilinearBackprop(c,l[0],t)},{})}}},"ResizeBilinear",{alignCorners:t,newHeight:a,newWidth:i});return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),rte=V({resizeNearestNeighbor_:function(n,e,t){t===void 0&&(t=!1);var r=A(n,"images","resizeNearestNeighbor");D(r.rank===3||r.rank===4,function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."}),D(e.length===2,function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."}),D(r.dtype==="float32"||r.dtype==="int32",function(){return"`images` must have `int32` or `float32` as dtype"});var s=r,o=!1;r.rank===3&&(o=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var a=e[0],i=e[1],u=G.runKernelFunc(function(c,l){return l([s]),c.resizeNearestNeighbor(s,a,i,t)},{batchImages:s},function(c,l){return{batchImages:function(){return G.runKernelFunc(function(h){return h.resizeNearestNeighborBackprop(c,l[0],t)},{})}}});return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),ste=V({nonMaxSuppression_:function(n,e,t,r,s){r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY);var o=A(n,"boxes","nonMaxSuppression"),a=A(e,"scores","nonMaxSuppression"),i=pp(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;var u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return G.runKernelFunc(function(c){return c.nonMaxSuppression(o,a,t,r,s)},{boxes:o,scores:a},null,"NonMaxSuppressionV3",u)}}),ote=function(n,e,t,r,s){return r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),ke(this,void 0,void 0,function(){var o,a,i,u,c,l,h;return Se(this,function(d){switch(d.label){case 0:return o=A(n,"boxes","nonMaxSuppressionAsync"),a=A(e,"scores","nonMaxSuppressionAsync"),i=pp(o,a,t,r,s),t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold,[4,Promise.all([o.data(),a.data()])];case 1:return u=d.sent(),c=u[0],l=u[1],h=ky(c,l,t,r,s),o!==n&&o.dispose(),a!==e&&a.dispose(),[2,h]}})})},ate=V({nonMaxSuppressionWithScore_:function(n,e,t,r,s,o){r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),o===void 0&&(o=0);var a=A(n,"boxes","nonMaxSuppression"),i=A(e,"scores","nonMaxSuppression"),u=pp(a,i,t,r,s,o),c={maxOutputSize:t=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},l=G.runKernel("NonMaxSuppressionV5",{boxes:a,scores:i},c);return{selectedIndices:l[0],selectedScores:l[1]}}}),ite=function(n,e,t,r,s,o){return r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),o===void 0&&(o=0),ke(this,void 0,void 0,function(){var a,i,u,c,l,h,d;return Se(this,function(p){switch(p.label){case 0:return a=A(n,"boxes","nonMaxSuppressionAsync"),i=A(e,"scores","nonMaxSuppressionAsync"),u=pp(a,i,t,r,s,o),t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma,[4,Promise.all([a.data(),i.data()])];case 1:return c=p.sent(),l=c[0],h=c[1],d=Sy(l,h,t,r,s,o),a!==n&&a.dispose(),i!==e&&i.dispose(),[2,d]}})})},ute=V({cropAndResize_:function(n,e,t,r,s,o){var a=A(n,"image","cropAndResize"),i=A(e,"boxes","cropAndResize","float32"),u=A(t,"boxInd","cropAndResize","int32");s=s||"bilinear",o=o||0;var c=i.shape[0];return D(a.rank===4,function(){return"Error in cropAndResize: image must be rank 4,but got rank "+a.rank+"."}),D(i.rank===2&&i.shape[1]===4,function(){return"Error in cropAndResize: boxes must be have size ["+c+",4] but had shape "+i.shape+"."}),D(u.rank===1&&u.shape[0]===c,function(){return"Error in cropAndResize: boxInd must be have size ["+c+"] but had shape "+i.shape+"."}),D(r.length===2,function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."}),D(r[0]>=1&&r[1]>=1,function(){return"cropSize must be atleast [1,1], but was "+r}),D(s==="bilinear"||s==="nearest",function(){return"method must be bilinear or nearest, but was "+s}),G.runKernelFunc(function(l,h){return l.cropAndResize(a,i,u,r,s,o)},{images:a,boxes:i,boxInd:u},null,"CropAndResize",{method:s,extrapolationValue:o,cropSize:r})}}),ja=Object.freeze({resizeBilinear:nte,resizeNearestNeighbor:rte,nonMaxSuppression:ste,nonMaxSuppressionAsync:ote,nonMaxSuppressionWithScore:ate,nonMaxSuppressionWithScoreAsync:ite,cropAndResize:ute}),Xy=function(n,e){return!(n>0)||e==="linear"},Yy=function(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return n.mul(e.step());throw new Error("Gradient for activation "+t+" has not been implemented yet.")},Qy=function(n,e){var t=e,r=Xt(n.shape,e.shape);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},Zy=function(n,e,t){if(e==="linear")return n;if(e==="relu")return Gy(n);if(e==="elu")return Wy(n);if(e==="relu6")return WT(n);if(e==="prelu")return Uy(n,t);throw new Error("Unknown fused activation "+e+".")},cte=V({fusedMatMul_:function(n){var e,t=n.a,r=n.b,s=n.transposeA,o=s!==void 0&&s,a=n.transposeB,i=a!==void 0&&a,u=n.bias,c=n.activation,l=c===void 0?"linear":c,h=n.preluActivationWeights;if(Xy(G.state.gradientDepth,l)===!1){var d=zy(t,r,o,i);return u!=null&&(d=$s(d,u)),Zy(d,l,h)}var p=A(t,"a","fused matMul"),f=A(r,"b","fused matMul");e=kt(p,f),p=e[0],f=e[1];var m=o?p.shape[p.rank-2]:p.shape[p.rank-1],g=i?f.shape[f.rank-1]:f.shape[f.rank-2],x=o?p.shape[p.rank-1]:p.shape[p.rank-2],y=i?f.shape[f.rank-2]:f.shape[f.rank-1],b=p.shape.slice(0,-2),v=f.shape.slice(0,-2),w=be(b),C=be(v);D(p.rank>=2&&f.rank>=2&&p.rank===f.rank,function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+f.rank+"."}),D(Qt(b,v),function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+v+") of Tensors with shapes "+p.shape+" and "+f.shape+" must match."}),D(m===g,function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+p.shape+" and "+f.shape+" and transposeA="+o+" and transposeB="+i+" must match."});var I,k,S=p.shape.slice(0,-2).concat([x,y]),N=o?p.as3D(w,m,x):p.as3D(w,x,m),E=i?f.as3D(C,y,g):f.as3D(C,g,y);u!=null&&qe(S,(I=kt(I=A(u,"bias","fused matMul"),p)[0]).shape),h!=null&&(k=A(h,"prelu weights","fused matMul"));var R={a:N,b:E};u!=null&&(R.bias=I),h!=null&&(R.preluActivationWeights=k);var _=[N,E];return G.runKernelFunc(function(O,F){var L=O.fusedBatchMatMul({a:N,b:E,transposeA:o,transposeB:i,bias:I,activation:l,preluActivationWeights:k});return F([N,E,L]),L},R,function(O,F){var L=F[0],B=F[1],M=F[2],z=Yy(O,M,l),H={};return u!=null&&(H={bias:function(){return Qy(I,z)}}),Object.assign(o||i?!o&&i?{a:function(){return z.matMul(B,!1,!1)},b:function(){return z.matMul(L,!0,!1)}}:o&&!i?{a:function(){return B.matMul(z,!1,!0)},b:function(){return L.matMul(z,!1,!1)}}:{a:function(){return B.matMul(z,!0,!0)},b:function(){return z.matMul(L,!0,!0)}}:{a:function(){return z.matMul(B,!1,!0)},b:function(){return L.matMul(z,!0,!1)}},H)},"_FusedMatMul",{transposeA:o,transposeB:i,activation:l},_,[!0]).reshape(S)}}),lte=V({fusedConv2d_:function(n){var e=n.x,t=n.filter,r=n.strides,s=n.pad,o=n.dataFormat,a=o===void 0?"NHWC":o,i=n.dilations,u=i===void 0?[1,1]:i,c=n.dimRoundingMode,l=n.bias,h=n.activation,d=h===void 0?"linear":h,p=n.preluActivationWeights;if(d=d||"linear",Xy(G.state.gradientDepth,d)===!1){var f=Di(e,t,r,s,a,u,c);return l!=null&&(f=$s(f,l)),Zy(f,d,p)}var m=A(e,"x","conv2d"),g=A(t,"filter","conv2d"),x=m,y=!1;m.rank===3&&(y=!0,x=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),D(x.rank===4,function(){return"Error in fused conv2d: input must be rank 4, but got rank "+x.rank+"."}),D(g.rank===4,function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."}),c!=null&&D(Rt(s),function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+c+" but got pad "+s+"."}),D(x.shape[3]===g.shape[2],function(){return"Error in conv2d: depth of input ("+x.shape[3]+") must match input depth for filter "+g.shape[2]+"."}),D(_n(r,u),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"}),D(a==="NHWC",function(){return"Error in conv2d: got dataFormat of "+a+" but only NHWC is currently supported."});var b,v,w=ba(x.shape,g.shape,r,u,s,c);l!=null&&(b=kt(b=A(l,"bias","fused conv2d"),m)[0],qe(w.outShape,b.shape)),p!=null&&(v=A(p,"prelu weights","fused conv2d"));var C={x,filter:g};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=v);var I=[g,x],k=G.runKernelFunc(function(S,N){var E=S.fusedConv2d({input:x,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:v});return N([g,x,E]),E},C,function(S,N){var E=N,R=E[0],_=E[1],O=E[2],F=Yy(S,O,d);D(li(u),function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"});var L={};return l!=null&&(L={bias:function(){return Qy(b,F)}}),Object.assign({x:function(){return CT(_.shape,F,R,r,s)},filter:function(){return By(_,F,R.shape,r,s)}},L)},"FusedConv2D",{convInfo:w,activation:d},I,[!0]);return y?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}}),hte=V({fusedDepthwiseConv2d_:function(n){var e=n.x,t=n.filter,r=n.strides,s=n.pad,o=n.dataFormat,a=o===void 0?"NHWC":o,i=n.dilations,u=i===void 0?[1,1]:i,c=n.dimRoundingMode,l=n.bias,h=n.activation,d=h===void 0?"linear":h,p=n.preluActivationWeights;if(Xy(G.state.gradientDepth,d)===!1){var f=lp(e,t,r,s,a,u,c);return l!=null&&(f=$s(f,l)),Zy(f,d,p)}var m=A(e,"x","depthwiseConv2d"),g=A(t,"filter","depthwiseConv2d"),x=m,y=!1;m.rank===3&&(y=!0,x=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),D(x.rank===4,function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+x.rank+"."}),D(g.rank===4,function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."}),D(x.shape[3]===g.shape[2],function(){return"Error in fused depthwiseConv2d: number of input channels ("+x.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."}),u==null&&(u=[1,1]),D(_n(r,u),function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"}),c!=null&&D(Rt(s),function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+c+" but got pad "+s+"."});var b,v,w=ba(x.shape,g.shape,r,u,s,c,!0);l!=null&&(b=kt(b=A(l,"bias","fused conv2d"),m)[0],qe(w.outShape,b.shape)),p!=null&&(v=A(p,"prelu weights","fused depthwiseConv2d"));var C={x,filter:g};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=v);var I=[g,x],k=G.runKernelFunc(function(S,N){var E=S.fusedDepthwiseConv2D({input:x,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:v});return N([g,x,E]),E},C,function(S,N){D(li(u),function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"});var E=N[0],R=N[1],_=N[2],O=Yy(S,_,d),F={};return l!=null&&(F={bias:function(){return Qy(b,O)}}),Object.assign({x:function(){return IT(R.shape,O,E,w)},filter:function(){return kT(R,O,E.shape,w)}},F)},"FusedDepthwiseConv2D",{convInfo:w,activation:d},I,[!0]);return y?k.as3D(k.shape[1],k.shape[2],k.shape[3]):k}}),xh=Object.freeze({matMul:cte,conv2d:lte,depthwiseConv2d:hte}),dte=Object.freeze({image:ja,linalg:tte,losses:Qee,spectral:Pee,fused:xh,signal:Vee,add:$s,addN:nT,batchNorm:Ai,batchNormalization:XJ,batchNorm2d:QJ,batchNormalization2d:YJ,batchNorm3d:JJ,batchNormalization3d:ZJ,batchNorm4d:tee,batchNormalization4d:eee,broadcastTo:uT,clone:nee,div:As,divNoNan:Dy,eye:lT,multinomial:hT,oneHot:Tu,pad:bo,pad1d:see,pad2d:oee,pad3d:aee,pad4d:iee,rand:uee,randomGamma:hee,randomNormal:dee,randomUniform:Oy,square:_y,squaredDifference:My,tile:Vo,truncatedNormal:dT,conv1d:bT,conv2d:Di,conv3d:wT,depthwiseConv2d:lp,separableConv2d:bee,conv2dTranspose:ST,conv3dTranspose:wee,op:V,booleanMaskAsync:vee,complex:tn,real:Jn,imag:Ar,concat:wr,concat1d:xQ,concat2d:yQ,concat3d:vQ,concat4d:bQ,split:ep,matMul:zy,dot:Cee,outerProduct:Iee,reverse:Fi,reverse1d:kee,reverse2d:See,reverse3d:Nee,reverse4d:Tee,maxPool:ET,avgPool:RT,pool:Eee,maxPool3d:$T,avgPool3d:AT,maxPoolWithArgmax:DT,slice:cs,slice1d:Ree,slice2d:$ee,slice3d:Aee,slice4d:Dee,abs:nN,acos:rN,acosh:sN,asin:oN,asinh:aN,atan:iN,atanh:uN,ceil:cN,clipByValue:lN,cos:hN,cosh:dN,erf:pN,exp:fN,expm1:mN,floor:gN,log:xN,log1p:yN,logSigmoid:IQ,neg:rp,reciprocal:vN,round:bN,rsqrt:vy,sigmoid:wN,sign:CN,isNaN:kQ,isInf:SQ,isFinite:NQ,sin:IN,sinh:kN,softplus:SN,sqrt:NN,step:TQ,tan:TN,tanh:EN,all:OT,any:_T,argMax:MT,argMin:LT,logSumExp:Fee,max:PT,mean:BT,min:zT,moments:Oee,sum:ys,prod:Vy,equal:Ly,equalStrict:pee,greater:pT,greaterEqual:Py,greaterEqualStrict:fee,greaterStrict:mee,less:fT,lessEqual:mT,lessEqualStrict:gee,lessStrict:xee,notEqual:gT,notEqualStrict:yee,addStrict:EQ,atan2:RN,divStrict:RQ,floorDiv:by,maximum:sp,maximumStrict:$Q,minimum:wy,minimumStrict:AQ,mod:$N,modStrict:DQ,mul:Ot,mulStrict:FQ,pow:Nu,powStrict:OQ,squaredDifferenceStrict:_Q,sub:Is,subStrict:MQ,elu:Wy,leakyRelu:VT,prelu:Uy,relu:Gy,relu6:WT,selu:UT,logicalAnd:Yc,logicalNot:cT,logicalOr:$y,logicalXor:ree,where:ao,whereAsync:Ay,buffer:Pe,print:wQ,batchToSpaceND:gy,cast:HS,cumsum:CQ,depthToSpace:jS,expandDims:xs,reshape:Yr,spaceToBatchND:xy,squeeze:yy,stack:Rs,unstack:Kc,setdiff1dAsync:qS,fill:Jd,linspace:GS,ones:va,range:Su,scalar:ve,tensor:nn,tensor1d:Es,tensor2d:zo,tensor3d:US,tensor4d:No,tensor5d:fQ,tensor6d:mQ,variable:gQ,zeros:Ct,onesLike:my,zerosLike:Ze,transpose:hr,softmax:ap,logSoftmax:_N,localResponseNormalization:GT,norm:HT,gather:cp,unsortedSegmentSum:xT,basicLSTMCell:_ee,multiRNNCell:Mee,movingAverage:Lee,stridedSlice:jT,topk:qT,scatterND:KT,fft:hp,ifft:Eu,rfft:dp,irfft:Hy,sparseToDense:jy,gatherND:XT,diag:Bee,dropout:zee,hannWindow:qy,hammingWindow:QT,frame:Ky,stft:ZT,inTopKAsync:Wee});function ie(n,e){Array.isArray(n)||(n=[n]),n.forEach(function(t){t!=null&&D(t.dtype!=="complex64",function(){return e+" does not support complex64 tensors."})})}function em(n,e,t,r,s,o){for(var a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Pe(s.outShape,t),g=m.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],b=s.outShape[3],v=0;v<s.batchSize;++v)for(var w=v*x,C=v*r[0],I=0;I<s.inChannels;++I)for(var k=0;k<s.outHeight;++k)for(var S=k*a-d,N=Math.max(0,S),E=Math.min(s.inHeight,l+S),R=w+k*y,_=0;_<s.outWidth;++_){for(var O=_*i-p,F=Math.max(0,O),L=Math.min(s.inWidth,h+O),B=f,M=0,z=0,H=N;H<E;H+=u){for(var X=C+H*r[1],Z=F;Z<L;Z+=c){var ee=n[X+Z*r[2]+I];o==="max"&&ee>B?B=ee:o==="avg"&&(M+=ee,z++)}if(isNaN(B))break}g[R+_*b+I]=o==="avg"?M/z:B}return m}function JT(n,e,t,r,s,o){s===void 0&&(s=!1),o===void 0&&(o=!1);for(var a=Pe(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Pe(e,t,n),g=0;g<r.batchSize;++g)for(var x=0;x<r.inChannels;++x)for(var y=0;y<r.outHeight;++y){for(var b=y*i-p,v=b;v<0;)v+=c;for(var w=Math.min(r.inHeight,h+b),C=0;C<r.outWidth;++C){for(var I=C*u-f,k=I;k<0;)k+=l;for(var S=Math.min(r.inWidth,d+I),N=Number.NEGATIVE_INFINITY,E=-1,R=v;R<w;R+=c)for(var _=R-b,O=k;O<S;O+=l){var F=O-I,L=m.get(g,R,O,x);L>N&&(N=L,E=s?o?((g*r.inHeight+R)*r.inWidth+O)*r.inChannels+x:(R*r.inWidth+O)*r.inChannels+x:_*d+F)}a.set(E,g,y,C,x)}}return a}function Xp(n,e,t,r){if(t==="linear")return n.linear(e);if(t==="relu")return n.relu(e);if(t==="elu")return n.elu(e);if(t==="relu6")return n.relu6(e);if(t==="prelu")return n.prelu(e,r);throw new Error("Activation "+t+" has not been implemented for the CPU backend.")}var pte=function(n){function e(){var t=n.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new MN(t,G),t}return Wr(e,n),e.prototype.write=function(t,r,s){this.firstUse&&(this.firstUse=!1,se().get("IS_NODE")&&uh(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));var o={};return this.data.set(o,{values:t,dtype:s}),o},e.prototype.move=function(t,r,s,o){this.data.set(t,{values:r,dtype:o})},e.prototype.numDataIds=function(){return this.data.numDataIds()},e.prototype.read=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){return[2,this.readSync(t)]})})},e.prototype.readSync=function(t){var r=this.data.get(t),s=r.dtype,o=r.complexTensors;return s==="complex64"?Jf(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.data.get(t).values},e.prototype.bufferSync=function(t){var r=this.readSync(t.dataId),s=r;if(t.dtype==="string")try{s=r.map(function(o){return Cu(o)})}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Pe(t.shape,t.dtype,s)},e.prototype.makeOutput=function(t,r,s){var o=this.write(t,r,s);return G.makeTensorFromDataId(o,r,s,this)},e.prototype.disposeData=function(t){if(this.data.has(t)){var r=this.data.get(t).complexTensors;r!=null&&(r.real.dispose(),r.imag.dispose()),this.data.delete(t)}},e.prototype.time=function(t){return ke(this,void 0,void 0,function(){var r;return Se(this,function(s){return r=$r(),t(),[2,{kernelMs:$r()-r}]})})},e.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},e.prototype.complex=function(t,r){var s=this.makeOutput(null,t.shape,"complex64");return this.data.get(s.dataId).complexTensors={real:G.keep(t.clone()),imag:G.keep(r.clone())},s},e.prototype.real=function(t){return this.data.get(t.dataId).complexTensors.real.clone()},e.prototype.imag=function(t){return this.data.get(t.dataId).complexTensors.imag.clone()},e.prototype.slice=function(t,r,s){if(ie(t,"slice"),FN(t.shape,r,s)){var o=ON(r,t.strides),a=be(s);return nn(this.readSync(t.dataId).subarray(o,o+a),s,t.dtype)}for(var i=Pe(s,t.dtype),u=this.bufferSync(t),c=0;c<i.size;++c){var l=i.indexToLoc(c).map(function(h,d){return h+r[d]});i.values[c]=u.get.apply(u,l)}return i.toTensor()},e.prototype.stridedSlice=function(t,r,s,o){ie(t,"stridedSlice");var a=Cy(r,s,o);if(a.some(function(p){return p===0}))return nn([],a);for(var i=Pe(a,t.dtype),u=this.bufferSync(t),c=0;c<i.size;c++){for(var l=i.indexToLoc(c),h=new Array(l.length),d=0;d<h.length;d++)h[d]=l[d]*o[d]+r[d];i.set.apply(i,[u.get.apply(u,h)].concat(l))}return i.toTensor()},e.prototype.diag=function(t){for(var r=this.readSync(t.dataId),s=Pe([t.size,t.size],t.dtype),o=s.values,a=0;a<r.length;a++)o[a*t.size+a]=r[a];return s.toTensor()},e.prototype.unstack=function(t,r){for(var s=t.shape[r],o=new Array(t.rank-1),a=0,i=0;i<t.rank;i++)i!==r&&(o[a++]=t.shape[i]);var u=new Array(t.rank).fill(0),c=t.shape.slice();c[r]=1;var l=new Array(s);for(i=0;i<l.length;i++)u[r]=i,l[i]=this.slice(t,u,c).reshape(o);return l},e.prototype.reverse=function(t,r){ie(t,"reverse");for(var s=Pe(t.shape,t.dtype),o=this.bufferSync(t),a=function(u){var c=s.indexToLoc(u),l=c.slice();r.forEach(function(h){return l[h]=t.shape[h]-1-l[h]}),s.set.apply(s,[o.get.apply(o,l)].concat(c))},i=0;i<s.size;i++)a(i);return s.toTensor()},e.prototype.concat=function(t,r){var s=this;if(t[0].dtype==="complex64"){var o=t.map(function(p){return Jn(p)}),a=t.map(function(p){return Ar(p)});return tn(this.concat(o,r),this.concat(a,r))}var i=t.map(function(p){var f=be(p.shape.slice(r));return p.as2D(-1,f)}),u=ci(i.map(function(p){return p.shape}),1),c=Pe(u,t[0].dtype).values;if(i[0].shape[0]===1){var l=0;i.forEach(function(p){c.set(s.readSync(p.dataId),l),l+=p.size})}else{var h=0;i.forEach(function(p){for(var f=s.readSync(p.dataId),m=0,g=0;g<p.shape[0];++g)for(var x=g*u[1]+h,y=0;y<p.shape[1];++y)c[x+y]=f[m++];h+=p.shape[1]})}var d=ci(t.map(function(p){return p.shape}),r);return nn(c,d,t[0].dtype)},e.prototype.neg=function(t){return ie(t,"neg"),this.multiply(ve(-1),t)},e.prototype.add=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s+a,imag:o+i}}):this.broadcastedBinaryOp(t,r,ln(t.dtype,r.dtype),function(s,o){return s+o})},e.prototype.addN=function(t){var r=this;ie(t,"addN");for(var s=t.map(function(l){return r.readSync(l.dataId)}),o=Pe(t[0].shape,t[0].dtype),a=o.values,i=0;i<t.length;i++)for(var u=s[i],c=0;c<a.length;c++)a[c]+=u[c];return o.toTensor()},e.prototype.softmax=function(t,r){var s=Gt([r],t.shape),o=this.max(t,s),a=qn(o.shape,s),i=this.subtract(t,o.reshape(a)),u=this.exp(i),c=this.sum(u,s).reshape(a);return As(u,c)},e.prototype.subtract=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s-a,imag:o-i}}):this.broadcastedBinaryOp(t,r,ln(t.dtype,r.dtype),function(s,o){return s-o})},e.prototype.pow=function(t,r){return ie([t,r],"pow"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.pow(s,o)})},e.prototype.batchMatMul=function(t,r,s,o){ie([t,r],"matMul");for(var a=s?t.shape[1]:t.shape[2],i=s?t.shape[2]:t.shape[1],u=o?r.shape[1]:r.shape[2],c=t.shape[0],l=this.readSync(t.dataId),h=this.readSync(r.dataId),d=s?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],p=d[0],f=d[1],m=d[2],g=o?[1,r.strides[1],r.strides[0]]:[r.strides[1],1,r.strides[0]],x=g[0],y=g[1],b=g[2],v=i*u,w=Pe([c,i,u],t.dtype),C=w.values,I=this.blockSize,k=0;k<c;k++)for(var S=0;S<i;S+=I)for(var N=0;N<u;N+=I)for(var E=0;E<a;E+=I)for(var R=Math.min(S+I,i),_=Math.min(N+I,u),O=Math.min(E+I,a),F=S;F<R;F++)for(var L=N;L<_;L++){for(var B=0,M=E;M<O;M++)B+=l[k*p+F*f+M*m]*h[M*x+L*y+k*b];C[k*v+(F*u+L)]+=B}return w.toTensor()},e.prototype.fusedBatchMatMul=function(t){var r=t.a,s=t.b,o=t.transposeA,a=t.transposeB,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=this.batchMatMul(r,s,o,a);return i&&(l=this.add(l,i)),u&&(l=Xp(this,l,u,c)),l},e.prototype.multiply=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s*a-o*i,imag:s*i+o*a}}):this.broadcastedBinaryOp(t,r,ln(t.dtype,r.dtype),function(s,o){return s*o})},e.prototype.floorDiv=function(t,r){return ie([t,r],"floorDiv"),this.broadcastedBinaryOp(t,r,"int32",function(s,o){return Math.floor(s/o)})},e.prototype.sum=function(t,r){ie(t,"sum"),Yn("sum",r,t.rank);for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,ln(t.dtype,"int32")),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=0,f=0;f<u;++f)p+=l[d+f];c[h]=p}return i},e.prototype.prod=function(t,r){ie(t,"sum");for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,ln(t.dtype,"int32")),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=1,f=0;f<u;++f)p*=l[d+f];c[h]=p}return i},e.prototype.unsortedSegmentSum=function(t,r,s){ie(t,"unsortedSegmentSum");for(var o=[],a=t.rank-r.rank,i=0;i<a;++i)r=r.expandDims(i+1);for(i=0;i<s;++i){var u=ve(i,"int32"),c=Ly(u,r).asType("float32").mul(t).sum(0);o.push(c)}return Rs(o)},e.prototype.argMin=function(t,r){ie(t,"argMin");var s=[r];Yn("argMin",s,t.rank);for(var o=vn(t.shape,s),a=o[0],i=o[1],u=Ct(a,"int32"),c=be(i),l=this.readSync(u.dataId),h=this.readSync(t.dataId),d=0;d<l.length;++d){for(var p=d*c,f=h[p],m=0,g=0;g<c;++g){var x=h[p+g];x<f&&(f=x,m=g)}l[d]=m}return u},e.prototype.argMax=function(t,r){ie(t,"argMax");var s=[r];Yn("argMax",s,t.rank);for(var o=vn(t.shape,s),a=o[0],i=o[1],u=Ct(a,"int32"),c=be(i),l=this.readSync(u.dataId),h=this.readSync(t.dataId),d=0;d<l.length;++d){for(var p=d*c,f=h[p],m=0,g=0;g<c;++g){var x=h[p+g];x>f&&(f=x,m=g)}l[d]=m}return u},e.prototype.cumsum=function(t,r,s,o){if(ie(t,"cumsum"),r!==t.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(t.rank-1)+" but got axis="+r);for(var a=ln(t.dtype,"int32"),i=Ct(t.shape,a),u=this.readSync(i.dataId),c=this.readSync(t.dataId),l=t.shape[t.rank-1],h=o?function(g,x){return g+l-x-1}:function(g,x){return g+x},d=0;d<c.length;d+=l)for(var p=0;p<l;p++){var f=h(d,p);if(p===0)u[f]=s?0:c[f];else{var m=h(d,p-1);u[f]=s?c[m]+u[m]:c[f]+u[m]}}return i},e.prototype.equal=function(t,r){return ie([t,r],"equal"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s===o?1:0})},e.prototype.notEqual=function(t,r){return ie([t,r],"notEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s!==o?1:0})},e.prototype.less=function(t,r){return ie([t,r],"less"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s<o?1:0})},e.prototype.lessEqual=function(t,r){return ie([t,r],"lessEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s<=o?1:0})},e.prototype.greater=function(t,r){return ie([t,r],"greater"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s>o?1:0})},e.prototype.greaterEqual=function(t,r){return ie([t,r],"greaterEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s>=o?1:0})},e.prototype.logicalNot=function(t){ie(t,"logicalNot");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)s[o]=r[o]?0:1;return this.makeOutput(s,t.shape,"bool")},e.prototype.logicalAnd=function(t,r){return ie([t,r],"logicalAnd"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s&&o})},e.prototype.logicalOr=function(t,r){return ie([t,r],"logicalOr"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s||o})},e.prototype.select=function(t,r,s){ie([t,r,s],"select");for(var o=this.readSync(t.dataId),a=this.readSync(r.dataId),i=this.readSync(s.dataId),u=Ct(r.shape,ln(r.dtype,s.dtype)),c=this.readSync(u.dataId),l=0,h=t.rank===0||t.rank>1||r.rank===1?1:be(r.shape.slice(1)),d=0;d<o.length;d++)for(var p=0;p<h;p++)o[d]===1?c[l++]=a[d]:c[l++]=i[d];return u},e.prototype.where=function(t){ie([t],"where");var r=this.readSync(t.dataId);return Ny(t.shape,r)},e.prototype.topk=function(t,r,s){return ie(t,"topk"),GN(this.readSync(t.dataId),t.shape,t.dtype,r)},e.prototype.min=function(t,r){ie(t,"min"),Yn("min",r,t.rank);for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,t.dtype),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];m<p&&(p=m)}c[h]=p}return i},e.prototype.minimum=function(t,r){return ie([t,r],"minimum"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.min(s,o)})},e.prototype.mod=function(t,r){return ie([t,r],"mod"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){var a=s%o;return s<0&&o<0||s>=0&&o>=0?a:(a+o)%o})},e.prototype.max=function(t,r){ie(t,"max"),Yn("max",r,t.rank);for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,t.dtype),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];m>p&&(p=m)}c[h]=p}return i},e.prototype.maximum=function(t,r){return ie([t,r],"maximum"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.max(s,o)})},e.prototype.all=function(t,r){ie(t,"all"),Yn("all",r,t.rank);for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,t.dtype),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];p=p&&m}c[h]=p}return i},e.prototype.any=function(t,r){ie(t,"any"),Yn("any",r,t.rank);for(var s=vn(t.shape,r),o=s[0],a=s[1],i=Ct(o,t.dtype),u=be(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];p=p||m}c[h]=p}return i},e.prototype.squaredDifference=function(t,r){return ie([t,r],"squaredDifference"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){var a=s-o;return a*a})},e.prototype.ceil=function(t){ie(t,"ceil");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.ceil(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.floor=function(t){ie(t,"floor");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.floor(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.sign=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)r[o]<0?s[o]=-1:r[o]>0?s[o]=1:s[o]=0;return this.makeOutput(s,t.shape,"float32")},e.prototype.isNaN=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Number.isNaN(r[o])&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.isInf=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Math.abs(r[o])===1/0&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.isFinite=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Number.isFinite(r[o])&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.round=function(t){ie(t,"round");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=Math.floor(r[o]);r[o]-a<.5?s[o]=Math.floor(r[o]):r[o]-a>.5?s[o]=Math.ceil(r[o]):s[o]=a%2==0?a:a+1}return this.makeOutput(s,t.shape,"float32")},e.prototype.exp=function(t){ie(t,"exp");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.exp(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.expm1=function(t){ie(t,"expm1");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.expm1(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.log=function(t){ie(t,"log");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.log(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.log1p=function(t){ie(t,"log1p");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.log1p(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.sqrt=function(t){ie(t,"sqrt");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.sqrt(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.rsqrt=function(t){ie(t,"rsqrt");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=1/Math.sqrt(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.reciprocal=function(t){ie(t,"reciprocal");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=1/r[o];return this.makeOutput(s,t.shape,"float32")},e.prototype.linear=function(t){return t},e.prototype.relu=function(t){ie(t,"relu");for(var r=Ct(t.shape,t.dtype),s=this.readSync(r.dataId),o=this.readSync(t.dataId),a=0;a<o.length;++a)s[a]=Math.max(0,o[a]);return r},e.prototype.relu6=function(t){ie(t,"relu");for(var r=Ct(t.shape,t.dtype),s=this.readSync(r.dataId),o=this.readSync(t.dataId),a=0;a<o.length;++a)s[a]=Math.min(Math.max(0,o[a]),6);return r},e.prototype.prelu=function(t,r){return ie([t,r],"prelu"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return s<0?o*s:s})},e.prototype.elu=function(t){ie(t,"elu");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o){var a=s[o];r[o]=a>=0?a:Math.exp(a)-1}return this.makeOutput(r,t.shape,"float32")},e.prototype.eluDer=function(t,r){ie([t,r],"eluDer");for(var s=new Float32Array(r.size),o=this.readSync(r.dataId),a=this.readSync(t.dataId),i=0;i<o.length;++i){var u=o[i];s[i]=u>=1?a[i]:a[i]*(u+1)}return this.makeOutput(s,r.shape,"float32")},e.prototype.selu=function(t){ie(t,"selu");for(var r=Ey,s=Ry,o=new Float32Array(t.size),a=this.readSync(t.dataId),i=0;i<a.length;++i){var u=a[i];o[i]=u>=0?s*u:r*(Math.exp(u)-1)}return this.makeOutput(o,t.shape,"float32")},e.prototype.clip=function(t,r,s){ie(t,"clip");for(var o=new Float32Array(t.size),a=this.readSync(t.dataId),i=0;i<a.length;++i){var u=a[i];o[i]=u>s?s:u<r?r:u}return this.makeOutput(o,t.shape,"float32")},e.prototype.abs=function(t){for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.abs(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.complexAbs=function(t){for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<t.size;++o){var a=s[2*o],i=s[2*o+1];r[o]=Math.hypot(a,i)}return this.makeOutput(r,t.shape,"float32")},e.prototype.int=function(t){ie(t,"int");for(var r=new Int32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=s[o];return this.makeOutput(r,t.shape,"int32")},e.prototype.sigmoid=function(t){ie(t,"sigmoid");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=1/(1+Math.exp(-s[o]));return this.makeOutput(r,t.shape,"float32")},e.prototype.softplus=function(t){ie(t,"softplus");for(var r=Math.log(11920928955078125e-23)+2,s=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a]>-r,u=o[a]<r,c=Math.exp(o[a]),l=void 0;l=u?c:i?o[a]:Math.log(1+c),s[a]=l}return this.makeOutput(s,t.shape,"float32")},e.prototype.sin=function(t){ie(t,"sin");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.sin(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.cos=function(t){ie(t,"cos");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.cos(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.tan=function(t){ie(t,"tan");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.tan(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.asin=function(t){ie(t,"asin");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.asin(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.acos=function(t){ie(t,"acos");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.acos(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atan=function(t){ie(t,"atan");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.atan(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atan2=function(t,r){return ie([t,r],"atan2"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.atan2(s,o)})},e.prototype.sinh=function(t){ie(t,"sinh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.sinh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.cosh=function(t){ie(t,"cosh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.cosh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.tanh=function(t){ie(t,"tanh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=ES(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.asinh=function(t){ie(t,"asinh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.asinh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.acosh=function(t){ie(t,"acosh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.acosh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atanh=function(t){ie(t,"atanh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.atanh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.erf=function(t){ie(t,"erf");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o){var a=Math.sign(s[o]),i=Math.abs(s[o]),u=1/(1+.3275911*i);r[o]=a*(1-((((1.061405429*u-1.453152027)*u+1.421413741)*u-.284496736)*u+.254829592)*u*Math.exp(-i*i))}return this.makeOutput(r,t.shape,"float32")},e.prototype.step=function(t,r){r===void 0&&(r=0),ie(t,"step");for(var s=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a];isNaN(i)?s[a]=NaN:s[a]=i>0?1:r}return this.makeOutput(s,t.shape,"float32")},e.prototype.fusedConv2d=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights,c=this.conv2d(r,s,o);return a&&(c=this.add(c,a)),i&&(c=Xp(this,c,i,u)),c},e.prototype.conv2d=function(t,r,s){ie([t,r],"conv2d");for(var o=s.filterHeight,a=s.filterWidth,i=s.dilationHeight,u=s.dilationWidth,c=s.padInfo.left,l=s.padInfo.top,h=s.dataFormat==="channelsLast",d=Pe(s.outShape,t.dtype),p=t.strides[0],f=h?t.strides[1]:t.strides[2],m=h?t.strides[2]:1,g=h?1:t.strides[1],x=d.strides[0],y=h?d.strides[1]:d.strides[2],b=h?d.strides[2]:1,v=h?1:d.strides[1],w=this.readSync(t.dataId),C=this.readSync(r.dataId),I=d.values,k=0;k<s.batchSize;++k)for(var S=k*p,N=k*x,E=0;E<s.outHeight;++E)for(var R=N+E*y,_=E*s.strideHeight-l,O=0;O<o;O++){var F=_+O*i;if(!(F<0||F>=s.inHeight))for(var L=O*r.strides[0],B=S+F*f,M=0;M<s.outWidth;++M)for(var z=R+M*b,H=M*s.strideWidth-c,X=0;X<a;X++){var Z=H+X*u;if(!(Z<0||Z>=s.inWidth))for(var ee=B+Z*m,ae=L+X*r.strides[1],oe=0;oe<s.inChannels;++oe){for(var ue=w[ee+oe*g],he=0;he<s.outChannels;++he)I[z+he*v]+=ue*C[ae+he];ae+=s.outChannels}}}return d.toTensor()},e.prototype.conv3d=function(t,r,s){for(var o=s.filterDepth,a=s.filterHeight,i=s.filterWidth,u=s.dilationDepth,c=s.dilationHeight,l=s.dilationWidth,h=s.padInfo.front,d=s.padInfo.left,p=s.padInfo.top,f=Pe(s.outShape,t.dtype),m=this.readSync(t.dataId),g=this.readSync(r.dataId),x=f.values,y=0;y<s.batchSize;++y)for(var b=y*t.strides[0],v=y*f.strides[0],w=0;w<s.outDepth;++w)for(var C=v+w*f.strides[1],I=w*s.strideDepth-h,k=0;k<o;k++){var S=I+k*u;if(!(S<0||S>=s.inDepth))for(var N=k*r.strides[0],E=b+S*t.strides[1],R=0;R<s.outHeight;++R)for(var _=C+R*f.strides[2],O=R*s.strideHeight-p,F=0;F<a;F++){var L=O+F*c;if(!(L<0||L>=s.inHeight))for(var B=N+F*r.strides[1],M=E+L*t.strides[2],z=0;z<s.outWidth;++z)for(var H=_+z*s.outChannels,X=z*s.strideWidth-d,Z=0;Z<i;Z++){var ee=X+Z*l;if(!(ee<0||ee>=s.inWidth))for(var ae=B+Z*r.strides[2],oe=M+ee*s.inChannels,ue=ae,he=0;he<s.inChannels;++he){for(var pe=m[oe+he],de=0;de<s.outChannels;++de)x[H+de]+=pe*g[ue+de];ue+=s.outChannels}}}}return f.toTensor()},e.prototype.conv2dDerInput=function(t,r,s){ie([t,r],"conv2dDerInput");for(var o=Pe(s.inShape,"float32"),a=o.values,i=this.readSync(t.dataId),u=this.readSync(r.dataId),c=r.strides,l=c[0],h=c[1],d=c[2],p=s.batchSize,f=s.filterHeight,m=s.filterWidth,g=s.inChannels,x=s.inHeight,y=s.inWidth,b=s.outChannels,v=s.outHeight,w=s.outWidth,C=s.strideHeight,I=s.strideWidth,k=s.dataFormat,S=f-1-s.padInfo.top,N=m-1-s.padInfo.left,E=k==="channelsLast",R=o.strides[0],_=E?o.strides[1]:o.strides[2],O=E?o.strides[2]:1,F=E?1:o.strides[1],L=t.strides[0],B=E?t.strides[1]:t.strides[2],M=E?t.strides[2]:1,z=E?1:t.strides[1],H=0;H<p;++H)for(var X=0;X<g;++X)for(var Z=0;Z<x;++Z)for(var ee=Z-S,ae=Math.max(0,Math.ceil(ee/C)),oe=Math.min(v,(f+ee)/C),ue=0;ue<y;++ue){for(var he=ue-N,pe=Math.max(0,Math.ceil(he/I)),de=Math.min(w,(m+he)/I),Ce=0,ge=ae;ge<oe;++ge)for(var Te=ge*C-ee,Ee=pe;Ee<de;++Ee)for(var Le=L*H+B*ge+M*Ee,Fe=l*(f-1-Te)+h*(m-1-(Ee*I-he))+d*X,De=0;De<b;++De)Ce+=i[Le+z*De]*u[Fe+De];a[R*H+_*Z+O*ue+F*X]=Ce}return o.toTensor()},e.prototype.conv3dDerInput=function(t,r,s){for(var o=Pe(s.inShape,"float32"),a=o.values,i=o.strides,u=i[0],c=i[1],l=i[2],h=i[3],d=this.readSync(t.dataId),p=t.strides,f=p[0],m=p[1],g=p[2],x=p[3],y=this.readSync(r.dataId),b=r.strides,v=b[0],w=b[1],C=b[2],I=b[3],k=s.batchSize,S=s.filterDepth,N=s.filterHeight,E=s.filterWidth,R=s.inChannels,_=s.inDepth,O=s.inHeight,F=s.inWidth,L=s.outChannels,B=s.outDepth,M=s.outHeight,z=s.outWidth,H=s.strideDepth,X=s.strideHeight,Z=s.strideWidth,ee=S-1-s.padInfo.front,ae=N-1-s.padInfo.top,oe=E-1-s.padInfo.left,ue=0;ue<k;++ue)for(var he=0;he<R;++he)for(var pe=0;pe<_;++pe)for(var de=pe-ee,Ce=Math.max(0,Math.ceil(de/H)),ge=Math.min(B,(S+de)/H),Te=0;Te<O;++Te)for(var Ee=Te-ae,Le=Math.max(0,Math.ceil(Ee/X)),Fe=Math.min(M,(N+Ee)/X),De=0;De<F;++De){for(var Xe=De-oe,Ke=Math.max(0,Math.ceil(Xe/Z)),wt=Math.min(z,(E+Xe)/Z),gt=0,Jt=Ce;Jt<ge;++Jt)for(var St=Jt*H-de,cn=Le;cn<Fe;++cn)for(var en=cn*X-Ee,Ht=Ke;Ht<wt;++Ht)for(var ir=f*ue+m*Jt+g*cn+x*Ht,Tn=v*(S-1-St)+w*(N-1-en)+C*(E-1-(Ht*Z-Xe))+I*he,jt=0;jt<L;++jt)gt+=d[ir+jt]*y[Tn+jt];a[u*ue+c*pe+l*Te+h*De+he]=gt}return o.toTensor()},e.prototype.conv2dDerFilter=function(t,r,s){ie([t,r],"conv2dDerFilter");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=s.dataFormat==="channelsLast",l=Pe(s.filterShape,"float32"),h=s.padInfo.left,d=s.padInfo.top,p=this.bufferSync(t),f=this.bufferSync(r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((d-m)/o)),x=Math.min(s.outHeight,(s.inHeight+d-m)/o),y=0;y<u;++y)for(var b=Math.max(0,Math.ceil((h-y)/a)),v=Math.min(s.outWidth,(s.inWidth+h-y)/a),w=0;w<s.inChannels;++w)for(var C=0;C<s.outChannels;++C){for(var I=0,k=0;k<s.batchSize;++k)for(var S=g;S<x;++S)for(var N=m+S*o-d,E=b;E<v;++E){var R=y+E*a-h;I+=c?p.get(k,N,R,w)*f.get(k,S,E,C):p.get(k,w,N,R)*f.get(k,C,S,E)}l.set(I,m,y,w,C)}return l.toTensor()},e.prototype.conv3dDerFilter=function(t,r,s){for(var o=s.strideDepth,a=s.strideHeight,i=s.strideWidth,u=s.filterDepth,c=s.filterHeight,l=s.filterWidth,h=Pe(s.filterShape,"float32"),d=h.values,p=h.strides,f=p[0],m=p[1],g=p[2],x=p[3],y=this.readSync(r.dataId),b=r.strides,v=b[0],w=b[1],C=b[2],I=b[3],k=this.readSync(t.dataId),S=t.strides,N=S[0],E=S[1],R=S[2],_=S[3],O=s.padInfo.front,F=s.padInfo.left,L=s.padInfo.top,B=0;B<u;++B)for(var M=Math.max(0,Math.ceil((O-B)/o)),z=Math.min(s.outDepth,(s.inDepth+O-B)/o),H=B*f,X=0;X<c;++X)for(var Z=Math.max(0,Math.ceil((L-X)/a)),ee=Math.min(s.outHeight,(s.inHeight+L-X)/a),ae=X*m+H,oe=0;oe<l;++oe)for(var ue=Math.max(0,Math.ceil((F-oe)/i)),he=Math.min(s.outWidth,(s.inWidth+F-oe)/i),pe=oe*g+ae,de=0;de<s.inChannels;++de)for(var Ce=de*x+pe,ge=0;ge<s.outChannels;++ge){for(var Te=0,Ee=0;Ee<s.batchSize;++Ee)for(var Le=Ee*N,Fe=Ee*v,De=M;De<z;++De)for(var Xe=(B+De*o-O)*E+Le,Ke=De*w+Fe,wt=Z;wt<ee;++wt)for(var gt=(X+wt*a-L)*R+Xe,Jt=wt*C+Ke,St=ue;St<he;++St){var cn=St*I+Jt;Te+=k[(oe+St*i-F)*_+gt+de]*y[cn+ge]}d[Ce+ge]=Te}return h.toTensor()},e.prototype.fusedDepthwiseConv2D=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights,c=this.depthwiseConv2D(r,s,o);return a&&(c=this.add(c,a)),i&&(c=Xp(this,c,i,u)),c},e.prototype.depthwiseConv2D=function(t,r,s){ie([t,r],"depthwiseConv2D");for(var o=s.filterHeight,a=s.filterWidth,i=s.dilationHeight,u=s.dilationWidth,c=s.padInfo.left,l=s.padInfo.top,h=s.outChannels/s.inChannels,d=Pe(s.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(r.dataId),m=d.values,g=0;g<s.batchSize;++g)for(var x=g*t.strides[0],y=g*d.strides[0],b=0;b<s.outHeight;++b)for(var v=y+b*d.strides[1],w=b*s.strideHeight-c,C=0;C<o;++C){var I=w+C*i;if(!(I<0||I>=s.inHeight))for(var k=C*r.strides[0],S=x+I*t.strides[1],N=0;N<s.outWidth;++N)for(var E=v+N*d.strides[2],R=N*s.strideWidth-l,_=0;_<a;++_){var O=R+_*u;if(!(O<0||O>=s.inWidth))for(var F=k+_*r.strides[1],L=S+O*s.inChannels,B=E,M=F,z=0;z<s.inChannels;++z){for(var H=p[L+z],X=0;X<h;++X)m[B+X]+=H*f[M+X];B+=h,M+=h}}}return d.toTensor()},e.prototype.depthwiseConv2DDerInput=function(t,r,s){ie([t,r],"depthwiseConv2DDerInput");for(var o=Pe(s.inShape,"float32"),a=o.values,i=o.strides,u=i[0],c=i[1],l=i[2],h=this.readSync(t.dataId),d=t.strides,p=d[0],f=d[1],m=d[2],g=this.readSync(r.dataId),x=r.strides,y=x[0],b=x[1],v=x[2],w=s.batchSize,C=s.filterHeight,I=s.filterWidth,k=s.inChannels,S=s.inHeight,N=s.inWidth,E=s.outChannels,R=s.outHeight,_=s.outWidth,O=s.strideHeight,F=s.strideWidth,L=C-1-s.padInfo.top,B=I-1-s.padInfo.left,M=E/k,z=0;z<w;++z)for(var H=0;H<k;++H)for(var X=0;X<S;++X)for(var Z=X-L,ee=Math.max(0,Math.ceil(Z/O)),ae=Math.min(R,(C+Z)/O),oe=0;oe<N;++oe){for(var ue=oe-B,he=Math.max(0,Math.ceil(ue/F)),pe=Math.min(_,(I+ue)/F),de=0,Ce=ee;Ce<ae;++Ce)for(var ge=Ce*O-Z,Te=he;Te<pe;++Te)for(var Ee=p*z+f*Ce+m*Te,Le=y*(C-1-ge)+b*(I-1-(Te*F-ue))+v*H,Fe=0;Fe<M;++Fe)de+=h[Ee+(H*M+Fe)]*g[Le+Fe];a[u*z+c*X+l*oe+H]=de}return o.toTensor()},e.prototype.depthwiseConv2DDerFilter=function(t,r,s){ie([t,r],"depthwiseConv2DDerFilter");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=Pe(s.filterShape,"float32"),l=s.padInfo.left,h=s.padInfo.top,d=s.outChannels/s.inChannels,p=this.bufferSync(t),f=this.bufferSync(r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((h-m)/o)),x=Math.min(s.outHeight,(s.inHeight+h-m)/o),y=0;y<u;++y)for(var b=Math.max(0,Math.ceil((l-y)/a)),v=Math.min(s.outWidth,(s.inWidth+l-y)/a),w=0;w<s.outChannels;++w){for(var C=Math.trunc(w/d),I=w%d,k=0,S=0;S<s.batchSize;++S)for(var N=g;N<x;++N)for(var E=m+N*o-h,R=b;R<v;++R){var _=y+R*a-l;k+=p.get(S,E,_,C)*f.get(S,N,R,w)}c.set(k,m,y,C,I)}return c.toTensor()},e.prototype.tile=function(t,r){return ie(t,"tile"),UN(this.bufferSync(t),r)},e.prototype.pad=function(t,r,s){ie(t,"pad");var o=r.map(function(d,p){return d[0]+t.shape[p]+d[1]}),a=r.map(function(d){return d[0]}),i=this.bufferSync(t),u=Pe(o,t.dtype);s!==0&&u.values.fill(s);for(var c=0;c<t.size;c++){var l=i.indexToLoc(c),h=l.map(function(d,p){return d+a[p]});u.set.apply(u,[i.get.apply(i,l)].concat(h))}return u.toTensor()},e.prototype.gather=function(t,r,s){ie([t,r],"gather");var o=t.shape.slice(),a=this.readSync(r.dataId);o[s]=a.length;for(var i=Pe(o,t.dtype),u=this.bufferSync(t),c=0;c<i.size;++c){var l=i.indexToLoc(c),h=l.slice();h[s]=a[l[s]];var d=u.locToIndex(h);i.values[c]=u.values[d]}return i.toTensor()},e.prototype.batchToSpaceND=function(t,r,s){ie([t],"batchToSpaceND");var o=r.reduce(function(h,d){return h*d}),a=lh(t.shape,r,o),i=hh(a.length,r.length),u=dh(t.shape,r,o),c=KS(s,r.length),l=XS(u,s,r.length);return hr(t.reshape(a),i).reshape(u).slice(c,l)},e.prototype.spaceToBatchND=function(t,r,s){ie([t],"spaceToBatchND");var o=r.reduce(function(d,p){return d*p}),a=[[0,0]];a.push.apply(a,s);for(var i=1+r.length;i<t.shape.length;++i)a.push([0,0]);var u=t.pad(a),c=lh(u.shape,r,o,!1),l=hh(c.length,r.length,!1),h=dh(u.shape,r,o,!1);return hr(u.reshape(c),l).reshape(h)},e.prototype.maxPool=function(t,r){return ie(t,"maxPool"),em(this.readSync(t.dataId),t.shape,t.dtype,t.strides,r,"max").toTensor()},e.prototype.maxPoolBackprop=function(t,r,s,o){ie([r,s],"maxPoolBackprop");for(var a=this.readSync(r.dataId),i=Pe(o.outShape,r.dtype,JT(a,r.shape,r.dtype,o).values),u=o.strideHeight,c=o.strideWidth,l=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterHeight,p=o.effectiveFilterWidth,f=p-1-o.padInfo.left,m=d-1-o.padInfo.top,g=Pe(r.shape,"float32"),x=this.bufferSync(t),y=0;y<o.batchSize;++y)for(var b=0;b<o.inChannels;++b)for(var v=0;v<o.inHeight;++v)for(var w=0;w<o.inWidth;++w){for(var C=v-m,I=w-f,k=0,S=0;S<d;S+=l){var N=(C+S)/u;if(!(N<0||N>=o.outHeight||Math.floor(N)!==N))for(var E=0;E<p;E+=h){var R=(I+E)/c;if(!(R<0||R>=o.outWidth||Math.floor(R)!==R)){var _=d*p-1-i.get(y,N,R,b)===S*p+E?1:0;_!==0&&(k+=x.get(y,N,R,b)*_)}}}g.set(k,y,v,w,b)}return g.toTensor()},e.prototype.avgPoolBackprop=function(t,r,s){ie([t,r],"avgPoolBackprop");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=s.dilationHeight,l=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=d-1-s.padInfo.left,f=h-1-s.padInfo.top,m=Pe(r.shape,"float32"),g=1/(i*u),x=this.bufferSync(t),y=0;y<s.batchSize;++y)for(var b=0;b<s.inChannels;++b)for(var v=0;v<s.inHeight;++v)for(var w=0;w<s.inWidth;++w){for(var C=v-f,I=w-p,k=0,S=0;S<h;S+=c){var N=(C+S)/o;if(!(N<0||N>=s.outHeight||Math.floor(N)!==N))for(var E=0;E<d;E+=l){var R=(I+E)/a;R<0||R>=s.outWidth||Math.floor(R)!==R||(k+=x.get(y,N,R,b))}}m.set(k*g,y,v,w,b)}return m.toTensor()},e.prototype.pool3d=function(t,r,s){ie(t,"pool3d");for(var o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.front,m=r.padInfo.top,g=r.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=this.readSync(t.dataId),b=Pe(r.outShape,t.dtype),v=b.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],k=r.outShape[4],S=0;S<r.batchSize;++S)for(var N=S*w,E=S*t.strides[0],R=0;R<r.inChannels;++R)for(var _=0;_<r.outDepth;++_){for(var O=_*o-f,F=O;F<0;)F+=u;for(var L=Math.min(r.inDepth,h+O),B=N+_*C,M=0;M<r.outHeight;++M){for(var z=M*a-m,H=z;H<0;)H+=c;for(var X=Math.min(r.inHeight,d+z),Z=B+M*I,ee=0;ee<r.outWidth;++ee){for(var ae=ee*i-g,oe=ae;oe<0;)oe+=l;for(var ue=Math.min(r.inWidth,p+ae),he=Z+ee*k,pe=x,de=0,Ce=0,ge=F;ge<L;ge+=u){for(var Te=E+ge*t.strides[1],Ee=H;Ee<X;Ee+=c){for(var Le=Te+Ee*t.strides[2],Fe=oe;Fe<ue;Fe+=l){var De=y[Le+Fe*t.strides[3]+R];if(s==="max"&&De>pe?pe=De:s==="avg"&&(de+=De,Ce++),isNaN(pe))break}if(isNaN(pe))break}if(isNaN(pe))break}v[he+R]=s==="avg"?de/Ce:pe}}}return b.toTensor()},e.prototype.avgPool3d=function(t,r){return ie(t,"avgPool3d"),this.pool3d(t,r,"avg").toFloat()},e.prototype.avgPool3dBackprop=function(t,r,s){ie([t,r],"avgPool3dBackprop");for(var o=s.strideDepth,a=s.strideHeight,i=s.strideWidth,u=s.filterDepth,c=s.filterHeight,l=s.filterWidth,h=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,f=s.effectiveFilterDepth,m=s.effectiveFilterHeight,g=s.effectiveFilterWidth,x=f-1-s.padInfo.front,y=g-1-s.padInfo.left,b=m-1-s.padInfo.top,v=Pe(r.shape,"float32"),w=1/(u*c*l),C=this.bufferSync(t),I=0;I<s.batchSize;++I)for(var k=0;k<s.inChannels;++k)for(var S=0;S<s.inDepth;++S)for(var N=0;N<s.inHeight;++N)for(var E=0;E<s.inWidth;++E){for(var R=S-x,_=N-b,O=E-y,F=0,L=0;L<f;L+=h){var B=(R+L)/o;if(!(B<0||B>=s.outDepth||Math.floor(B)!==B))for(var M=0;M<m;M+=d){var z=(_+M)/a;if(!(z<0||z>=s.outHeight||Math.floor(z)!==z))for(var H=0;H<g;H+=p){var X=(O+H)/i;X<0||X>=s.outWidth||Math.floor(X)!==X||(F+=C.get(I,B,z,X,k))}}}v.set(F*w,I,S,N,E,k)}return v.toTensor()},e.prototype.maxPool3d=function(t,r){return ie(t,"maxPool3d"),this.pool3d(t,r,"max").toFloat()},e.prototype.maxPool3dPositions=function(t,r){for(var s=Pe(r.outShape,"int32"),o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.front,m=r.padInfo.top,g=r.padInfo.left,x=this.bufferSync(t),y=0;y<r.batchSize;++y)for(var b=0;b<r.inChannels;++b)for(var v=0;v<r.outDepth;++v){for(var w=v*o-f,C=w;C<0;)C+=u;for(var I=Math.min(r.inDepth,h+w),k=0;k<r.outHeight;++k){for(var S=k*a-m,N=S;N<0;)N+=c;for(var E=Math.min(r.inHeight,d+S),R=0;R<r.outWidth;++R){for(var _=R*i-g,O=_;O<0;)O+=l;for(var F=Math.min(r.inWidth,p+_),L=Number.NEGATIVE_INFINITY,B=-1,M=C;M<I;M+=u)for(var z=M-w,H=N;H<E;H+=c)for(var X=H-S,Z=O;Z<F;Z+=l){var ee=Z-_,ae=x.get(y,M,H,Z,b);ae>=L&&(L=ae,B=z*d*p+X*d+ee)}s.set(B,y,v,k,R,b)}}}return s.toTensor()},e.prototype.maxPool3dBackprop=function(t,r,s,o){ie([r,s],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(r,o),i=o.strideDepth,u=o.strideHeight,c=o.strideWidth,l=o.dilationDepth,h=o.dilationHeight,d=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,g=p-1-o.padInfo.front,x=m-1-o.padInfo.left,y=f-1-o.padInfo.top,b=Pe(r.shape,"float32"),v=this.bufferSync(a),w=this.bufferSync(t),C=0;C<o.batchSize;++C)for(var I=0;I<o.inChannels;++I)for(var k=0;k<o.inDepth;++k)for(var S=0;S<o.inHeight;++S)for(var N=0;N<o.inWidth;++N){for(var E=k-g,R=S-y,_=N-x,O=0,F=0;F<p;F+=l){var L=(E+F)/i;if(!(L<0||L>=o.outDepth||Math.floor(L)!==L))for(var B=0;B<f;B+=h){var M=(R+B)/u;if(!(M<0||M>=o.outHeight||Math.floor(M)!==M))for(var z=0;z<m;z+=d){var H=(_+z)/c;if(!(H<0||H>=o.outWidth||Math.floor(H)!==H)){var X=p*f*m-1-v.get(C,L,M,H,I)===F*f*m+B*m+z?1:0;X!==0&&(O+=w.get(C,L,M,H,I)*X)}}}}b.set(O,C,k,S,N,I)}return b.toTensor()},e.prototype.cast=function(t,r){return BN(t,r,this)},e.prototype.reshape=function(t,r){return Zf(t,r)},e.prototype.avgPool=function(t,r){return ie(t,"avgPool"),ie(t,"maxPool"),em(this.readSync(t.dataId),t.shape,t.dtype,t.strides,r,"avg").toTensor().toFloat()},e.prototype.resizeBilinear=function(t,r,s,o){ie(t,"resizeBilinear");for(var a=t.shape,i=a[0],u=a[1],c=a[2],l=a[3],h=this.readSync(t.dataId),d=new Float32Array(be([i,r,s,l])),p=[o&&r>1?u-1:u,o&&s>1?c-1:c],f=[o&&r>1?r-1:r,o&&s>1?s-1:s],m=0,g=p[0]/f[0],x=p[1]/f[1],y=0;y<i;y++)for(var b=0;b<r;b++)for(var v=g*b,w=Math.floor(v),C=v-w,I=Math.min(u-1,Math.ceil(v)),k=y*t.strides[0]+w*t.strides[1],S=y*t.strides[0]+I*t.strides[1],N=0;N<s;N++)for(var E=x*N,R=Math.floor(E),_=E-R,O=Math.min(c-1,Math.ceil(E)),F=k+R*t.strides[2],L=S+R*t.strides[2],B=k+O*t.strides[2],M=S+O*t.strides[2],z=0;z<l;z++){var H=h[F+z],X=h[L+z],Z=H+(h[B+z]-H)*_,ee=Z+(X+(h[M+z]-X)*_-Z)*C;d[m++]=ee}return nn(d,[i,r,s,l])},e.prototype.resizeBilinearBackprop=function(t,r,s){ie([t,r],"resizeBilinearBackprop");for(var o=r.shape,a=o[0],i=o[1],u=o[2],c=o[3],l=t.shape,h=l[1],d=l[2],p=new Float32Array(a*i*u*c),f=[s&&h>1?i-1:i,s&&d>1?u-1:u],m=[s&&h>1?h-1:h,s&&d>1?d-1:d],g=f[0]/m[0],x=f[1]/m[1],y=this.readSync(t.dataId),b=0,v=0;v<a;v++)for(var w=v*r.strides[0],C=0;C<h;C++)for(var I=C*g,k=Math.floor(I),S=Math.min(Math.ceil(I),i-1),N=w+k*r.strides[1],E=w+S*r.strides[1],R=I-k,_=1-R,O=0;O<d;O++)for(var F=O*x,L=Math.floor(F),B=Math.min(Math.ceil(F),u-1),M=F-L,z=1-M,H=N+L*r.strides[2],X=N+B*r.strides[2],Z=E+L*r.strides[2],ee=E+B*r.strides[2],ae=_*z,oe=_*M,ue=R*z,he=R*M,pe=0;pe<c;pe++){var de=y[b++];p[H+pe]+=de*ae,p[X+pe]+=de*oe,p[Z+pe]+=de*ue,p[ee+pe]+=de*he}return No(p,[a,u,i,c],r.dtype)},e.prototype.resizeNearestNeighbor=function(t,r,s,o){ie(t,"resizeNearestNeighbor");for(var a=t.shape,i=a[0],u=a[1],c=a[2],l=a[3],h=this.readSync(t.dataId),d=new Float32Array(i*r*s*l),p=[o&&r>1?u-1:u,o&&s>1?c-1:c],f=[o&&r>1?r-1:r,o&&s>1?s-1:s],m=p[0]/f[0],g=p[1]/f[1],x=0,y=0;y<i;y++)for(var b=y*t.strides[0],v=0;v<r;v++)for(var w=m*v,C=b+Math.min(u-1,o?Math.round(w):Math.floor(w))*t.strides[1],I=0;I<s;I++)for(var k=g*I,S=C+Math.min(c-1,o?Math.round(k):Math.floor(k))*t.strides[2],N=0;N<l;N++){var E=h[S+N];d[x++]=E}return nn(d,[i,r,s,l],t.dtype)},e.prototype.resizeNearestNeighborBackprop=function(t,r,s){ie([t,r],"resizeNearestNeighborBackprop");for(var o=r.shape,a=o[0],i=o[1],u=o[2],c=o[3],l=t.shape,h=l[1],d=l[2],p=new Float32Array(a*i*u*c),f=this.readSync(t.dataId),m=[s&&h>1?i-1:i,s&&d>1?u-1:u],g=[s&&h>1?h-1:h,s&&d>1?d-1:d],x=m[0]/g[0],y=m[1]/g[1],b=1/x,v=1/y,w=2*Math.ceil(b)+2,C=2*Math.ceil(v)+2,I=0;I<a;I++)for(var k=I*r.strides[0],S=0;S<i;S++)for(var N=k+S*r.strides[1],E=Math.floor(S*b),R=Math.floor(E-w/2),_=0;_<u;_++)for(var O=N+_*r.strides[2],F=Math.floor(_*v),L=Math.floor(F-C/2),B=0;B<c;B++){for(var M=0,z=0;z<w;z++){var H=z+R;if(!(H<0||H>=h)){var X=k+H*t.strides[1],Z=H*x;if(S===Math.min(i-1,s?Math.round(Z):Math.floor(Z)))for(var ee=0;ee<C;ee++){var ae=ee+L;if(!(ae<0||ae>=d)){var oe=X+ae*t.strides[2],ue=ae*y;_===Math.min(u-1,s?Math.round(ue):Math.floor(ue))&&(M+=f[oe+B])}}}}p[O+B]=M}return No(p,r.shape,r.dtype)},e.prototype.batchNormalization=function(t,r,s,o,a,i){ie([t,r,s,a,i],"batchNorm");for(var u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=this.readSync(s.dataId),h=a?this.readSync(a.dataId):new Float32Array([1]),d=i?this.readSync(i.dataId):new Float32Array([0]),p=new Float32Array(u.length),f=d.length,m=h.length,g=l.length,x=c.length,y=0,b=0,v=0,w=0,C=0;C<u.length;++C)p[C]=d[y++]+(u[C]-c[b++])*h[v++]/Math.sqrt(l[w++]+o),y>=f&&(y=0),b>=x&&(b=0),v>=m&&(v=0),w>=g&&(w=0);return No(p,t.shape)},e.prototype.localResponseNormalization4D=function(t,r,s,o,a){ie(t,"localResponseNormalization4D");var i=t.shape[3],u=i-1,c=this.readSync(t.dataId),l=t.size,h=new Float32Array(l);function d(g){for(var x=g%i,y=g-x+Math.max(0,x-r),b=g-x+Math.min(x+r,u),v=0;y<=b;y++){var w=c[y];v+=w*w}return v}for(var p=0;p<l;p++){var f=d(p),m=c[p]*Math.pow(s+o*f,-a);h[p]=m}return No(h,t.shape)},e.prototype.LRNGrad=function(t,r,s,o,a,i,u){ie(t,"LRNGrad");for(var c=t.shape[3],l=this.readSync(t.dataId),h=this.readSync(r.dataId),d=this.readSync(s.dataId),p=new Float32Array(t.size),f=t.size,m=0;m<f;m++){for(var g=m%c,x=m-g+Math.max(0,g-o),y=m-g+Math.min(c,g+o+1),b=0,v=x;v<y;v++)b+=Math.pow(h[v],2);for(b=i*b+a,v=x;v<y;v++){var w=-2*i*u*h[v]*d[m]/b;m===v&&(w+=Math.pow(b,-u)),w*=l[m],p[v]+=w}}return No(p,t.shape)},e.prototype.multinomial=function(t,r,s,o){ie(t,"multinomial");for(var a=r?t:ap(t),i=a.shape[0],u=a.shape[1],c=Ct([i,s],"int32"),l=this.readSync(c.dataId),h=this.readSync(a.dataId),d=0;d<i;++d){var p=d*u,f=new Float32Array(u-1);f[0]=h[p];for(var m=1;m<f.length;++m)f[m]=f[m-1]+h[p+m];for(var g=ip(o.toString()),x=d*s,y=0;y<s;++y){var b=g();l[x+y]=f.length;for(var v=0;v<f.length;v++)if(b<f[v]){l[x+y]=v;break}}}return c},e.prototype.oneHot=function(t,r,s,o){ie(t,"oneHot");var a=new Float32Array(t.size*r);a.fill(o);for(var i=this.readSync(t.dataId),u=0;u<t.size;++u)i[u]>=0&&i[u]<r&&(a[u*r+i[u]]=s);return zo(a,[t.size,r],"int32")},e.prototype.nonMaxSuppression=function(t,r,s,o,a){return ie(t,"nonMaxSuppression"),ky(this.readSync(t.dataId),this.readSync(r.dataId),s,o,a)},e.prototype.fft=function(t){return this.fftBatch(t,!1)},e.prototype.ifft=function(t){return this.fftBatch(t,!0)},e.prototype.fftBatch=function(t,r){for(var s=t.shape[0],o=t.shape[1],a=Pe(t.shape,"float32"),i=Pe(t.shape,"float32"),u=Jn(t).as2D(s,o),c=Ar(t).as2D(s,o),l=0;l<s;l++)for(var h=u.slice([l,0],[1,o]),d=c.slice([l,0],[1,o]),p=tn(h,d),f=this.readSync(this.fftImpl(p,r).dataId),m=0;m<o;m++){var g=X0(f,m);a.values[l*o+m]=g.real,i.values[l*o+m]=g.imag}return tn(a.toTensor(),i.toTensor()).as2D(s,o)},e.prototype.fftImpl=function(t,r){var s=t.as1D(),o=s.size;if(this.isExponentOf2(o)){var a=this.fftRadix2(s,o,r).as2D(t.shape[0],t.shape[1]);return r&&(a=tn(Jn(a).div(ve(o)),Ar(a).div(ve(o)))),a}var i=this.readSync(t.dataId),u=function(c){for(var l=new Float32Array(c.length/2),h=new Float32Array(c.length/2),d=0;d<c.length;d+=2)l[d/2]=c[d],h[d/2]=c[d+1];return{real:l,imag:h}}(this.fourierTransformByMatmul(i,o,r));return tn(u.real,u.imag).as2D(t.shape[0],t.shape[1])},e.prototype.isExponentOf2=function(t){return(t&t-1)==0},e.prototype.fftRadix2=function(t,r,s){if(r===1)return t;var o=this.readSync(t.dataId),a=r/2,i=function(x){for(var y=Math.ceil(x.length/4),b=new Float32Array(y),v=new Float32Array(y),w=0;w<x.length;w+=4)b[Math.floor(w/4)]=x[w],v[Math.floor(w/4)]=x[w+1];return{real:b,imag:v}}(o),u=tn(i.real,i.imag).as1D(),c=function(x){for(var y=Math.floor(x.length/4),b=new Float32Array(y),v=new Float32Array(y),w=2;w<x.length;w+=4)b[Math.floor(w/4)]=x[w],v[Math.floor(w/4)]=x[w+1];return{real:b,imag:v}}(o),l=tn(c.real,c.imag).as1D();u=this.fftRadix2(u,a,s),l=this.fftRadix2(l,a,s);var h=function(x,y){for(var b=new Float32Array(x/2),v=new Float32Array(x/2),w=0;w<Math.ceil(x/2);w++){var C=(y?2:-2)*Math.PI*(w/x);b[w]=Math.cos(C),v[w]=Math.sin(C)}return{real:b,imag:v}}(r,s),d=tn(h.real,h.imag).mul(l),p=u.add(d),f=u.sub(d),m=Jn(p).concat(Jn(f)),g=Ar(p).concat(Ar(f));return tn(m,g).as1D()},e.prototype.fourierTransformByMatmul=function(t,r,s){for(var o=new Float32Array(2*r),a=0;a<r;a++){for(var i=0,u=0,c=0;c<r;c++){var l=GQ(a*c,r,s),h=X0(t,c);i+=h.real*l.real-h.imag*l.imag,u+=h.real*l.imag+h.imag*l.real}s&&(i/=r,u/=r),UQ(o,i,u,a)}return o},e.prototype.depthToSpace=function(t,r,s){D(s==="NHWC",function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+s}),D(r>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+r});for(var o=t.shape[0],a=t.shape[1],i=t.shape[2],u=t.shape[3],c=a*r,l=i*r,h=u/(r*r),d=this.readSync(t.dataId),p=new Float32Array(o*c*l*h),f=0,m=0;m<o;++m)for(var g=0;g<c;++g)for(var x=Math.floor(g/r),y=g%r,b=0;b<l;++b)for(var v=Math.floor(b/r),w=(y*r+b%r)*h,C=0;C<h;++C){var I=C+w+u*(v+i*(x+a*m));p[f++]=d[I]}return No(p,[o,c,l,h])},e.prototype.broadcastedBinaryOp=function(t,r,s,o){var a=qe(t.shape,r.shape),i=Pe(a,s),u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=Gs(t.shape,a),h=Gs(r.shape,a),d=i.values;if(l.length+h.length===0)for(var p=0;p<d.length;++p)d[p]=o(u[p%u.length],c[p%c.length]);else{var f=this.bufferSync(t),m=this.bufferSync(r),g=function(x){var y=i.indexToLoc(x),b=y.slice(-t.rank);l.forEach(function(I){return b[I]=0});var v=f.locToIndex(b),w=y.slice(-r.rank);h.forEach(function(I){return w[I]=0});var C=m.locToIndex(w);d[x]=o(u[v],c[C])};for(p=0;p<d.length;++p)g(p)}return i.toTensor()},e.prototype.broadcastedBinaryComplexOp=function(t,r,s){var o=qe(t.shape,r.shape),a=Pe(o,"float32"),i=Pe(o,"float32"),u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=Gs(t.shape,o),h=Gs(r.shape,o),d=a.values,p=i.values;if(l.length+h.length===0)for(var f=0;f<d.length;f++){var m=f%u.length,g=f%c.length,x=s(u[2*m],u[2*m+1],c[2*g],c[2*g+1]);d[f]=x.real,p[f]=x.imag}else{var y=this.bufferSync(this.data.get(t.dataId).complexTensors.real),b=this.bufferSync(this.data.get(r.dataId).complexTensors.real),v=function(w){var C=a.indexToLoc(w),I=C.slice(-t.rank);l.forEach(function(R){return I[R]=0});var k=y.locToIndex(I),S=C.slice(-r.rank);h.forEach(function(R){return S[R]=0});var N=b.locToIndex(S),E=s(u[2*k],u[2*k+1],c[2*N],c[2*N+1]);d[w]=E.real,p[w]=E.imag};for(f=0;f<d.length;f++)v(f)}return this.complex(a.toTensor(),i.toTensor())},e.prototype.split=function(t,r,s){return WN(t,r,s)},e.prototype.dispose=function(){},e.prototype.floatPrecision=function(){return 32},e.prototype.epsilon=function(){return 1e-7},e.prototype.cropAndResize=function(t,r,s,o,a,i){for(var u=t.shape,c=u[0],l=u[1],h=u[2],d=u[3],p=r.shape[0],f=o[0],m=o[1],g=Pe([p,f,m,d],"float32"),x=this.readSync(r.dataId),y=this.readSync(s.dataId),b=this.readSync(t.dataId),v=t.strides,w=g.strides,C=0;C<p;C++){var I=4*C,k=x[I],S=x[I+1],N=x[I+2],E=x[I+3],R=y[C];if(!(R>=c))for(var _=f>1?(N-k)*(l-1)/(f-1):0,O=m>1?(E-S)*(h-1)/(m-1):0,F=0;F<f;F++){var L=f>1?k*(l-1)+F*_:.5*(k+N)*(l-1);if(L<0||L>l-1)for(var B=0;B<m;B++)for(var M=0;M<d;M++){var z=M+B*w[2]+F*w[1]+C*w[0];g.values[z]=i}else if(a==="bilinear"){var H=Math.floor(L),X=Math.ceil(L),Z=L-H;for(B=0;B<m;B++)if((ge=m>1?S*(h-1)+B*O:.5*(S+E)*(h-1))<0||ge>h-1)for(M=0;M<d;M++)z=M+B*w[2]+F*w[1]+C*w[0],g.values[z]=i;else{var ee=Math.floor(ge),ae=Math.ceil(ge),oe=ge-ee;for(M=0;M<d;M++){var ue=b[z=M+ee*v[2]+H*v[1]+R*v[0]],he=b[z=M+ae*v[2]+H*v[1]+R*v[0]],pe=b[z=M+ee*v[2]+X*v[1]+R*v[0]],de=ue+(he-ue)*oe,Ce=pe+(b[z=M+ae*v[2]+X*v[1]+R*v[0]]-pe)*oe;z=M+B*w[2]+F*w[1]+C*w[0],g.values[z]=de+(Ce-de)*Z}}}else for(B=0;B<m;++B){var ge;if((ge=m>1?S*(h-1)+B*O:.5*(S+E)*(h-1))<0||ge>h-1)for(M=0;M<d;M++)z=M+B*w[2]+F*w[1]+C*w[0],g.values[z]=i;else{var Te=Math.round(ge),Ee=Math.round(L);for(M=0;M<d;M++){var Le=M+Te*v[2]+Ee*v[1]+R*v[0],Fe=M+B*w[2]+F*w[1]+C*w[0];g.values[Fe]=b[Le]}}}}}return g.toTensor()},e.prototype.sparseToDense=function(t,r,s,o){var a=ph(0,t,s),i=a.sliceRank,u=a.numUpdates,c=a.sliceSize,l=a.strides,h=a.outputSize;return this.scatter(t,r,s,h,c,u,i,l,o,!1)},e.prototype.gatherND=function(t,r){var s=r.shape,o=s[s.length-1],a=AN(t,r),i=a[0],u=a[1],c=a[2],l=a[3];if(u===0)return nn([],i,t.dtype);for(var h=new Iu([u,c],t.dtype),d=this.readSync(r.dataId),p=this.readSync(t.dataId),f=0;f<u;f++){for(var m=[],g=0,x=0;x<o;x++){var y=d[f*o+x];g+=y*l[x],m.push(y)}if(g<0||g>=t.size/c)throw new Error("Invalid indices: "+m+" does not index into "+t.shape);for(var b=0;b<c;b++)h.values[f*c+b]=p[g*c+b]}return h.toTensor().reshape(i)},e.prototype.scatterND=function(t,r,s){var o=ph(0,t,s),a=o.sliceRank,i=o.numUpdates,u=o.sliceSize,c=o.strides,l=o.outputSize,h=ve(0);return this.scatter(t,r,s,l,u,i,a,c,h,!0)},e.prototype.fill=function(t,r,s){var o=wu(s=s||Ri(r),be(t));return o.fill(r),G.makeTensor(o,t,s,this)},e.prototype.onesLike=function(t){if(t.dtype==="string")throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)},e.prototype.zerosLike=function(t){var r=wu(t.dtype,be(t.shape));return this.makeOutput(r,t.shape,t.dtype)},e.prototype.linspace=function(t,r,s){return zN(t,r,s)},e.prototype.scatter=function(t,r,s,o,a,i,u,c,l,h){var d=[o/a,a],p=this.readSync(t.dataId),f=this.readSync(r.dataId);if(o===0)return nn([],s,r.dtype);var m=new Iu(d,r.dtype);m.values.fill(this.readSync(l.dataId)[0]);for(var g=0;g<i;g++){for(var x=[],y=0,b=0;b<u;b++){var v=p[g*u+b];x.push(v),y+=v*c[b]}if(y<0||y>=o/a)throw new Error("Invalid indices: "+x+" does not index into "+s);for(var w=0;w<a;w++)h?m.values[y*a+w]+=f[g*a+w]:m.values[y*a+w]=r.rank===0?f[0]:f[g*a+w]}return m.toTensor().reshape(s)},e}(LN);function eE(n,e){return{kernelName:n,backendName:"cpu",kernelFunc:function(t){var r=t.inputs,s=t.backend,o=r,a=o.a,i=o.b,u=s;ie([a,i],n);var c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=e(a.shape,i.shape,c,l,a.dtype),d=h[0],p=h[1];return{dataId:u.write(d,p,a.dtype),shape:p,dtype:a.dtype}}}}function tE(n){return function(e,t,r,s,o){var a=qe(e,t),i=a.length,u=Wn(a),c=ra(o,be(a)),l=e.length,h=t.length,d=Wn(e),p=Wn(t),f=Gs(e,a),m=Gs(t,a);if(f.length+m.length===0)for(var g=0;g<c.length;++g)c[g]=n(r[g%r.length],s[g%s.length]);else{var x=function(y){var b=dy(y,i,u),v=b.slice(-l);f.forEach(function(k){return v[k]=0});var w=sh(v,l,d),C=b.slice(-h);m.forEach(function(k){return C[k]=0});var I=sh(C,h,p);c[y]=n(r[w],s[I])};for(g=0;g<c.length;++g)x(g)}return[c,a]}}G.registerBackend("cpu",function(){return new pte},1);var fte=tE(function(n,e){return n/e}),mte=eE(tp,fte),gte={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t,a=o.filterSize,i=o.strides,u=o.pad,c=o.includeBatchInIndex,l=r;ie(s,"MaxPoolWithArgmax");var h=l.data.get(s.dataId).values,d=sa(s.shape,a,i,[1,1],u),p=function(y,b,v,w,C){var I=em(y,0,v,Wn(b),C,"max"),k=JT(y,b,v,C,!0,w);return[I.values,k.values]}(h,s.shape,s.dtype,c,d),f=p[0],m=p[1],g=l.write(f,d.outShape,s.dtype),x=l.write(m,d.outShape,s.dtype);return[{dataId:g,shape:d.outShape,dtype:s.dtype},{dataId:x,shape:d.outShape,dtype:"int32"}]}},xte={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs,s=e,o=s.boxes,a=s.scores,i=r,u=i.maxOutputSize,c=i.iouThreshold,l=i.scoreThreshold,h=i.softNmsSigma,d=t;ie(o,"NonMaxSuppressionWithScore");var p=Sy(d.data.get(o.dataId).values,d.data.get(a.dataId).values,u,c,l,h);return[p.selectedIndices,p.selectedScores]}},yte={kernelName:"Square",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e.x,s=t;ie(r,"square");for(var o=s.data.get(r.dataId).values,a=new Float32Array(o.length),i=0;i<o.length;++i){var u=o[i];a[i]=u*u}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vte=tE(function(n,e){var t=n-e;return t*t});function nE(n,e,t,r,s){for(var o=be(e),a=e.length,i=Wn(e),u=Wn(s),c=ra(t,be(s)),l=0;l<o;++l){for(var h=dy(l,a,i),d=new Array(h.length),p=0;p<d.length;p++)d[p]=h[r[p]];c[sh(d,a,u)]=n[l]}return c}for(var Yp=0,xb=[xte,yte,eE(np,vte),mte,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t.perm,a=r;ie(s,"transpose");for(var i=s.shape.length,u=new Array(i),c=0;c<u.length;c++)u[c]=s.shape[o[c]];var l=nE(a.data.get(s.dataId).values,s.shape,s.dtype,o,u);return{dataId:a.write(l,u,s.dtype),shape:u,dtype:s.dtype}}},gte];Yp<xb.length;Yp++)SS(xb[Yp]);var Ea,bte=function(n){this.variableNames=["A"];var e=Cn(),t=n[0],r=n[1];this.outputShape=n,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+r+".0, "+t+`.0);

        vec4 values = `+e.texture2D+`(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `},wte=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var e=Cn(),t=n[0],r=n[1];this.outputShape=n,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(`+r+".0, "+t+`.0);
            vec4 values = `+e.texture2D+`(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        `+e.output+` = result;
      }
    `},Cte=function(n,e){this.variableNames=["A"];for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[e[r]];this.outputShape=t,this.rank=t.length;var s=mt(this.rank),o=function(a){var i=a.length;if(i>6)throw Error("Transpose for rank "+i+" is not yet supported");for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],c=new Array(i),l=0;l<a.length;l++)c[a[l]]=u[l];return c.join()}(e);this.userCode=`
    void main() {
      `+s+` resRC = getOutputCoords();
      setOutput(getA(`+o+`));
    }
    `},Ite=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[e[r]];if(this.outputShape=t,this.rank=t.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var s=mt(this.rank),o=HN("rc",this.rank),a=new Array(this.rank);for(r=0;r<e.length;r++)a[e[r]]=o[r];var i="vec2("+a.slice(-2).join()+")",u="++"+o[this.rank-1]+" < "+t[this.rank-1],c="getChannel(getA("+a.join()+"), "+i+")";this.userCode=`
    void main() {
      `+s+` rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = `+c+`;
      if(`+u+`) {
        result[1] = `+c+`;
      }
      --`+o[this.rank-1]+`;
      if(++`+o[this.rank-2]+" < "+t[this.rank-2]+`) {
        result[2] = `+c+`;
        if(`+u+`) {
          result[3] = `+c+`;
        }
      }
      setOutput(result);
    }
    `};for(var Qp=0,yb=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs,s=e.pixels,o=r.numChannels,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,u=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=u[0],l=u[1],h=[l,c],d=[l,c,o];(i||a)&&(Ea==null&&(Ea=document.createElement("canvas").getContext("2d")),Ea.canvas.width=c,Ea.canvas.height=l,Ea.drawImage(s,0,0,c,l),s=Ea.canvas);var p=t.makeTensorInfo(h,"int32");t.texData.get(p.dataId).usage=tr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(p.dataId),s);var f=se().getBool("WEBGL_PACK")?new wte(d):new bte(d),m=t.runWebGLProgram(f,[p],"int32");return t.disposeData(p.dataId),m}},{kernelName:tp,backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e;return function(s,o,a){var i=new Nt(lZ,s.shape,o.shape);return se().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(i=new Hr(hZ,s.shape,o.shape,!0)),a.runWebGLProgram(i,[s,o],"float32")}(r.a,r.b,t)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs;uh("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var s=e,o=s.boxes,a=s.scores,i=r,u=i.maxOutputSize,c=i.iouThreshold,l=i.scoreThreshold,h=i.softNmsSigma,d=t,p=Sy(d.readSync(o.dataId),d.readSync(a.dataId),u,c,l,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e.x,s=t,o=new Ve(r.shape,"return x * x;");return s.runWebGLProgram(o,[r],r.dtype)}},{kernelName:np,backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e,s=r.a,o=r.b,a=t,i=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr("return (a - b) * (a - b);",s.shape,o.shape):new Nt("return (a - b) * (a - b);",s.shape,o.shape);return a.compileAndRun(i,[s,o])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(n){for(var e,t=n.inputs,r=n.attrs,s=n.backend,o=t.x,a=r.perm,i=s,u=o.shape.length,c=new Array(u),l=0;l<c.length;l++)c[l]=o.shape[a[l]];if(i.shouldExecuteOnCPU([o])){var h=nE(i.texData.get(o.dataId).values,o.shape,o.dtype,a,c);e=i.makeTensorInfo(c,o.dtype),i.texData.get(e.dataId).values=h}else e=function(d,p,f){var m=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ite(d.shape,p):new Cte(d.shape,p);return f.runWebGLProgram(m,[d],d.dtype)}(o,a,i);return e}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t,a=o.filterSize,i=o.strides,u=o.pad,c=o.includeBatchInIndex,l=r;D(s.shape.length===4,function(){return"Error in maxPool: input must be rank 4 but got rank "+s.shape.length+"."});var h=[1,1];D(_n(i,h),function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+h+"'"});var d=sa(s.shape,a,i,h,u),p=function(f,m,g,x){var y=new au(g,"max",!1),b=x.runWebGLProgram(y,[f],"float32");return y=new au(g,"max",!0,!0,m),[b,x.runWebGLProgram(y,[f],"float32")]}(s,c,d,l);return[p[0],p[1]]}}];Qp<yb.length;Qp++)SS(yb[Qp]);for(var Zp=0,vb=[{kernelName:YS,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=qe(t.shape,r.shape);return{a:function(){var o=n,a=Xt(t.shape,s);return a.length>0&&(o=o.sum(a)),o.reshape(t.shape)},b:function(){var o=n,a=Xt(r.shape,s);return a.length>0&&(o=o.sum(a)),o.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(n,e){var t={};return e.forEach(function(r,s){t[s]=function(){return n.clone()}}),t}},{kernelName:QS,gradFunc:function(n,e,t){for(var r=t,s=r.inputShape,o=r.shape,a=Array.from(o),i=s.length-1;i>=0;i--)if(s[i]===o[i])a[i]=1;else if(s[i]!==1)throw new Error("broadcastTo(): ["+s+"] cannot be broadcast to ["+o+"].");var u=[];for(i=0;i<a.length;i++)a[i]>1&&u.push(i);return{x:function(){return n.sum(u,!0)}}}},{kernelName:tp,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=qe(t.shape,r.shape);return{a:function(){var o=As(n,r.toFloat()),a=Xt(t.shape,s);return a.length>0?ys(o,a).reshape(t.shape):o},b:function(){var o=n.mul(t.toFloat()),a=Xt(r.shape,s);a.length>0&&(o=ys(o,a).reshape(r.shape));var i=_y(r);return rp(As(o,i.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(n,e,t){var r=t.varianceEpsilon,s=e[0],o=e[1],a=e[2],i=e[3],u=rT(s),c=i??ve(1),l=Xt(o.shape,u.shape),h=[];if(o.rank===1){for(var d=0;d<u.shape.length-1;++d)h.push(u.shape[d]);h.push(1)}var p=Is(s,o),f=Ot(n,c),m=vy($s(a,ve(r))),g=Ot(Ot(Ot(m,m),m),ve(-.5));return{x:function(){return o.rank===1?Yr(Ot(Ot(n,Vo(m.as4D(1,1,1,o.shape[0]),h)),c),s.shape):Yr(Ot(Ot(n,m),c),s.shape)},mean:function(){var x=Ot(Ot(m,ve(-1)),f);return o.rank===1&&(x=ys(x,l)),Yr(x,o.shape)},variance:function(){var x=Ot(Ot(g,p),f);return o.rank===1&&(x=ys(x,l)),Yr(x,o.shape)},scale:function(){var x=Ot(p,m),y=Ot(n,x);return o.rank===1&&(y=ys(y,l)),Yr(y,o.shape)},offset:function(){var x=n;return o.rank===1&&(x=ys(x,l)),Yr(x,o.shape)}}}},{kernelName:JS,gradFunc:function(n){return{x:function(){return n.toFloat()}}}},{kernelName:ZS,inputsToSave:["indices"],gradFunc:function(n,e){var t=e[0];return{indices:function(){return Ct(t.shape,"float32")}}}},{kernelName:tN,inputsToSave:["x"],gradFunc:function(n,e,t){var r=e[0],s=t.paddings.map(function(o){return o[0]});return{x:function(){return n.slice(s,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(n,e){var t=e[0];return{x:function(){return n.mul(t.toFloat().mul(2))}}}},{kernelName:np,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=ve(2);return{a:function(){return Ot(n,Ot(s,Is(t,r)))},b:function(){return Ot(n,Ot(s,Is(r,t)))}}}},{kernelName:eN,inputsToSave:["x"],gradFunc:function(n,e,t){var r=e[0],s=t.reps;return{x:function(){var o=Ze(r);if(r.rank===1)for(var a=0;a<s[0];++a)o=o.add(n.slice([a*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(a=0;a<s[0];++a)for(var i=0;i<s[1];++i)o=o.add(n.slice([a*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(a=0;a<s[0];++a)for(i=0;i<s[1];++i)for(var u=0;u<s[2];++u)o=o.add(n.slice([a*r.shape[0],i*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(r.rank!==4)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(a=0;a<s[0];++a)for(i=0;i<s[1];++i)for(u=0;u<s[2];++u)for(var c=0;c<s[3];++c)o=o.add(n.slice([a*r.shape[0],i*r.shape[1],u*r.shape[2],c*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return o}}}},{kernelName:"Transpose",gradFunc:function(n,e,t){var r=fy(t.perm);return{x:function(){return hr(n,r)}}}}];Zp<vb.length;Zp++)$9(vb[Zp]);var kte=function(){function n(){}return n.prototype.fetch=function(e,t){return fetch(e,t)},n.prototype.now=function(){return performance.now()},n.prototype.encode=function(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error("Browser's encoder only supports utf-8, but got "+t);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},n.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},n}();se().get("IS_BROWSER")&&se().setPlatform("browser",new kte);var Jp,Ste=function(){return require("node-fetch")},Nte=function(){function n(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return n.prototype.fetch=function(e,t){return se().global.fetch!=null?se().global.fetch(e,t):(Jp==null&&(Jp=Ste()),Jp(e,t))},n.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},n.prototype.encode=function(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},n.prototype.decode=function(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)},n}();se().get("IS_NODE")&&se().setPlatform("node",new Nte);var tm={float32:4,int32:4,uint16:2,uint8:1,bool:1},yh=4;function rE(n,e){for(var t={},r=0,s=function(i){var u=i.name,c=i.dtype,l=i.shape,h=be(l),d=void 0;if("quantization"in i){var p=i.quantization;if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error("Weight "+i.name+" has unknown quantization dtype "+p.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var f=tm[p.dtype],m=n.slice(r,r+h*f),g=p.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(c==="float32")d=Float32Array.from(g,function(C){return C*p.scale+p.min});else{if(c!=="int32")throw new Error("Unsupported dtype in weight '"+u+"': "+c);d=Int32Array.from(g,function(C){return Math.round(C*p.scale+p.min)})}r+=h*f}else if(c==="string"){var x=be(i.shape);d=[];for(var y=0;y<x;y++){var b=new Uint32Array(n.slice(r,r+yh))[0];r+=yh;var v=new Uint8Array(n.slice(r,r+b));d.push(v),r+=b}}else{var w=tm[c];if(m=n.slice(r,r+h*w),c==="float32")d=new Float32Array(m);else if(c==="int32")d=new Int32Array(m);else{if(c!=="bool")throw new Error("Unsupported dtype in weight '"+u+"': "+c);d=new Uint8Array(m)}r+=h*w}t[u]=nn(d,l,c)},o=0,a=e;o<a.length;o++)s(a[o]);return t}function Tte(n){if(n===null)throw new Error("Invalid input value: "+JSON.stringify(n));var e=0,t=[];n.forEach(function(o){if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+o.constructor.name)});var r=new Uint8Array(e),s=0;return t.forEach(function(o){r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}var nm=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function bb(n){return nm?Buffer.byteLength(n):new Blob([n]).size}function Jy(n){var e=0;n.forEach(function(s){e+=s.byteLength});var t=new Uint8Array(e),r=0;return n.forEach(function(s){t.set(new Uint8Array(s),r),r+=s.byteLength}),t.buffer}function wb(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);var e=n.split("/");return e[e.length-1]}function Qc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:bb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:bb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}var nr=function(){function n(){this.saveRouters=[],this.loadRouters=[]}return n.getInstance=function(){return n.instance==null&&(n.instance=new n),n.instance},n.registerSaveRouter=function(e){n.getInstance().saveRouters.push(e)},n.registerLoadRouter=function(e){n.getInstance().loadRouters.push(e)},n.getSaveHandlers=function(e){return n.getHandlers(e,"save")},n.getLoadHandlers=function(e,t){return n.getHandlers(e,"load",t)},n.getHandlers=function(e,t,r){var s=[];return(t==="load"?n.getInstance().loadRouters:n.getInstance().saveRouters).forEach(function(o){var a=o(e,r);a!==null&&s.push(a)}),s},n}(),qa="://",Ys=function(){function n(){this.managers={}}return n.getInstance=function(){return n.instance==null&&(n.instance=new n),n.instance},n.registerManager=function(e,t){D(e!=null,function(){return"scheme must not be undefined or null."}),e.endsWith(qa)&&(e=e.slice(0,e.indexOf(qa))),D(e.length>0,function(){return"scheme must not be an empty string."});var r=n.getInstance();D(r.managers[e]==null,function(){return"A model store manager is already registered for scheme '"+e+"'."}),r.managers[e]=t},n.getManager=function(e){var t=this.getInstance().managers[e];if(t==null)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},n.getSchemes=function(){return Object.keys(this.getInstance().managers)},n}();function Cl(n){if(n.indexOf(qa)===-1)throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Ys.getSchemes().join(","));return{scheme:n.split(qa)[0],path:n.split(qa)[1]}}function Cb(n,e,t){return t===void 0&&(t=!1),ke(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h;return Se(this,function(d){switch(d.label){case 0:return D(n!==e,function(){return"Old path and new path are the same: '"+n+"'"}),D((r=nr.getLoadHandlers(n)).length>0,function(){return"Copying failed because no load handler is found for source URL "+n+"."}),D(r.length<2,function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+n+"."}),s=r[0],D((o=nr.getSaveHandlers(e)).length>0,function(){return"Copying failed because no save handler is found for destination URL "+e+"."}),D(o.length<2,function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+e+"."}),a=o[0],i=Cl(n).scheme,u=Cl(n).path,c=i===Cl(n).scheme,[4,s.load()];case 1:return l=d.sent(),t&&c?[4,Ys.getManager(i).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return[4,a.save(l)];case 4:return h=d.sent(),!t||c?[3,6]:[4,Ys.getManager(i).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return[2,h.modelArtifactsInfo]}})})}var _o="models_store",Hs="model_info_store";function sE(){if(!se().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var n=window||self,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function rm(n){var e=n.result;e.createObjectStore(_o,{keyPath:"modelPath"}),e.createObjectStore(Hs,{keyPath:"modelPath"})}var Ka=function(){function n(e){if(this.indexedDB=sE(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return n.prototype.save=function(e){return ke(this,void 0,void 0,function(){return Se(this,function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]})})},n.prototype.load=function(){return ke(this,void 0,void 0,function(){return Se(this,function(e){return[2,this.databaseAction(this.modelPath)]})})},n.prototype.databaseAction=function(e,t){var r=this;return new Promise(function(s,o){var a=r.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return rm(a)},a.onsuccess=function(){var i=a.result;if(t==null){var u=i.transaction(_o,"readonly"),c=u.objectStore(_o).get(r.modelPath);c.onsuccess=function(){if(c.result==null)return i.close(),o(new Error("Cannot find model with path '"+r.modelPath+"' in IndexedDB."));s(c.result.modelArtifacts)},c.onerror=function(m){return i.close(),o(c.error)},u.oncomplete=function(){return i.close()}}else{var l,h=Qc(t),d=i.transaction(Hs,"readwrite"),p=d.objectStore(Hs),f=p.put({modelPath:r.modelPath,modelArtifactsInfo:h});f.onsuccess=function(){var m=(l=i.transaction(_o,"readwrite")).objectStore(_o).put({modelPath:r.modelPath,modelArtifacts:t,modelArtifactsInfo:h});m.onsuccess=function(){return s({modelArtifactsInfo:h})},m.onerror=function(g){var x=(p=d.objectStore(Hs)).delete(r.modelPath);x.onsuccess=function(){return i.close(),o(m.error)},x.onerror=function(y){return i.close(),o(m.error)}}},f.onerror=function(m){return i.close(),o(f.error)},d.oncomplete=function(){l==null?i.close():l.oncomplete=function(){return i.close()}}}},a.onerror=function(i){return o(a.error)}})},n.URL_SCHEME="indexeddb://",n}(),Ib=function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ka.URL_SCHEME)?(e=n.slice(Ka.URL_SCHEME.length),new Ka(e)):null;var e};nr.registerSaveRouter(Ib),nr.registerLoadRouter(Ib);var Ete=function(){function n(){this.indexedDB=sE()}return n.prototype.listModels=function(){return ke(this,void 0,void 0,function(){var e=this;return Se(this,function(t){return[2,new Promise(function(r,s){var o=e.indexedDB.open("tensorflowjs",1);o.onupgradeneeded=function(){return rm(o)},o.onsuccess=function(){var a=o.result,i=a.transaction(Hs,"readonly"),u=i.objectStore(Hs).getAll();u.onsuccess=function(){for(var c={},l=0,h=u.result;l<h.length;l++){var d=h[l];c[d.modelPath]=d.modelArtifactsInfo}r(c)},u.onerror=function(c){return a.close(),s(u.error)},i.oncomplete=function(){return a.close()}},o.onerror=function(a){return s(o.error)}})]})})},n.prototype.removeModel=function(e){return ke(this,void 0,void 0,function(){var t=this;return Se(this,function(r){var s;return e=(s=e).startsWith(Ka.URL_SCHEME)?s.slice(Ka.URL_SCHEME.length):s,[2,new Promise(function(o,a){var i=t.indexedDB.open("tensorflowjs",1);i.onupgradeneeded=function(){return rm(i)},i.onsuccess=function(){var u,c=i.result,l=c.transaction(Hs,"readwrite"),h=l.objectStore(Hs),d=h.get(e);d.onsuccess=function(){if(d.result==null)return c.close(),a(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var p=h.delete(e),f=function(){var m=(u=c.transaction(_o,"readwrite")).objectStore(_o).delete(e);m.onsuccess=function(){return o(d.result.modelArtifactsInfo)},m.onerror=function(g){return a(d.error)}};p.onsuccess=f,p.onerror=function(m){return f(),c.close(),a(d.error)}},d.onerror=function(p){return c.close(),a(d.error)},l.oncomplete=function(){u==null?c.close():u.oncomplete=function(){return c.close()}}},i.onerror=function(u){return a(i.error)}})]})})},n}();if(se().getBool("IS_BROWSER"))try{Ys.registerManager(Ka.URL_SCHEME,new Ete)}catch{}var bs="/",Ma="tensorflowjs_models",oE="info",Rte="model_topology",$te="weight_specs",Ate="weight_data",Dte="model_metadata";function aE(n){return{info:[Ma,n,oE].join(bs),topology:[Ma,n,Rte].join(bs),weightSpecs:[Ma,n,$te].join(bs),weightData:[Ma,n,Ate].join(bs),modelMetadata:[Ma,n,Dte].join(bs)}}function Fte(n){var e=n.split(bs);if(e.length<3)throw new Error("Invalid key format: "+n);return e.slice(1,e.length-1).join(bs)}var Xa=function(){function n(e){if(!se().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=aE(this.modelPath)}return n.prototype.save=function(e){return ke(this,void 0,void 0,function(){var t,r,s;return Se(this,function(o){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Qc(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(a){if(nm)return Buffer.from(a).toString("base64");for(var i=new Uint8Array(a),u="",c=0,l=i.length;c<l;c++)u+=String.fromCharCode(i[c]);return btoa(u)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:s}]}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+s.modelTopologyBytes+", weightSpecsBytes="+s.weightSpecsBytes+", weightDataBytes="+s.weightDataBytes+".")}return[2]})})},n.prototype.load=function(){return ke(this,void 0,void 0,function(){var e,t,r,s,o,a,i;return Se(this,function(u){if((e=JSON.parse(this.LS.getItem(this.keys.info)))==null)throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},(r=JSON.parse(this.LS.getItem(this.keys.topology)))==null)throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=r,(s=JSON.parse(this.LS.getItem(this.keys.weightSpecs)))==null)throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=s,(o=this.LS.getItem(this.keys.modelMetadata))!=null&&(a=JSON.parse(o),t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,t.userDefinedMetadata=a.userDefinedMetadata),(i=this.LS.getItem(this.keys.weightData))==null)throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(c){if(nm){var l=Buffer.from(c,"base64");return l.buffer.slice(l.byteOffset,l.byteOffset+l.byteLength)}for(var h=atob(c),d=new Uint8Array(h.length),p=0;p<h.length;++p)d.set([h.charCodeAt(p)],p);return d.buffer}(i),[2,t]})})},n.URL_SCHEME="localstorage://",n}(),kb=function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Xa.URL_SCHEME)?(e=n.slice(Xa.URL_SCHEME.length),new Xa(e)):null;var e};nr.registerSaveRouter(kb),nr.registerLoadRouter(kb);var Ote=function(){function n(){D(se().getBool("IS_BROWSER"),function(){return"Current environment is not a web browser"}),D(typeof window>"u"||window.localStorage!==void 0,function(){return"Current browser does not appear to support localStorage"}),this.LS=window.localStorage}return n.prototype.listModels=function(){return ke(this,void 0,void 0,function(){var e,t,r,s,o,a;return Se(this,function(i){for(e={},t=Ma+bs,r=bs+oE,s=0;s<this.LS.length;++s)(o=this.LS.key(s)).startsWith(t)&&o.endsWith(r)&&(a=Fte(o),e[a]=JSON.parse(this.LS.getItem(o)));return[2,e]})})},n.prototype.removeModel=function(e){return ke(this,void 0,void 0,function(){var t,r;return Se(this,function(s){var o;if(e=(o=e).startsWith(Xa.URL_SCHEME)?o.slice(Xa.URL_SCHEME.length):o,t=aE(e),this.LS.getItem(t.info)==null)throw new Error("Cannot find model at path '"+e+"'");return r=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,r]})})},n}();if(se().getBool("IS_BROWSER"))try{Ys.registerManager(Xa.URL_SCHEME,new Ote)}catch{}var _te="model",Mte=".json",Lte=".weights.bin";function Sb(n){return new Promise(function(e){return setTimeout(e)}).then(n)}var ef=function(){function n(e){if(!se().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),e!=null&&e.length!==0||(e=_te),this.modelTopologyFileName=e+Mte,this.weightDataFileName=e+Lte}return n.prototype.save=function(e){return ke(this,void 0,void 0,function(){var t,r,s,o,a,i;return Se(this,function(u){switch(u.label){case 0:if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:r},o=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),(a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,a.href=o,[4,Sb(function(){return a.dispatchEvent(new MouseEvent("click"))})];case 2:return u.sent(),e.weightData==null?[3,4]:((i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,i.href=t,[4,Sb(function(){return i.dispatchEvent(new MouseEvent("click"))})]);case 3:u.sent(),u.label=4;case 4:return[2,{modelArtifactsInfo:Qc(e)}]}})})},n.URL_SCHEME="downloads://",n}(),Pte=function(){function n(e){if(e==null||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return n.prototype.load=function(){return ke(this,void 0,void 0,function(){var e,t,r=this;return Se(this,function(s){return e=this.files[0],t=this.files.slice(1),[2,new Promise(function(o,a){var i=new FileReader;i.onload=function(u){var c=JSON.parse(u.target.result),l=c.modelTopology;if(l!=null){t.length===0&&o({modelTopology:l});var h=c.weightsManifest;if(h!=null){var d;try{d=r.checkManifestAndWeightFiles(h,t)}catch(g){return void a(g)}var p=[],f=[],m=[];h.forEach(function(g){g.paths.forEach(function(x){f.push(x),m.push(null)}),p.push.apply(p,g.weights)}),h.forEach(function(g){g.paths.forEach(function(x){var y=new FileReader;y.onload=function(b){var v=b.target.result,w=f.indexOf(x);m[w]=v,m.indexOf(null)===-1&&o({modelTopology:l,weightSpecs:p,weightData:Jy(m),format:c.format,generatedBy:c.generatedBy,convertedBy:c.convertedBy,userDefinedMetadata:c.userDefinedMetadata})},y.onerror=function(b){return a("Failed to weights data from file of path '"+x+"'.")},y.readAsArrayBuffer(d[x])})})}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},i.onerror=function(u){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},i.readAsText(e)})]})})},n.prototype.checkManifestAndWeightFiles=function(e,t){for(var r=[],s=t.map(function(u){return wb(u.name)}),o={},a=0,i=e;a<i.length;a++)i[a].paths.forEach(function(u){var c=wb(u);if(r.indexOf(c)!==-1)throw new Error("Duplicate file basename found in weights manifest: '"+c+"'");if(r.push(c),s.indexOf(c)===-1)throw new Error("Weight file with basename '"+c+"' is not provided.");o[u]=t[s.indexOf(c)]});if(r.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+r.length+") and the number of weight files provided ("+t.length+").");return o},n}();function Nb(n,e,t,r){(function(o){D(o!=null&&Array.isArray(o)&&o.length>0,function(){return"promises must be a none empty array"})})(n),function(o,a){D(o>=0&&o<=1,function(){return"Progress fraction must be in range [0, 1], but got startFraction "+o}),D(a>=0&&a<=1,function(){return"Progress fraction must be in range [0, 1], but got endFraction "+a}),D(a>=o,function(){return"startFraction must be no more than endFraction, but got startFraction "+o+" and endFraction "+a})}(t=t??0,r=r??1);var s=0;return Promise.all(n.map(function(o){return o.then(function(a){var i=t+ ++s/n.length*(r-t);return e(i),a}),o}))}function iE(n,e){return ke(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l;return Se(this,function(h){switch(h.label){case 0:return e==null&&(e={}),t=e.fetchFunc==null?se().platform.fetch:e.fetchFunc,r=n.map(function(d){return t(d,e.requestInit,{isBinary:!0})}),s=0,o=.5,e.onProgress!=null?[3,2]:[4,Promise.all(r)];case 1:return a=h.sent(),[3,4];case 2:return[4,Nb(r,e.onProgress,s,o)];case 3:a=h.sent(),h.label=4;case 4:return i=a.map(function(d){return d.arrayBuffer()}),u=.5,c=1,e.onProgress!=null?[3,6]:[4,Promise.all(i)];case 5:return l=h.sent(),[3,8];case 6:return[4,Nb(i,e.onProgress,u,c)];case 7:l=h.sent(),h.label=8;case 8:return[2,l]}})})}function Tb(n){var e=this;return function(t,r,s){return r===void 0&&(r=""),ke(e,void 0,void 0,function(){var o,a,i,u,c,l,h,d,p,f;return Se(this,function(m){switch(m.label){case 0:if(o=t.map(function(){return!1}),a={},i=s!=null?s.map(function(){return!1}):[],u=[],t.forEach(function(g,x){var y=0;g.weights.forEach(function(b){var v="quantization"in b?b.quantization.dtype:b.dtype,w=tm[v]*be(b.shape),C=function(){o[x]=!0,a[x]==null&&(a[x]=[]),a[x].push({manifestEntry:b,groupOffset:y,sizeBytes:w})};s!=null?s.forEach(function(I,k){I===b.name&&(C(),i[k]=!0)}):C(),u.push(b.name),y+=w})}),!i.every(function(g){return g}))throw c=s.filter(function(g,x){return!i[x]}),new Error("Could not find weights in manifest with names: "+c.join(", ")+`. 
Manifest JSON has weights with names: `+u.join(", ")+".");return l=o.reduce(function(g,x,y){return x&&g.push(y),g},[]),h=[],l.forEach(function(g){t[g].paths.forEach(function(x){var y=r+(r.endsWith("/")?"":"/")+x;h.push(y)})}),[4,n(h)];case 1:return d=m.sent(),p={},f=0,l.forEach(function(g){for(var x=t[g].paths.length,y=0,b=0;b<x;b++)y+=d[f+b].byteLength;for(var v=new ArrayBuffer(y),w=new Uint8Array(v),C=0,I=0;I<x;I++){var k=new Uint8Array(d[f+I]);w.set(k,C),C+=k.byteLength}a[g].forEach(function(S){var N=rE(v.slice(S.groupOffset,S.groupOffset+S.sizeBytes),[S.manifestEntry]);for(var E in N)p[E]=N[E]}),f+=x}),[2,p]}})})}}nr.registerSaveRouter(function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ef.URL_SCHEME)?function(e){return e===void 0&&(e="model"),new ef(e)}(n.slice(ef.URL_SCHEME.length)):null});var uE=function(){function n(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"}),this.fetch=t.fetchFunc):this.fetch=se().platform.fetch,D(e!=null&&e.length>0,function(){return"URL path for http must not be null, undefined or empty."}),Array.isArray(e)&&D(e.length===2,function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."}),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return n.prototype.save=function(e){return ke(this,void 0,void 0,function(){var t,r,s,o;return Se(this,function(a){switch(a.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:r},t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((o=a.sent()).ok)return[2,{modelArtifactsInfo:Qc(e),responses:[o]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+o.status+".")}})})},n.prototype.load=function(){return ke(this,void 0,void 0,function(){var e,t,r,s,o,a,i,u,c,l,h,d;return Se(this,function(p){switch(p.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=p.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");p.label=2;case 2:return p.trys.push([2,4,,5]),[4,e.json()];case 3:return t=p.sent(),[3,5];case 4:throw p.sent(),r="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?r+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":r+=" Please make sure the server is serving valid JSON for this request.",new Error(r);case 5:if(s=t.modelTopology,o=t.weightsManifest,a=t.generatedBy,i=t.convertedBy,u=t.format,c=t.userDefinedMetadata,s==null&&o==null)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return o==null?[3,7]:[4,this.loadWeights(o)];case 6:d=p.sent(),l=d[0],h=d[1],p.label=7;case 7:return[2,{modelTopology:s,weightSpecs:l,weightData:h,userDefinedMetadata:c,generatedBy:a,convertedBy:i,format:u}]}})})},n.prototype.loadWeights=function(e){return ke(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l,h,d;return Se(this,function(p){switch(p.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,r=function(f){var m=f.lastIndexOf("/"),g=f.lastIndexOf("?"),x=f.substring(0,m),y=g>m?f.substring(g):"";return[x+"/",y]}(t),s=r[0],o=r[1],a=this.weightPathPrefix||s,i=[],u=0,c=e;u<c.length;u++)l=c[u],i.push.apply(i,l.weights);return h=[],e.forEach(function(f){f.paths.forEach(function(m){h.push(a+m+o)})}),[4,iE(h,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return d=p.sent(),[2,[i,Jy(d)]]}})})},n.URL_SCHEME_REGEX=/^https?:\/\//,n}();function sm(n){return n.match(uE.URL_SCHEME_REGEX)!=null}var Eb=function(n,e){return typeof fetch>"u"?null:(Array.isArray(n)?n.every(function(t){return sm(t)}):sm(n))?om(n,{onProgress:e}):null};function om(n,e){return new uE(n,e)}nr.registerSaveRouter(Eb),nr.registerLoadRouter(Eb);var tf=function(){function n(e){this.modelArtifacts=e}return n.prototype.load=function(){return ke(this,void 0,void 0,function(){return Se(this,function(e){return[2,this.modelArtifacts]})})},n}(),Bte=function(){function n(e){this.saveHandler=e}return n.prototype.save=function(e){return ke(this,void 0,void 0,function(){return Se(this,function(t){return[2,this.saveHandler(e)]})})},n}(),ji=Object.freeze({browserFiles:function(n){return new Pte(n)},browserHTTPRequest:function(n,e){return om(n,e)},concatenateArrayBuffers:Jy,decodeWeights:rE,encodeWeights:function(n,e){return ke(this,void 0,void 0,function(){var t,r,s,o,a,i=this;return Se(this,function(u){switch(u.label){case 0:for(t=[],r=[],s=Array.isArray(n)?n.map(function(c){return c.name}):Object.keys(n),o=function(c){var l=s[c],h=Array.isArray(n)?n[c].tensor:n[l];if(h.dtype!=="float32"&&h.dtype!=="int32"&&h.dtype!=="bool"&&h.dtype!=="string")throw new Error("Unsupported dtype in weight '"+l+"': "+h.dtype);var d={name:l,shape:h.shape,dtype:h.dtype};if(h.dtype==="string"){var p=new Promise(function(f){return ke(i,void 0,void 0,function(){var m,g,x,y,b,v,w;return Se(this,function(C){switch(C.label){case 0:return[4,h.bytes()];case 1:for(m=C.sent(),g=m.reduce(function(I,k){return I+k.length},0)+yh*m.length,x=new Uint8Array(g),y=0,b=0;b<m.length;b++)v=m[b],w=new Uint8Array(new Uint32Array([v.length]).buffer),x.set(w,y),y+=yh,x.set(v,y),y+=v.length;return f(x),[2]}})})});r.push(p)}else r.push(h.data());e!=null&&(d.group=e),t.push(d)},a=0;a<s.length;++a)o(a);return[4,Promise.all(r)];case 1:return[2,{data:Tte(u.sent()),specs:t}]}})})},fromMemory:function(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new tf(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new tf({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new tf({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))},getLoadHandlers:function(n,e){return nr.getLoadHandlers(n,e)},getModelArtifactsInfoForJSON:Qc,getSaveHandlers:function(n){return nr.getSaveHandlers(n)},http:om,isHTTPScheme:sm,loadWeights:function(n,e,t,r){return e===void 0&&(e=""),ke(this,void 0,void 0,function(){return Se(this,function(s){return[2,Tb(function(o){return iE(o,{requestInit:r})})(n,e,t)]})})},registerLoadRouter:function(n){return nr.registerLoadRouter(n)},registerSaveRouter:function(n){return nr.registerSaveRouter(n)},weightsLoaderFactory:Tb,withSaveHandler:function(n){return new Bte(n)},copyModel:function(n,e){return ke(this,void 0,void 0,function(){return Se(this,function(t){return[2,Cb(n,e,!1)]})})},listModels:function(){return ke(this,void 0,void 0,function(){var n,e,t,r,s,o,a;return Se(this,function(i){switch(i.label){case 0:n=Ys.getSchemes(),e={},t=0,r=n,i.label=1;case 1:return t<r.length?(s=r[t],[4,Ys.getManager(s).listModels()]):[3,4];case 2:for(a in o=i.sent())e[s+qa+a]=o[a];i.label=3;case 3:return t++,[3,1];case 4:return[2,e]}})})},moveModel:function(n,e){return ke(this,void 0,void 0,function(){return Se(this,function(t){return[2,Cb(n,e,!0)]})})},removeModel:function(n){return ke(this,void 0,void 0,function(){var e;return Se(this,function(t){return e=Cl(n),[2,Ys.getManager(e.scheme).removeModel(e.path)]})})}}),Ra;V({confusionMatrix_:function(n,e,t){var r=A(n,"labels","confusionMatrix"),s=A(e,"predictions","confusionMatrix");D(t==null||t>0&&Number.isInteger(t),function(){return"If provided, numClasses must be a positive integer, but got "+t}),D(r.rank===1,function(){return"Expected the rank of labels to be 1, but got "+r.rank}),D(s.rank===1,function(){return"Expected the rank of predictions to be 1, but got "+s.rank}),D(r.shape[0]===s.shape[0],function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+s.shape[0]+". Labels and predictions should have the same number of elements."}),D(t>0&&Number.isInteger(t),function(){return"numClasses is required to be a positive integer, but got "+t});var o=Tu(r.asType("int32"),t),a=Tu(s.asType("int32"),t);return o.transpose().matMul(a).asType("int32")}});V({fromPixels_:function(n,e){if(e===void 0&&(e=3),e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var t=!1,r=!1,s=!1,o=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else{if(n.getContext==null)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+n.constructor.name);a=!0}if(s&&s&&n.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(kS("FromPixels",G.backendName)!=null)return G.runKernel("FromPixels",{pixels:n},{numChannels:e});var i,u,c=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],l=c[0],h=c[1];if(a?i=n.getContext("2d").getImageData(0,0,l,h).data:r||t?i=n.data:(o||s)&&(Ra==null&&(Ra=document.createElement("canvas").getContext("2d")),Ra.canvas.width=l,Ra.canvas.height=h,Ra.drawImage(n,0,0,l,h),i=Ra.getImageData(0,0,l,h).data),e===4)u=new Int32Array(i);else{var d=l*h;u=new Int32Array(d*e);for(var p=0;p<d;p++)for(var f=0;f<e;++f)u[p*e+f]=i[4*p+f]}return US(u,[h,l,e],"int32")}});var zte=function(){function n(){}return n.prototype.getClassName=function(){return this.constructor.className},n.fromConfig=function(e,t){return new e(t)},n}(),Vte=function(){function n(){this.classNameMap={}}return n.getMap=function(){return n.instance==null&&(n.instance=new n),n.instance},n.register=function(e){n.getMap().classNameMap[e.className]=[e,e.fromConfig]},n}();function Ca(n){D(n.className!=null,function(){return"Class being registered does not have the static className property defined."}),D(typeof n.className=="string",function(){return"className is required to be a string, but got type "+typeof n.className}),D(n.className.length>0,function(){return"Class being registered has an empty-string as its className, which is disallowed."}),Vte.register(n)}var Ia=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return Wr(e,n),e.prototype.minimize=function(t,r,s){r===void 0&&(r=!1);var o=this.computeGradients(t,s),a=o.value,i=o.grads;if(s!=null){var u=s.map(function(c){return{name:c.name,tensor:i[c.name]}});this.applyGradients(u)}else this.applyGradients(i);return Un(i),r?a:(a.dispose(),null)},Object.defineProperty(e.prototype,"iterations",{get:function(){return this.iterations_==null&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),e.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},e.prototype.computeGradients=function(t,r){return WQ(t,r)},e.prototype.dispose=function(){this.iterations_!=null&&Un(this.iterations_)},e.prototype.saveIterations=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){return this.iterations_==null&&(this.iterations_=0),[2,{name:"iter",tensor:ve(this.iterations_,"int32")}]})})},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){throw new Error("getWeights() is not implemented for this optimizer yet.")})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())})})},e.prototype.extractIterations=function(t){return ke(this,void 0,void 0,function(){var r;return Se(this,function(s){switch(s.label){case 0:return r=this,[4,t[0].tensor.data()];case 1:return r.iterations_=s.sent()[0],[2,t.slice(1)]}})})},e}(zte);Object.defineProperty(Ia,Symbol.hasInstance,{value:function(n){return n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null}});var Wte=function(n){function e(t,r,s){s===void 0&&(s=null);var o=n.call(this)||this;return o.learningRate=t,o.rho=r,o.epsilon=s,o.accumulatedGrads=[],o.accumulatedUpdates=[],s==null&&(o.epsilon=G.backend.epsilon()),o}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=G.registeredVariables[s];r.accumulatedGrads[o]==null&&(r.accumulatedGrads[o]={originalName:s+"/accum_grad",variable:je(function(){return Ze(a).variable(!1)})}),r.accumulatedUpdates[o]==null&&(r.accumulatedUpdates[o]={originalName:s+"/accum_var",variable:je(function(){return Ze(a).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedGrads[o].variable,c=r.accumulatedUpdates[o].variable;je(function(){var l=u.mul(r.rho).add(i.square().mul(1-r.rho)),h=c.add(r.epsilon).sqrt().div(u.add(r.epsilon).sqrt()).mul(i),d=c.mul(r.rho).add(h.square().mul(1-r.rho));u.assign(l),c.assign(d);var p=h.mul(-r.learningRate).add(a);a.assign(p)})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedUpdates!=null&&(Un(this.accumulatedGrads.map(function(t){return t.variable})),Un(this.accumulatedUpdates.map(function(t){return t.variable})))},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){var t;return Se(this,function(r){switch(r.label){case 0:return t=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){var r;return Se(this,function(s){switch(s.label){case 0:return[4,this.extractIterations(t)];case 1:return t=s.sent(),r=t.length/2,this.accumulatedGrads=t.slice(0,r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.accumulatedUpdates=t.slice(r,2*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},e.fromConfig=function(t,r){return new t(r.learningRate,r.rho,r.epsilon)},e.className="Adadelta",e}(Ia);Ca(Wte);var Ute=function(n){function e(t,r){r===void 0&&(r=.1);var s=n.call(this)||this;return s.learningRate=t,s.initialAccumulatorValue=r,s.accumulatedGrads=[],s}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=G.registeredVariables[s];r.accumulatedGrads[o]==null&&(r.accumulatedGrads[o]={originalName:s+"/accumulator",variable:je(function(){return Jd(a.shape,r.initialAccumulatorValue).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedGrads[o].variable;je(function(){var c=u.add(i.square());u.assign(c);var l=i.div(c.add(G.backend.epsilon()).sqrt()).mul(-r.learningRate).add(a);a.assign(l)})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedGrads!=null&&Un(this.accumulatedGrads.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulatedGrads.map(function(r){return{name:r.originalName,tensor:r.variable}}))]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),this.accumulatedGrads=t.map(function(s){return{originalName:s.name,variable:s.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},e.fromConfig=function(t,r){return new t(r.learningRate,r.initialAccumulatorValue)},e.className="Adagrad",e}(Ia);Ca(Ute);var Gte=function(n){function e(t,r,s,o){o===void 0&&(o=null);var a=n.call(this)||this;return a.learningRate=t,a.beta1=r,a.beta2=s,a.epsilon=o,a.accumulatedFirstMoment=[],a.accumulatedSecondMoment=[],je(function(){a.accBeta1=ve(r).variable(),a.accBeta2=ve(s).variable()}),o==null&&(a.epsilon=G.backend.epsilon()),a}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this,s=Array.isArray(t)?t.map(function(o){return o.name}):Object.keys(t);je(function(){var o=Is(1,r.accBeta1),a=Is(1,r.accBeta2);s.forEach(function(i,u){var c=G.registeredVariables[i];r.accumulatedFirstMoment[u]==null&&(r.accumulatedFirstMoment[u]={originalName:i+"/m",variable:je(function(){return Ze(c).variable(!1)})}),r.accumulatedSecondMoment[u]==null&&(r.accumulatedSecondMoment[u]={originalName:i+"/v",variable:je(function(){return Ze(c).variable(!1)})});var l=Array.isArray(t)?t[u].tensor:t[i];if(l!=null){var h=r.accumulatedFirstMoment[u].variable,d=r.accumulatedSecondMoment[u].variable,p=h.mul(r.beta1).add(l.mul(1-r.beta1)),f=d.mul(r.beta2).add(l.square().mul(1-r.beta2)),m=p.div(o),g=f.div(a);h.assign(p),d.assign(f);var x=m.div(g.sqrt().add(r.epsilon)).mul(-r.learningRate).add(c);c.assign(x)}}),r.accBeta1.assign(r.accBeta1.mul(r.beta1)),r.accBeta2.assign(r.accBeta2.mul(r.beta2))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Un(this.accumulatedFirstMoment.map(function(t){return t.variable})),this.accumulatedSecondMoment!=null&&Un(this.accumulatedSecondMoment.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){var t;return Se(this,function(r){switch(r.label){case 0:return t=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){var r,s=this;return Se(this,function(o){switch(o.label){case 0:return[4,this.extractIterations(t)];case 1:return t=o.sent(),je(function(){s.accBeta1.assign(Nu(s.beta1,s.iterations_+1)),s.accBeta2.assign(Nu(s.beta2,s.iterations_+1))}),r=t.length/2,this.accumulatedFirstMoment=t.slice(0,r).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),this.accumulatedSecondMoment=t.slice(r,2*r).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},e.fromConfig=function(t,r){return new t(r.learningRate,r.beta1,r.beta2,r.epsilon)},e.className="Adam",e}(Ia);Ca(Gte);var Hte=function(n){function e(t,r,s,o,a){o===void 0&&(o=null),a===void 0&&(a=0);var i=n.call(this)||this;return i.learningRate=t,i.beta1=r,i.beta2=s,i.epsilon=o,i.decay=a,i.accumulatedFirstMoment=[],i.accumulatedWeightedInfNorm=[],je(function(){i.iteration=ve(0).variable(),i.accBeta1=ve(r).variable()}),o==null&&(i.epsilon=G.backend.epsilon()),i}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this,s=Array.isArray(t)?t.map(function(o){return o.name}):Object.keys(t);je(function(){var o=Is(1,r.accBeta1),a=As(-r.learningRate,r.iteration.mul(r.decay).add(1));s.forEach(function(i,u){var c=G.registeredVariables[i];r.accumulatedFirstMoment[u]==null&&(r.accumulatedFirstMoment[u]={originalName:i+"/m",variable:Ze(c).variable(!1)}),r.accumulatedWeightedInfNorm[u]==null&&(r.accumulatedWeightedInfNorm[u]={originalName:i+"/v",variable:Ze(c).variable(!1)});var l=Array.isArray(t)?t[u].tensor:t[i];if(l!=null){var h=r.accumulatedFirstMoment[u].variable,d=r.accumulatedWeightedInfNorm[u].variable,p=h.mul(r.beta1).add(l.mul(1-r.beta1)),f=d.mul(r.beta2),m=l.abs(),g=f.maximum(m);h.assign(p),d.assign(g);var x=a.div(o).mul(p.div(g.add(r.epsilon))).add(c);c.assign(x)}}),r.iteration.assign(r.iteration.add(1)),r.accBeta1.assign(r.accBeta1.mul(r.beta1))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Un(this.accumulatedFirstMoment.map(function(t){return t.variable})),this.accumulatedWeightedInfNorm!=null&&Un(this.accumulatedWeightedInfNorm.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){throw new Error("getWeights() is not implemented for Adamax yet.")})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){throw new Error("setWeights() is not implemented for Adamax yet.")})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},e.fromConfig=function(t,r){return new t(r.learningRate,r.beta1,r.beta2,r.epsilon,r.decay)},e.className="Adamax",e}(Ia);Ca(Hte);var cE=function(n){function e(t){var r=n.call(this)||this;return r.learningRate=t,r.setLearningRate(t),r}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=Array.isArray(t)?t[o].tensor:t[s];if(a!=null){var i=G.registeredVariables[s];je(function(){var u=r.c.mul(a).add(i);i.assign(u)})}}),this.incrementIterations()},e.prototype.setLearningRate=function(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=hQ(ve(-t))},e.prototype.dispose=function(){this.c.dispose()},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()]]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:if((t=r.sent()).length!==0)throw new Error("SGD optimizer does not have settable weights.");return[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate}},e.fromConfig=function(t,r){return new t(r.learningRate)},e.className="SGD",e}(Ia);Ca(cE);var jte=function(n){function e(t,r,s){s===void 0&&(s=!1);var o=n.call(this,t)||this;return o.learningRate=t,o.momentum=r,o.useNesterov=s,o.accumulations=[],o.m=ve(o.momentum),o}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=G.registeredVariables[s];r.accumulations[o]==null&&(r.accumulations[o]={originalName:s+"/momentum",variable:je(function(){return Ze(a).variable(!1)})});var i=r.accumulations[o].variable,u=Array.isArray(t)?t[o].tensor:t[s];u!=null&&je(function(){var c,l=r.m.mul(i).add(u);c=r.useNesterov?r.c.mul(u.add(l.mul(r.m))).add(a):r.c.mul(l).add(a),i.assign(l),a.assign(c)})}),this.incrementIterations()},e.prototype.dispose=function(){this.m.dispose(),this.accumulations!=null&&Un(this.accumulations.map(function(t){return t.variable}))},e.prototype.setMomentum=function(t){this.momentum=t},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){return Se(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulations.map(function(r){return{name:r.originalName,tensor:r.variable}}))]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){return Se(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),this.accumulations=t.map(function(s){return{originalName:s.name,variable:s.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},e.fromConfig=function(t,r){return new t(r.learningRate,r.momentum,r.useNesterov)},e.className="Momentum",e}(cE);Ca(jte);var qte=function(n){function e(t,r,s,o,a){r===void 0&&(r=.9),s===void 0&&(s=0),o===void 0&&(o=null),a===void 0&&(a=!1);var i=n.call(this)||this;if(i.learningRate=t,i.decay=r,i.momentum=s,i.epsilon=o,i.accumulatedMeanSquares=[],i.accumulatedMoments=[],i.accumulatedMeanGrads=[],i.centered=a,o==null&&(i.epsilon=G.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.");return i}return Wr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=G.registeredVariables[s];r.accumulatedMeanSquares[o]==null&&(r.accumulatedMeanSquares[o]={originalName:s+"/rms",variable:je(function(){return Ze(a).variable(!1)})}),r.accumulatedMoments[o]==null&&(r.accumulatedMoments[o]={originalName:s+"/momentum",variable:je(function(){return Ze(a).variable(!1)})}),r.accumulatedMeanGrads[o]==null&&r.centered&&(r.accumulatedMeanGrads[o]={originalName:s+"/mg",variable:je(function(){return Ze(a).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedMeanSquares[o].variable,c=r.accumulatedMoments[o].variable;je(function(){var l=u.mul(r.decay).add(i.square().mul(1-r.decay));if(r.centered){var h=r.accumulatedMeanGrads[o].variable,d=h.mul(r.decay).add(i.mul(1-r.decay)),p=c.mul(r.momentum).add(i.mul(r.learningRate).div(l.sub(d.square().add(r.epsilon)).sqrt()));u.assign(l),h.assign(d),c.assign(p);var f=a.sub(p);a.assign(f)}else{var m=u.mul(r.decay).add(i.square().mul(1-r.decay));p=c.mul(r.momentum).add(i.mul(r.learningRate).div(m.add(r.epsilon).sqrt())),u.assign(m),c.assign(p),f=a.sub(p),a.assign(f)}})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedMeanSquares!=null&&Un(this.accumulatedMeanSquares.map(function(t){return t.variable})),this.accumulatedMeanGrads!=null&&this.centered&&Un(this.accumulatedMeanGrads.map(function(t){return t.variable})),this.accumulatedMoments!=null&&Un(this.accumulatedMoments.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return ke(this,void 0,void 0,function(){var t;return Se(this,function(r){switch(r.label){case 0:return t=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&t.push.apply(t,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return ke(this,void 0,void 0,function(){var r;return Se(this,function(s){switch(s.label){case 0:return[4,this.extractIterations(t)];case 1:return t=s.sent(),r=this.centered?t.length/3:t.length/2,this.accumulatedMeanSquares=t.slice(0,r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.accumulatedMoments=t.slice(r,2*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.centered&&(this.accumulatedMeanGrads=t.slice(2*r,3*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}})),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},e.fromConfig=function(t,r){return new t(r.learningRate,r.decay,r.momentum,r.epsilon,r.centered)},e.className="RMSProp",e}(Ia);Ca(qte);It.prototype.add=function(n){return $s(this,n)},It.prototype.broadcastTo=function(n){return uT(this,n)},It.prototype.div=function(n){return As(this,n)},It.prototype.divNoNan=function(n){return Dy(this,n)},It.prototype.squaredDifference=function(n){return My(this,n)},It.prototype.tile=function(n){return Vo(this,n)},It.prototype.oneHot=function(n,e,t){return e===void 0&&(e=1),t===void 0&&(t=0),Tu(this,n,e,t)},It.prototype.transpose=function(n){return hr(this,n)},It.prototype.pad=function(n,e){return bo(this,n,e)},It.prototype.batchNorm=function(n,e,t,r,s){return Ai(this,n,e,t,r,s)},re=dte;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tr,Rb,am=function(){return(am=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n}).apply(this,arguments)};function Qs(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function Zs(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Tr||(Tr={})),function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))}(Rb||(Rb={}));var Kte={};function lE(n){return Kte[n]}function T(n,e,t,r){var s=e.inputParams[n];if(s&&s.inputIndexStart!==void 0){var o=s.inputIndexStart,a=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return An(e.inputNames[s.inputIndexStart],t,r);if(s.type==="tensors")return e.inputNames.slice(o,a).map(function(c){return An(c,t,r)});var i=Array.prototype.slice.call(An(e.inputNames.slice(o)[0],t,r).dataSync());return s.type==="number"?i[0]:i}var u=e.attrParams[n];return u&&u.value}function An(n,e,t){var r=Xn(n),s=r[0],o=r[1],a=t.currentContextIds.find(function(i){return!!e[vh(s,i)]});return a!==void 0?e[vh(s,a)][o]:void 0}function Xte(n,e,t){return e[vh(n,t.currentContextId)]}function Ya(n,e){var t=Xn(n),r=t[0],s=t[1];return[vh(r,e&&e.currentContextId),s]}function vh(n,e){return e?n+"-"+e:n}function Xn(n){var e=n.lastIndexOf(":");return e===-1?[n,0]:[n.substring(0,e),Number(n.substring(e+1))]}function nf(n,e){for(var t=[],r=0;r<n.length;r+=e)t.push(n.slice(r,r+e));return t}var Yte=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Qte=Object.freeze({json:Yte}),Zte=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Jte=Object.freeze({json:Zte}),ene=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}],tne=Object.freeze({json:ene}),nne=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}],rne=Object.freeze({json:nne}),sne=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],one=Object.freeze({json:sne}),ane=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ine=Object.freeze({json:ane}),une=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}],cne=Object.freeze({json:une}),lne=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],hne=Object.freeze({json:lne}),dne=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],pne=Object.freeze({json:dne}),fne=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mne=Object.freeze({json:fne}),gne=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xne=Object.freeze({json:gne}),yne=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],vne=Object.freeze({json:yne}),bne=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}],wne=Object.freeze({json:bne}),Cne=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Ine=Object.freeze({json:Cne}),kne=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Sne=Object.freeze({json:kne}),Nne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}],Tne=Object.freeze({json:Nne}),Ene=function(){function n(){var e=[Qte,Jte,tne,rne,one,ine,cne,mne,pne,hne,xne,vne,wne,Ine,Sne,Tne],t=[].concat.apply([],e.map(function(r){return r.json}));this.opMappers=t.reduce(function(r,s){return r[s.tfOpName]=s,r},{})}return Object.defineProperty(n,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),n.prototype.transformGraph=function(e,t){var r=this;t===void 0&&(t={});var s=[],o=[],a=e.node.reduce(function(d,p){return d[p.name]=r.mapNode(p),p.op.startsWith("Placeholder")&&s.push(d[p.name]),p.op==="Const"&&o.push(d[p.name]),d},{}),i=[],u=[],c={},l={};t!=null&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var h=Object.keys(a);return h.forEach(function(d){var p=a[d];p.inputNames.forEach(function(f){var m=Ya(f)[0];p.inputs.push(a[m]),a[m].children.push(p)})}),Object.keys(l).length===0?h.forEach(function(d){var p=a[d];p.children.length===0&&u.push(p)}):Object.keys(l).forEach(function(d){var p=Ya(d)[0],f=a[p];f!=null&&(f.signatureKey=l[d],u.push(f))}),Object.keys(c).length>0?Object.keys(c).forEach(function(d){var p=Ya(d)[0],f=a[p];f&&(f.signatureKey=c[d],i.push(f))}):i=s,{nodes:a,inputs:i,outputs:u,weights:o,placeholders:s,signature:t}},n.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce(function(t,r){return t[e[r].name]=r,t},{})},n.prototype.mapNode=function(e){var t=lE(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});var r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(function(s){return s.startsWith("^")?s.substr(1):s}),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(r.inputParams=t.inputs.reduce(function(s,o){return s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s},{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce(function(s,o){var a=o.type,i=void 0;switch(o.type){case"string":(i=im(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=im(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":(i=fm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=fm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":(i=cm(e.attr,o.tfName,o.defaultValue||0))===void 0&&o.tfDeprecatedName&&(i=cm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":(i=pm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=pm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":(i=um(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=um(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":(i=gm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=gm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":(i=dm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=dm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":(i=mm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=mm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":(i=lm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=lm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":(i=hm(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=hm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+o.type+" for op: "+e.op)}return s[o.name]={value:i,type:a},s},{})),r},n}();function Rne(n){var e=se().global;if(e.atob!==void 0)return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function hE(n,e){var t=Array.isArray(n)?String.fromCharCode.apply(null,n):Rne(n);return e?t:t.toLowerCase()}function im(n,e,t,r){r===void 0&&(r=!1);var s=n[e];return s!=null?hE(s.s,r):t}function um(n,e,t){var r=n[e];return r?r.b:t}function cm(n,e,t){var r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function dE(n){switch(typeof n=="string"&&(n=Tr[n]),n){case Tr.DT_FLOAT:return"float32";case Tr.DT_INT32:case Tr.DT_INT64:case Tr.DT_INT8:case Tr.DT_UINT8:return"int32";case Tr.DT_BOOL:return"bool";case Tr.DT_DOUBLE:return"float32";case Tr.DT_STRING:return"string";default:return null}}function lm(n,e,t){var r=n[e];return r&&r.type?dE(r.type):t}function hm(n,e,t){var r=n[e];return r&&r.list&&r.list.type?r.list.type.map(function(s){return dE(s)}):t}function pE(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(function(e){return typeof e.size=="number"?e.size:parseInt(e.size,10)}):[]}function dm(n,e,t){var r=n[e];return r&&r.shape?pE(r.shape):t}function pm(n,e,t){var r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(function(s){return typeof s=="number"?s:parseInt(s,10)}):t}function fm(n,e,t,r){r===void 0&&(r=!1);var s=n[e];return s&&s.list&&s.list.s?s.list.s.map(function(o){return hE(o,r)}):t}function mm(n,e,t){var r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(function(s){return pE(s)}):t}function gm(n,e,t){var r=n[e];return r&&r.list&&r.list.b?r.list.b:t}var $ne=function(){function n(e,t,r){var s=this;this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(function(o){return s.getInput(o)}),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce(function(o,a){return o[a]=s.getAttr(a),o},{}))}return n.prototype.getInput=function(e){return An(e,this.tensorMap,this.context)},n.prototype.getAttr=function(e,t){var r=this.node.rawAttrs[e];if(r.tensor!=null)return An(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return cm(this.node.rawAttrs,e,t);if(r.s!=null)return im(this.node.rawAttrs,e,t);if(r.b!=null)return um(this.node.rawAttrs,e,t);if(r.shape!=null)return dm(this.node.rawAttrs,e,t);if(r.type!=null)return lm(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return pm(this.node.rawAttrs,e,t);if(r.list.s!=null)return fm(this.node.rawAttrs,e,t);if(r.list.shape!=null)return mm(this.node.rawAttrs,e,t);if(r.list.b!=null)return gm(this.node.rawAttrs,e,t);if(r.list.type!=null)return hm(this.node.rawAttrs,e,t)}return t},n}(),Ane=function(n,e,t){switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[$s(T("a",n,e,t),T("b",n,e,t))];case"AddN":return[nT(T("tensors",n,e,t))];case"FloorMod":case"Mod":return[$N(T("a",n,e,t),T("b",n,e,t))];case"Mul":return[Ot(T("a",n,e,t),T("b",n,e,t))];case"RealDiv":case"Div":return[As(T("a",n,e,t),T("b",n,e,t))];case"DivNoNan":return[Dy(T("a",n,e,t),T("b",n,e,t))];case"FloorDiv":return[by(T("a",n,e,t),T("b",n,e,t))];case"Sub":return[Is(T("a",n,e,t),T("b",n,e,t))];case"Minimum":return[wy(T("a",n,e,t),T("b",n,e,t))];case"Maximum":return[sp(T("a",n,e,t),T("b",n,e,t))];case"Pow":return[Nu(T("a",n,e,t),T("b",n,e,t))];case"SquaredDifference":return[My(T("a",n,e,t),T("b",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Dne=function(n,e,t){switch(n.op){case"Abs":case"ComplexAbs":return[nN(T("x",n,e,t))];case"Acos":return[rN(T("x",n,e,t))];case"Acosh":return[sN(T("x",n,e,t))];case"Asin":return[oN(T("x",n,e,t))];case"Asinh":return[aN(T("x",n,e,t))];case"Atan":return[iN(T("x",n,e,t))];case"Atan2":return[RN(T("x",n,e,t),T("y",n,e,t))];case"Atanh":return[uN(T("x",n,e,t))];case"Ceil":return[cN(T("x",n,e,t))];case"Complex":return[tn(T("real",n,e,t),T("imag",n,e,t))];case"Cos":return[hN(T("x",n,e,t))];case"Cosh":return[dN(T("x",n,e,t))];case"Elu":return[Wy(T("x",n,e,t))];case"Erf":return[pN(T("x",n,e,t))];case"Exp":return[fN(T("x",n,e,t))];case"Expm1":return[mN(T("x",n,e,t))];case"Floor":return[gN(T("x",n,e,t))];case"Log":return[xN(T("x",n,e,t))];case"Log1p":return[yN(T("x",n,e,t))];case"Imag":return[Ar(T("x",n,e,t))];case"Neg":return[rp(T("x",n,e,t))];case"Reciprocal":return[vN(T("x",n,e,t))];case"Real":return[Jn(T("x",n,e,t))];case"Relu":return[Gy(T("x",n,e,t))];case"Round":return[bN(T("x",n,e,t))];case"Selu":return[UT(T("x",n,e,t))];case"Sigmoid":return[wN(T("x",n,e,t))];case"Sin":return[IN(T("x",n,e,t))];case"Sign":return[CN(T("x",n,e,t))];case"Sinh":return[kN(T("x",n,e,t))];case"Softplus":return[SN(T("x",n,e,t))];case"Sqrt":return[NN(T("x",n,e,t))];case"Square":return[_y(T("x",n,e,t))];case"Tanh":return[EN(T("x",n,e,t))];case"Tan":return[TN(T("x",n,e,t))];case"Relu6":case"ClipByValue":return[lN(T("x",n,e,t),T("clipValueMin",n,e,t),T("clipValueMax",n,e,t))];case"Rsqrt":return[vy(An(n.inputNames[0],e,t))];case"Prod":return[Vy(T("x",n,e,t),T("axes",n,e,t))];case"LeakyRelu":return[VT(T("x",n,e,t),T("alpha",n,e,t))];case"Prelu":return[Uy(T("x",n,e,t),T("alpha",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Fne=function(){function n(e,t,r,s,o,a,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.id=n.nextId++}return Object.defineProperty(n.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),n.prototype.clearAndClose=function(){this.tensors.forEach(function(e){return e.tensor.dispose()}),this.tensors=[],this.closed_=!0},n.prototype.size=function(){return this.tensors.length},n.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},n.prototype.readMany=function(e){var t=this;return e.map(function(r){return t.read(r)})},n.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+`,
          because the value dtype is `+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(this.size()!==0||this.elementShape!=null&&this.elementShape.length!==0||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),r&&r.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(r&&r.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");r.tensor=t,r.written=!0,this.tensors[e]=r},n.prototype.writeMany=function(e,t){var r=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach(function(s,o){return r.write(s,t[o])})},n.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var r=0;r<this.size();r++)e.push(r)}if(e.length===0)return nn([],[0].concat(this.elementShape));var s=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Rs(s,0)},n.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(this.size()===0)return nn([],[0].concat(this.elementShape));for(var t=[],r=0;r<this.size();r++)t.push(r);var s=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+s[0].shape+")"),wr(s,0)},n.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var r=Math.max.apply(Math,e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error("Max index must be < array size ("+r+"  vs. "+this.maxSize+")");this.writeMany(e,Kc(t,0))},n.prototype.split=function(e,t){var r=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var s=0,o=e.map(function(l){return s+=l});if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        `+s+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var a=s===0?0:t.size/s,i=[];je(function(){t=t.reshape([1,s,a]);for(var l=0;l<e.length;++l){var h=[0,l===0?0:o[l-1],0],d=[1,e[l],a];i[l]=cs(t,h,d).reshape(r.elementShape)}return i});for(var u=[],c=0;c<e.length;c++)u[c]=c;this.writeMany(u,i)},n.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,r){r===void 0&&(r=""),oo.assert(this.shapesEqualAllowUndefinedSize(e,t),function(){return r+" Shapes "+e+" and "+t+" must match"})},n.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==-1&&t[r]!==-1&&e[r]!==t[r])return!1;return!0},n.nextId=0,n}(),One=void 0,_ne=function(n,e,t){return Qs(One,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v,w,C,I,k,S,N,E,R,_,O,F,L,B,M,z,H,X;return Zs(this,function(Z){switch(Z.label){case 0:switch(n.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[T("pred",n,e,t).clone()]];case 2:return r=T("pred",n,e,t),s=T("data",n,e,t),[4,r.data()];case 3:return[2,Z.sent()[0]?[void 0,s.clone()]:[s.clone(),void 0]];case 4:return[2,(o=n.inputNames.find(function(ee){return An(ee,e,t)!==void 0}))?[An(o,e,t).clone()]:void 0];case 5:return a=T("frameName",n,e,t),i=T("tensor",n,e,t),t.enterFrame(a),[2,[i.clone()]];case 6:return u=T("tensor",n,e,t),t.exitFrame(),[2,[u.clone()]];case 7:return c=T("tensor",n,e,t),t.nextIteration(),[2,[c.clone()]];case 8:return l=T("size",n,e,t),h=T("dtype",n,e,t),d=T("elementShape",n,e,t),p=T("dynamicSize",n,e,t),f=T("clearAfterRead",n,e,t),m=T("identicalElementShapes",n,e,t),g=T("name",n,e,t),x=new Fne(g,h,l,d,m,p,f),t.addTensorArray(x),[2,[ve(x.id),ve(1)]];case 9:return y=T("tensorArrayId",n,e,t),b=T("index",n,e,t),v=T("tensor",n,e,t),t.getTensorArray(y).write(b,v),[2,[ve(1)]];case 10:return w=T("tensorArrayId",n,e,t),C=T("index",n,e,t),[2,[t.getTensorArray(w).read(C)]];case 11:return I=T("tensorArrayId",n,e,t),k=T("indices",n,e,t),S=T("dtype",n,e,t),[2,[t.getTensorArray(I).gather(k,S)]];case 12:return N=T("tensorArrayId",n,e,t),E=T("indices",n,e,t),R=T("tensor",n,e,t),t.getTensorArray(N).scatter(E,R),[2,[ve(1)]];case 13:return _=T("tensorArrayId",n,e,t),O=t.getTensorArray(_),F=T("dtype",n,e,t),[2,[O.concat(F)]];case 14:return L=T("tensorArrayId",n,e,t),B=T("tensor",n,e,t),M=T("lengths",n,e,t),t.getTensorArray(L).split(M,B),[2,[ve(1)]];case 15:return z=T("tensorArrayId",n,e,t),H=t.getTensorArray(z),[2,[ve(H.size(),"int32")]];case 16:return X=T("tensorArrayId",n,e,t),t.getTensorArray(X).clearAndClose(),[2,[ve(0)]];case 17:throw TypeError("Node type "+n.op+" is not implemented")}})})},Mne=function(n,e,t){switch(n.op){case"Conv1D":var r=T("stride",n,e,t),s=T("pad",n,e,t),o=T("dataFormat",n,e,t).toUpperCase(),a=T("dilation",n,e,t);return[bT(T("x",n,e,t),T("filter",n,e,t),r,s,o,a)];case"Conv2D":r=T("strides",n,e,t),s=T("pad",n,e,t),o=T("dataFormat",n,e,t).toUpperCase();var i=T("dilations",n,e,t);return[Di(T("x",n,e,t),T("filter",n,e,t),[r[1],r[2]],s,o,[i[1],i[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var u=T("fusedOps",n,e,t),c=u[0],l=u[1],h=c==="biasadd",d=l==="prelu",p=c==="fusedbatchnorm",f=T("numArgs",n,e,t);if(h){if(d&&f!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&f!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=T("strides",n,e,t),s=T("pad",n,e,t),o=T("dataFormat",n,e,t).toUpperCase(),i=T("dilations",n,e,t);var m=T("args",n,e,t),g=m[0],x=m[1];return[(n.op==="_FusedConv2D"?xh.conv2d:xh.depthwiseConv2d)({x:T("x",n,e,t),filter:T("filter",n,e,t),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:g,activation:l,preluActivationWeights:x})];case"Conv2DBackpropInput":case"Conv2dTranspose":var y=T("outputShape",n,e,t);return r=T("strides",n,e,t),s=T("pad",n,e,t),[ST(T("x",n,e,t),T("filter",n,e,t),y,[r[1],r[2]],s)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=T("strides",n,e,t),s=T("pad",n,e,t),i=T("dilations",n,e,t),o=T("dataFormat",n,e,t).toUpperCase(),[lp(T("input",n,e,t),T("filter",n,e,t),[r[1],r[2]],s,o,[i[1],i[2]])];case"Conv3D":return r=T("strides",n,e,t),s=T("pad",n,e,t),o=T("dataFormat",n,e,t).toUpperCase(),i=T("dilations",n,e,t),[wT(T("x",n,e,t),T("filter",n,e,t),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])];case"AvgPool":r=T("strides",n,e,t),s=T("pad",n,e,t);var b=T("kernelSize",n,e,t);return[RT(T("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s)];case"MaxPool":return r=T("strides",n,e,t),s=T("pad",n,e,t),b=T("kernelSize",n,e,t),[ET(T("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s)];case"MaxPoolWithArgmax":r=T("strides",n,e,t),s=T("pad",n,e,t),b=T("kernelSize",n,e,t);var v=T("includeBatchInIndex",n,e,t),w=DT(T("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s,v);return[w.result,w.indexes];case"AvgPool3D":return r=T("strides",n,e,t),s=T("pad",n,e,t),b=T("kernelSize",n,e,t),[AT(T("x",n,e,t),[b[1],b[2],b[3]],[r[1],r[2],r[3]],s)];case"MaxPool3D":return r=T("strides",n,e,t),s=T("pad",n,e,t),b=T("kernelSize",n,e,t),[$T(T("x",n,e,t),[b[1],b[2],b[3]],[r[1],r[2],r[3]],s)];default:throw TypeError("Node type "+n.op+" is not implemented")}},Lne=function(n,e,t){switch(n.op){case"Fill":var r=T("shape",n,e,t),s=T("dtype",n,e,t),o=T("value",n,e,t);return[Jd(r,o,s)];case"LinSpace":var a=T("start",n,e,t),i=T("stop",n,e,t),u=T("num",n,e,t);return[GS(a,i,u)];case"Multinomial":var c=T("logits",n,e,t),l=T("numSamples",n,e,t),h=T("seed",n,e,t);return[hT(c,l,h)];case"OneHot":var d=T("indices",n,e,t),p=T("depth",n,e,t),f=T("onValue",n,e,t),m=T("offValue",n,e,t);return[Tu(d,p,f,m)];case"Ones":return[va(T("shape",n,e,t),T("dtype",n,e,t))];case"OnesLike":return[my(T("x",n,e,t))];case"RandomUniform":return[Oy(T("shape",n,e,t),T("minval",n,e,t),T("maxval",n,e,t),T("dtype",n,e,t))];case"Range":a=T("start",n,e,t);var g=T("stop",n,e,t),x=T("step",n,e,t);return[Su(a,g,x,T("dtype",n,e,t))];case"TruncatedNormal":r=T("shape",n,e,t);var y=T("mean",n,e,t),b=T("stdDev",n,e,t);return h=T("seed",n,e,t),[dT(r,y,b,T("dtype",n,e,t),h)];case"Zeros":return[Ct(T("shape",n,e,t),T("dtype",n,e,t))];case"ZerosLike":return[Ze(T("x",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Pne=void 0,Bne=function(n,e,t){return Qs(Pne,void 0,void 0,function(){var r,s,o,a,i,u,c,l;return Zs(this,function(h){switch(h.label){case 0:switch(n.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=T("boxes",n,e,t),s=T("scores",n,e,t),o=T("maxOutputSize",n,e,t),a=T("iouThreshold",n,e,t),i=T("scoreThreshold",n,e,t),n.op!=="NonMaxSuppressionV5"?[3,3]:(u=T("softNmsSigma",n,e,t),[4,ja.nonMaxSuppressionWithScoreAsync(r,s,o,a,i,u)]);case 2:return[2,[(l=h.sent()).selectedIndices,l.selectedScores]];case 3:return[4,ja.nonMaxSuppressionAsync(r,s,o,a,i)];case 4:return[2,[h.sent()]];case 5:return c=T("condition",n,e,t).asType("bool"),[4,Ay(c)];case 6:return l=[h.sent()],c.dispose(),[2,l];case 7:return[2,qS(T("x",n,e,t),T("y",n,e,t))];case 8:throw TypeError("Node type "+n.op+" is not implemented")}})})},zne=function(n,e,t){switch(n.op){case"TopKV2":var r=T("x",n,e,t),s=T("k",n,e,t),o=T("sorted",n,e,t),a=qT(r,s,o);return[a.values,a.indices];default:throw TypeError("Node type "+n.op+" is not implemented")}},Vne=function(n,e,t){switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":var r=T("default",n,e,t);return[An(n.name,e,t)||r];case"Placeholder":return[An(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[T("x",n,e,t).clone()];case"IdentityN":return T("x",n,e,t).map(function(c){return c.clone()});case"Snapshot":return[T("x",n,e,t).clone()];case"Shape":return[Es(T("x",n,e,t).shape,"int32")];case"ShapeN":return T("x",n,e,t).map(function(c){return Es(c.shape)});case"Size":return[ve(T("x",n,e,t).size,"int32")];case"Rank":return[ve(T("x",n,e,t).rank,"int32")];case"NoOp":return[ve(1)];case"Print":var s=T("x",n,e,t),o=T("data",n,e,t),a=T("message",n,e,t),i=T("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(var u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,i));return[s];default:throw TypeError("Node type "+n.op+" is not implemented")}},Wne=function(n,e,t){switch(n.op){case"ResizeBilinear":var r=T("images",n,e,t),s=T("size",n,e,t),o=T("alignCorners",n,e,t);return[ja.resizeBilinear(r,[s[0],s[1]],o)];case"ResizeNearestNeighbor":return r=T("images",n,e,t),s=T("size",n,e,t),o=T("alignCorners",n,e,t),[ja.resizeNearestNeighbor(r,[s[0],s[1]],o)];case"CropAndResize":var a=T("image",n,e,t),i=T("boxes",n,e,t),u=T("boxInd",n,e,t),c=T("cropSize",n,e,t),l=T("method",n,e,t),h=T("extrapolationValue",n,e,t);return[ja.cropAndResize(a,i,u,c,l,h)];default:throw TypeError("Node type "+n.op+" is not implemented")}},Une=function(n,e,t){switch(n.op){case"Equal":return[Ly(T("a",n,e,t),T("b",n,e,t))];case"NotEqual":return[gT(T("a",n,e,t),T("b",n,e,t))];case"Greater":return[pT(T("a",n,e,t),T("b",n,e,t))];case"GreaterEqual":return[Py(T("a",n,e,t),T("b",n,e,t))];case"Less":return[fT(T("a",n,e,t),T("b",n,e,t))];case"LessEqual":return[mT(T("a",n,e,t),T("b",n,e,t))];case"LogicalAnd":return[Yc(T("a",n,e,t),T("b",n,e,t))];case"LogicalNot":return[cT(T("a",n,e,t))];case"LogicalOr":return[$y(T("a",n,e,t),T("b",n,e,t))];case"Select":case"SelectV2":return[ao(T("condition",n,e,t),T("a",n,e,t),T("b",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Gne=function(n,e,t){switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[zy(T("a",n,e,t),T("b",n,e,t),T("transposeA",n,e,t),T("transposeB",n,e,t))];case"Transpose":return[hr(T("x",n,e,t),T("perm",n,e,t))];case"_FusedMatMul":var r=T("fusedOps",n,e,t),s=r[0],o=r[1],a=s==="biasadd",i=o==="prelu",u=T("numArgs",n,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var c=T("args",n,e,t),l=c[0],h=c[1];return[xh.matMul({a:T("a",n,e,t),b:T("b",n,e,t),transposeA:T("transposeA",n,e,t),transposeB:T("transposeB",n,e,t),bias:l,activation:o,preluActivationWeights:h})];default:throw TypeError("Node type "+n.op+" is not implemented")}},Hne=function(n,e,t){switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Ai(T("x",n,e,t),T("mean",n,e,t),T("variance",n,e,t),T("offset",n,e,t),T("scale",n,e,t),T("epsilon",n,e,t))];case"LRN":return[GT(T("x",n,e,t),T("radius",n,e,t),T("bias",n,e,t),T("alpha",n,e,t),T("beta",n,e,t))];case"Softmax":return[ap(T("x",n,e,t))];case"LogSoftmax":return[_N(T("x",n,e,t))];case"SparseToDense":return[jy(T("sparseIndices",n,e,t),T("outputShape",n,e,t),T("sparseValues",n,e,t),T("defaultValue",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},jne=function(n,e,t){switch(n.op){case"Max":var r=T("axis",n,e,t),s=T("keepDims",n,e,t);return[PT(T("x",n,e,t),r,s)];case"Mean":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[BT(T("x",n,e,t),r,s)];case"Min":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[zT(T("x",n,e,t),r,s)];case"Sum":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[ys(T("x",n,e,t),r,s)];case"All":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[OT(T("x",n,e,t),r,s)];case"Any":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[_T(T("x",n,e,t),r,s)];case"ArgMax":return r=T("axis",n,e,t),[MT(T("x",n,e,t),r)];case"ArgMin":return r=T("axis",n,e,t),[LT(T("x",n,e,t),r)];case"Prod":return r=T("axis",n,e,t),s=T("keepDims",n,e,t),[Vy(T("x",n,e,t),r,s)];default:throw TypeError("Node type "+n.op+" is not implemented")}},qne=function(n,e,t){switch(n.op){case"ConcatV2":case"Concat":var r=T("n",n,e,t),s=T("axis",n,e,t),o=T("tensors",n,e,t);return o=o.slice(0,r),[wr(o,s)];case"GatherV2":case"Gather":s=T("axis",n,e,t);var a=T("x",n,e,t),i=T("indices",n,e,t);return[cp(a,i.asType("int32"),s)];case"ReverseV2":case"Reverse":return s=T("axis",n,e,t),a=T("x",n,e,t),[Fi(a,s)];case"Slice":var u=T("begin",n,e,t),c=T("size",n,e,t);return[cs(T("x",n,e,t),u,c)];case"StridedSlice":u=T("begin",n,e,t);var l=T("end",n,e,t),h=T("strides",n,e,t),d=T("beginMask",n,e,t),p=T("endMask",n,e,t),f=T("ellipsisMask",n,e,t),m=T("newAxisMask",n,e,t),g=T("shrinkAxisMask",n,e,t),x=T("x",n,e,t);if(u.length===1&&x.shape.length>1)for(var y=1;y<x.shape.length;y++)u.push(0),l.push(x.shape[y]),h.push(h[0]);return[jT(x,u,l,h,d,p,f,m,g)];case"Pack":return je(function(){var N=T("axis",n,e,t),E=T("tensors",n,e,t),R=E[0].shape,_=E[0].squeeze().shape,O=E.map(function(F){var L=oo.arraysEqual(F.shape,R);if(!L&&!oo.arraysEqual(F.squeeze().shape,_))throw new Error("the input tensors shape does not match");return L?F:F.reshape(R)});return[Rs(O,N)]});case"Unpack":return je(function(){var N=T("axis",n,e,t),E=T("tensor",n,e,t);return Kc(E,N)});case"Tile":var b=T("reps",n,e,t);return[Vo(T("x",n,e,t),b)];case"Split":case"SplitV":s=T("axis",n,e,t);var v=T("numOrSizeSplits",n,e,t);return ep(T("x",n,e,t),v,s);case"ScatterNd":i=T("indices",n,e,t);var w=T("values",n,e,t),C=T("shape",n,e,t);return[KT(i,w,C)];case"GatherNd":var I=T("x",n,e,t);return i=T("indices",n,e,t),[XT(I,i)];case"SparseToDense":i=T("sparseIndices",n,e,t),C=T("outputShape",n,e,t);var k=T("sparseValues",n,e,t),S=T("defaultValue",n,e,t);return[jy(i,k,C,k.dtype===S.dtype?S:S.asType(k.dtype))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Kne=function(n,e,t){switch(n.op){case"FFT":return[hp(T("x",n,e,t))];case"IFFT":return[Eu(T("x",n,e,t))];case"RFFT":return[dp(T("x",n,e,t))];case"IRFFT":return[Hy(T("x",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},Xne=function(n,e,t){switch(n.op){case"Cast":return[HS(T("x",n,e,t),T("dtype",n,e,t))];case"ExpandDims":var r=T("axis",n,e,t);return[xs(T("x",n,e,t),r)];case"Squeeze":return r=T("axis",n,e,t),[yy(T("x",n,e,t),r)];case"Reshape":return[Yr(T("x",n,e,t),T("shape",n,e,t))];case"PadV2":case"Pad":return[bo(T("x",n,e,t),nf(T("padding",n,e,t),2),T("constantValue",n,e,t))];case"SpaceToBatchND":var s=T("blockShape",n,e,t),o=nf(T("paddings",n,e,t),2);return[xy(T("x",n,e,t),s,o)];case"BatchToSpaceND":s=T("blockShape",n,e,t);var a=nf(T("crops",n,e,t),2);return[gy(T("x",n,e,t),s,a)];case"DepthToSpace":var i=T("blockSize",n,e,t),u=T("dataFormat",n,e,t).toUpperCase();return[jS(T("x",n,e,t),i,u)];default:throw TypeError("Node type "+n.op+" is not implemented")}};function $b(n,e,t){var r=function(s,o,a){switch(s.category){case"arithmetic":return je(function(){return Ane(s,o,a)});case"basic_math":return je(function(){return Dne(s,o,a)});case"control":return _ne(s,o,a);case"convolution":return je(function(){return Mne(s,o,a)});case"creation":return je(function(){return Lne(s,o,a)});case"dynamic":return Bne(s,o,a);case"evaluation":return je(function(){return zne(s,o,a)});case"image":return je(function(){return Wne(s,o,a)});case"graph":return je(function(){return Vne(s,o,a)});case"logical":return je(function(){return Une(s,o,a)});case"matrices":return je(function(){return Gne(s,o,a)});case"normalization":return je(function(){return Hne(s,o,a)});case"reduction":return je(function(){return jne(s,o,a)});case"slice_join":return je(function(){return qne(s,o,a)});case"spectral":return je(function(){return Kne(s,o,a)});case"transformation":return je(function(){return Xne(s,o,a)});case"custom":var i=lE(s.op);if(i&&i.customExecutor)return i.customExecutor(new $ne(s,o,a));throw TypeError("Custom op "+s.op+" is not registered.");default:throw TypeError("Unknown op '"+s.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(n,e,t);return r instanceof Promise?r.then(function(s){return[].concat(s)}):[].concat(r)}var Ab=function(){function n(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return n.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(n.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),n.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e},n.prototype.contextIdforContexts=function(e){return e?e.map(function(t){return t.id===0&&t.iterationId===0?"":t.frameName+"-"+t.iterationId}).join("/"):""},n.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},n.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},n.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},n.prototype.getWeight=function(e){return this.weightMap[e]},n.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},n.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},n}();function Db(n,e,t){for(var r=new Set,s=[],o=null,a=null,i=new Set,u=Object.keys(n).map(function(h){return Xn(h)[0]}),c=e.slice();c.length>0;){var l=c.pop();(fE(l)||Jne(l))&&o==null&&(a=(o=l).children.map(function(h){return h.name}).filter(function(h){return r.has(h)})),r.add(l.name),t[l.name]==null&&u.indexOf(l.name)===-1&&(l.inputs.length!==0?l.inputs.forEach(function(h){i.has(h.name)||(i.add(h.name),c.push(h))}):s.push(l.name))}return{inputs:n,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:a}}function Yne(n,e,t){var r=t.usedNodes,s=t.inputs,o=[];Object.keys(s).map(function(c){return Xn(c)[0]}).map(function(c){return n.nodes[c]}).forEach(function(c){r.has(c.name)&&o.push(c)}),n.weights.forEach(function(c){r.has(c.name)&&o.push(c)});for(var a=new Set,i=[];o.length>0;){var u=o.pop();a.add(u.name),e[u.name]||i.push(u),u.children.forEach(function(c){!a.has(c.name)&&r.has(c.name)&&c.inputs.every(function(l){return a.has(l.name)})&&o.push(c)})}return i}var Qne=["Switch","Merge","Enter","Exit","NextIteration"],Zne=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function fE(n){return Qne.indexOf(n.op)>=0}function Jne(n){return Zne.indexOf(n.op)>=0}var ere=function(){function n(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(n.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map(function(r){return e[r].map(function(s){return s.id})});this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputs",{get:function(){return this._inputs.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputs",{get:function(){return this._outputs.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputNodes",{get:function(){return this._inputs.map(function(e){return e.signatureKey||e.name})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputNodes",{get:function(){return this._outputs.map(function(e){return e.signatureKey||e.name})},enumerable:!0,configurable:!0}),n.prototype.getCompilationKey=function(e,t){var r=e.map(function(o){return o.name}).sort(),s=t.map(function(o){return o.name}).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)},n.prototype.compile=function(e,t){var r=Db(e,t,this.weightMap),s=r.missingInputs,o=r.dynamicNode,a=r.syncInputs;if(o!=null)throw new Error("This execution contains the node '"+o.name+"', which has the dynamic op '"+o.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+a+"]");if(s.length>0){var i=t.map(function(c){return c.name}),u=Object.keys(e);throw new Error("Cannot compute the outputs ["+i+"] from the provided inputs ["+u+"]. Missing the following inputs: ["+s+"]")}return Yne(this.graph,this.weightMap,r)},n.prototype.execute=function(e,t){var r=this;e=this.mapInputs(e);var s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var o=s.map(function(l){return r.graph.nodes[Xn(l)[0]]}),a=t.map(function(l){return r.graph.nodes[Xn(l)[0]]}),i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));var c={};return je(function(){var l=new Ab(r._weightMap,c),h=am({},r.weightMap);Object.keys(e).forEach(function(x){var y=Xn(x),b=y[0],v=[];v[y[1]]=e[x],h[b]=v});for(var d=r.getFrozenTensorIds(h),p={},f=0;f<u.length;f++){var m=u[f];if(!h[m.name]){var g=$b(m,h,l);if(g instanceof Promise)throw new Error("The execution of the op '"+m.op+"' returned a promise. Please use model.executeAsync() instead.");h[m.name]=g,r.checkTensorForDisposal(m.name,m,h,l,d,t,p)}}return t.map(function(x){return An(x,h,l)})})},n.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map(function(r){return e[r]}).map(function(r){return r.map(function(s){return s.id})}));return new Set(t)},n.prototype.checkTensorForDisposal=function(e,t,r,s,o,a,i){t.category!=="control"&&a.indexOf(e)===-1&&(r[e].forEach(function(u){u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(function(u){if(u.category!=="control"){var c=Xte(u.name,r,s);c!=null&&c.forEach(function(l){if(l&&!o.has(l.id)){var h=i[l.id];h===1?(l.dispose(),delete i[l.id]):h!=null&&i[l.id]--}})}}))},n.prototype.executeAsync=function(e,t){return Qs(this,void 0,void 0,function(){var r,s,o,a,i,u,c=this;return Zs(this,function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),r={},s=new Ab(this._weightMap,r),[4,this.executeWithControlFlow(e,s,t)];case 1:return o=l.sent(),a=t.map(function(h){return An(h,o,s)}),i=new Set(a.map(function(h){return h.id})),u=new Set(Object.keys(e).map(function(h){return e[h].id})),Object.keys(o).forEach(function(h){o[h].forEach(function(d){!d||d.isDisposed||i.has(d.id)||u.has(d.id)||c.weightIds.indexOf(d.id)!==-1||d.dispose()})}),[2,a]}})})},n.prototype.executeWithControlFlow=function(e,t,r){return Qs(this,void 0,void 0,function(){var s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v=this;return Zs(this,function(w){switch(w.label){case 0:s=Object.keys(e),o=s.map(function(C){return v.graph.nodes[Xn(C)[0]]}),a=r.map(function(C){return v.graph.nodes[Xn(C)[0]]}),i=Db(e,a,this.weightMap),u=i.usedNodes,c=i.missingInputs,l=i.dynamicNode,h=i.syncInputs,d=o.concat(this.graph.weights).map(function(C){return{node:C,contexts:t.currentContext}}),p=am({},this.weightMap),Object.keys(e).forEach(function(C){var I=Xn(C),k=I[0],S=[];S[I[1]]=e[C],p[k]=S}),f={},m=this.getFrozenTensorIds(p),g={},w.label=1;case 1:return d.length>0?(x=this.processStack(o,d,t,p,g,m,r,f,u),[4,Promise.all(x)]):[3,3];case 2:return w.sent(),[3,1];case 3:if(l==null&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(y=a.filter(function(C){return!fE(C)&&!An(C.name,p,t)}).map(function(C){return C.name})).length>0)throw b="",l!=null&&(b="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+h+"]"),new Error("Cannot compute the outputs ["+y+"] from the provided inputs ["+s+"]. Consider providing the following inputs: ["+c+"]. "+b);return[2,p]}})})},n.prototype.processStack=function(e,t,r,s,o,a,i,u,c){for(var l=this,h=[],d=function(){var f=t.pop();r.currentContext=f.contexts;var m="";if(f.node.op==="Enter"&&T("isConstant",f.node,s,r)&&(m=Ya(f.node.name,r)[0]),e.indexOf(f.node)===-1){var g=$b(f.node,s,r);m||(m=Ya(f.node.name,r)[0]);var x=r.currentContext;g instanceof Promise?h.push(g.then(function(y){return s[m]=y,r.currentContext=x,l.checkTensorForDisposal(m,f.node,s,r,a,i,u),l.processChildNodes(f.node,t,r,s,o,c),y})):(s[m]=g,p.checkTensorForDisposal(m,f.node,s,r,a,i,u),p.processChildNodes(f.node,t,r,s,o,c))}else p.processChildNodes(f.node,t,r,s,o,c)},p=this;t.length>0;)d();return h},n.prototype.processChildNodes=function(e,t,r,s,o,a){e.children.forEach(function(i){var u=Ya(i.name,r)[0];!o[u]&&a.has(i.name)&&(i.op==="Merge"?i.inputNames.some(function(c){return!!An(c,s,r)})&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(function(c){return!!An(c,s,r)})&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})))})},n.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach(function(t){return e.weightMap[t].forEach(function(r){return r.dispose()})})},n.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach(function(r){var s=e[r],o=Xn(r)[0],a=t.graph.nodes[o];if(a.attrParams.shape&&a.attrParams.shape.value){var i=a.attrParams.shape.value,u=i.length===s.shape.length&&s.shape.every(function(c,l){return i[l]===-1||i[l]===c});oo.assert(u,function(){return"The shape of dict['"+a.name+"'] provided in model.execute(dict) must be ["+i+"], but was ["+s.shape+"]"})}a.attrParams.dtype&&a.attrParams.dtype.value&&oo.assert(s.dtype===a.attrParams.dtype.value,function(){return"The dtype of dict['"+a.name+"'] provided in model.execute(dict) must be "+a.attrParams.dtype.value+", but was "+s.dtype})})},n.prototype.mapInputs=function(e){var t={};for(var r in e)this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null?t[this._signature.inputs[r].name]=e[r]:t[r]=e[r];return t},n.prototype.checkInputs=function(e){var t=this,r=Object.keys(e).filter(function(s){var o=Xn(s)[0];return t.graph.nodes[o]==null});if(r.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+r+"] that are not part of graph")},n.prototype.mapOutputs=function(e){var t=this;return e.map(function(r){return t._signature!=null&&t._signature.outputs!=null&&t._signature.outputs[r]!=null?t._signature.outputs[r].name:r},{})},n.prototype.checkOutputs=function(e){var t=this;e.forEach(function(r){var s=Xn(r)[0];if(!t.graph.nodes[s])throw new Error("The output '"+r+"' is not found in the graph")})},n}(),tre="?tfjs-format=file",nre="model.json",rre=function(){function n(e,t){t===void 0&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={})}return Object.defineProperty(n.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),n.prototype.findIOHandler=function(){var e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=ji.browserHTTPRequest(e,this.loadOptions);else{var t=ji.getLoadHandlers(e,this.loadOptions.onProgress);if(t.length===0)t.push(ji.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},n.prototype.load=function(){return Qs(this,void 0,void 0,function(){var e,t,r,s;return Zs(this,function(o){switch(o.label){case 0:if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=o.sent(),t=this.artifacts.modelTopology,r={},this.artifacts.userDefinedMetadata!=null&&(r=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,s=ji.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new ere(Ene.Instance.transformGraph(t,r)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),[2,!0]}})})},n.prototype.save=function(e,t){return Qs(this,void 0,void 0,function(){var r;return Zs(this,function(s){if(typeof e=="string"){if((r=ji.getSaveHandlers(e)).length===0)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(r.length>1)throw new Error("Found more than one ("+r.length+") save handlers for URL '"+e+"'");e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]})})},n.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},n.prototype.normalizeInputs=function(e){if(!(e instanceof It||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce(function(t,r,s){return t[r]=e[s],t},{})},n.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},n.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var r=this.executor.execute(e,t);return r.length>1?r:r[0]},n.prototype.executeAsync=function(e,t){return Qs(this,void 0,void 0,function(){var r;return Zs(this,function(s){switch(s.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(r=s.sent()).length>1?r:r[0]]}})})},n.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce(function(t,r){return t[r]=[e[r]],t},{})},n.prototype.dispose=function(){this.executor.dispose()},n}();function sre(n,e){return e===void 0&&(e={}),Qs(this,void 0,void 0,function(){var t;return Zs(this,function(r){switch(r.label){case 0:if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return e==null&&(e={}),e.fromTFHub&&n.load==null&&(n.endsWith("/")||(n+="/"),n=""+n+nre+tre),[4,(t=new rre(n,e)).load()];case 1:return r.sent(),[2,t]}})})}/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function Ji(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function eu(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function mE(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function gE(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var xE=function(n){for(var e=[],t=0,r=n;t<r.length;t++){var s=r[t];e.push(s)}return e},Fb=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},ore=function(){function n(){this.root=new Fb}return n.prototype.insert=function(e,t,r){for(var s=this.root,o=xE(e),a=0;a<o.length;a++)s.children[o[a]]||(s.children[o[a]]=new Fb,s.children[o[a]].parent=s,s.children[o[a]].word[0]=s.word[0].concat(o[a])),s=s.children[o[a]],a===o.length-1&&(s.end=!0,s.word[1]=t,s.word[2]=r)},n.prototype.commonPrefixSearch=function(e){for(var t=[],r=this.root.children[e[0]],s=0;s<e.length&&r;s++)r.end&&t.push(r.word),r=r.children[e[s+1]];return t.length||t.push([[e[0]],0,0]),t},n}(),Ob="▁";function are(n){var e=n.normalize("NFKC");return Ob+e.replace(/ /g,Ob)}var ire=6,ure=function(){function n(e){this.vocabulary=e,this.trie=new ore;for(var t=ire;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return n.prototype.encode=function(e){var t=[],r=[],s=[];e=are(e);for(var o=xE(e),a=0;a<=o.length;a++)t.push({}),r.push(0),s.push(0);for(a=0;a<o.length;a++)for(var i=this.trie.commonPrefixSearch(o.slice(a)),u=0;u<i.length;u++){var c=i[u],l={key:c[0],score:c[1],index:c[2]};t[a+(h=c[0].length)][a]==null&&(t[a+h][a]=[]),t[a+h][a].push(l)}for(var h=0;h<=o.length;h++)for(var d in t[h]){var p=t[h][d];for(u=0;u<p.length;u++){var f=p[u],m=f.score+s[h-f.key.length];(s[h]===0||m>=s[h])&&(s[h]=m,r[h]=p[u].index)}}for(var g=[],x=r.length-1;x>0;)g.push(r[x]),x-=this.vocabulary[r[x]][0].length;var y=[],b=!1;for(a=0;a<g.length;a++){var v=g[a];b&&v===0||y.push(v),b=v===0}return y.reverse()},n}(),cre="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/";function lre(n){return mE(this,void 0,void 0,function(){var e;return gE(this,function(t){switch(t.label){case 0:return[4,hre(n)];case 1:return e=t.sent(),[2,new ure(e)]}})})}function hre(n){return n===void 0&&(n=cre+"vocab.json"),mE(this,void 0,void 0,function(){return gE(this,function(e){switch(e.label){case 0:return[4,oo.fetch(n)];case 1:return[2,e.sent().json()]}})})}function dre(n,e){return Ji(this,void 0,void 0,function(){var t;return eu(this,function(r){switch(r.label){case 0:return[4,(t=new pre(n,e)).load()];case 1:return r.sent(),[2,t]}})})}var pre=function(){function n(e,t){e===void 0&&(e=.85),t===void 0&&(t=[]),this.threshold=e,this.toxicityLabels=t}return n.prototype.loadModel=function(){return Ji(this,void 0,void 0,function(){return eu(this,function(e){return[2,sre("https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1",{fromTFHub:!0})]})})},n.prototype.loadTokenizer=function(){return Ji(this,void 0,void 0,function(){return eu(this,function(e){return[2,lre()]})})},n.prototype.load=function(){return Ji(this,void 0,void 0,function(){var e,t,r,s=this;return eu(this,function(o){switch(o.label){case 0:return[4,Promise.all([this.loadModel(),this.loadTokenizer()])];case 1:return e=o.sent(),t=e[0],r=e[1],this.model=t,this.tokenizer=r,this.labels=t.outputs.map(function(a){return a.name.split("/")[0]}),this.toxicityLabels.length===0?this.toxicityLabels=this.labels:oo.assert(this.toxicityLabels.every(function(a){return s.labels.indexOf(a)>-1}),function(){return"toxicityLabels argument must contain only items from the model heads "+s.labels.join(", ")+", got "+s.toxicityLabels.join(", ")}),[2]}})})},n.prototype.classify=function(e){return Ji(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c=this;return eu(this,function(l){switch(l.label){case 0:for(typeof e=="string"&&(e=[e]),t=e.map(function(h){return c.tokenizer.encode(h)}),r=t.map(function(h,d){return h.map(function(p,f){return[d,f]})}),s=[],o=0;o<r.length;o++)s=s.concat(r[o]);return a=zo(s,[s.length,2],"int32"),i=Es(oo.flatten(t),"int32"),[4,this.model.executeAsync({Placeholder_1:a,Placeholder:i})];case 1:return u=l.sent(),a.dispose(),i.dispose(),[2,u.map(function(h,d){return{data:h,headIndex:d}}).filter(function(h){return c.toxicityLabels.indexOf(c.labels[h.headIndex])>-1}).map(function(h){for(var d=h.data.dataSync(),p=[],f=0;f<e.length;f++){var m=d.slice(2*f,2*f+2),g=null;Math.max(m[0],m[1])>c.threshold&&(g=m[0]<m[1]),p.push({probabilities:m,match:g})}return{label:c.labels[h.headIndex],results:p}})]}})})},n}();let tu=null,rf=!1;async function fre(n=.85){return tu||rf||(rf=!0,tu=await dre(n),rf=!1),tu}async function mre(n){await fre();const t=(await tu.classify([n])).map(o=>({label:o.label,match:o.results[0].match,prob:o.results[0].probabilities[1]})),r=t.filter(o=>o.match&&o.prob>.5);let s="Neutral";return r.length===0&&(s="Positivo"),r.length>=1&&(s="Negativo"),{sentiment:s,probs:t}}function gre(){return requestAnimationFrame(()=>{const n=document.getElementById("ia-form"),e=document.getElementById("ia-text"),t=document.getElementById("ia-output"),r=document.getElementById("ia-loading");n==null||n.addEventListener("submit",async s=>{s.preventDefault();const o=e.value.trim();if(!o)return;r.classList.remove("hidden"),t.innerHTML="";const a=await mre(o);r.classList.add("hidden"),t.innerHTML=`<div class="card"><h3 class="text-lg font-semibold mb-2">Resultado</h3>
      <p class="mb-2">Sentimiento: <span class="font-bold">${a.sentiment}</span></p>
      <details class="mt-2"><summary class="cursor-pointer">Ver etiquetas</summary>
      <ul class="list-disc pl-5 text-sm mt-2">${a.probs.map(i=>`<li>${i.label}: ${i.prob.toFixed(2)} ${i.match?"(coincide)":""}</li>`).join("")}</ul></details></div>`})}),`<section class="container py-10">
    <div class="grid md:grid-cols-2 gap-6 items-start">
      <div>
        <h1 class="text-3xl md:text-4xl font-extrabold mb-3">SPA con IA (en tu navegador)</h1>
        <p class="text-slate-300">Vite + Tailwind, API externa y TensorFlow.js.</p>
        <div class="mt-6 flex gap-3">
          <a href="#/catalogo" class="btn">Ir al Catálogo</a>
          <a href="https://rickandmortyapi.com" target="_blank" class="btn-outline">API Rick & Morty</a>
        </div>
      </div>
      <form id="ia-form" class="card">
        <h2 class="text-xl font-bold mb-2">Analizar sentimiento</h2>
        <p class="text-sm text-slate-400 mb-4">Corre 100% en el navegador.</p>
        <textarea id="ia-text" rows="4" class="input mb-3" placeholder="Escribe aquí..."></textarea>
        <div class="flex items-center gap-3">
          <button class="btn" type="submit">Analizar</button>
          <span id="ia-loading" class="hidden text-sm text-slate-400">Cargando modelo...</span>
        </div>
        <div id="ia-output" class="mt-4"></div>
      </form>
    </div>
  </section>`}const yE={get(n,e){try{return JSON.parse(localStorage.getItem(n))??e}catch{return e}},set(n,e){localStorage.setItem(n,JSON.stringify(e))}};function xre(n,e=300){let t;return(...r)=>{clearTimeout(t),t=setTimeout(()=>n(...r),e)}}const Pa="https://rickandmortyapi.com/api",vE="rm-favs";let iu=1,xm=!1,hi=!0,bh=!1,bE="",wE="";const ev=()=>new Set(yE.get(vE,[])),yre=n=>yE.set(vE,Array.from(n));async function Ba(n){const e=await fetch(n);if(!e.ok)throw new Error("HTTP "+e.status);return e.json()}async function vre({query:n="",episode:e=""}={}){var s;if(bh){const o=[...ev()];if(!o.length)return[];const a=[];for(let i=0;i<o.length;i+=20){const u=o.slice(i,i+20).join(","),c=await Ba(`${Pa}/character/${u}`);a.push(...Array.isArray(c)?c:[c])}return a.filter(i=>i.name.toLowerCase().includes(n.toLowerCase()))}if(e){const i=(await Ba(`${Pa}/episode/${e}`)).characters.map(c=>c.split("/").pop()).slice((iu-1)*20,iu*20);if(!i.length)return hi=!1,[];const u=await Ba(`${Pa}/character/${i.join(",")}`);return Array.isArray(u)?u:[u]}const t=new URLSearchParams;n&&t.set("name",n),t.set("page",String(iu));const r=await Ba(`${Pa}/character/?${t}`);return hi=!!((s=r.info)!=null&&s.next),r.results}function bre(n){const e=ev(),t=e.has(String(n.id));return`<article class="card flex gap-4">
    <img src="${n.image}" alt="${n.name}" class="w-28 h-28 object-cover rounded-xl border border-slate-800" loading="lazy"/>
    <div class="flex-1">
      <h3 class="text-lg font-bold">${n.name}</h3>
      <p class="text-sm text-slate-400">${n.species} · ${n.status}</p>
      <div class="flex flex-wrap gap-2 mt-3">
        <button class="btn" data-detail="${n.id}">Ver detalle</button>
        <button class="btn-outline" data-fav="${n.id}">${t?"Quitar favorito":"Agregar favorito"}</button>
      </div>
    </div>
  </article>`}function wre(){var e,t,r;const n=document.getElementById("cards");n==null||n.addEventListener("click",s=>{const o=s.target.dataset;if(o.detail&&IE(`/detalle?id=${o.detail}`),o.fav){const a=ev(),i=String(o.fav);a.has(i)?a.delete(i):a.add(i),yre(a),s.target.textContent=a.has(i)?"Quitar favorito":"Agregar favorito"}}),(e=document.getElementById("q"))==null||e.addEventListener("input",xre(s=>{bE=s.target.value,Il()},400)),(t=document.getElementById("onlyFavs"))==null||t.addEventListener("change",s=>{bh=s.target.checked,Il()}),(r=document.getElementById("episode"))==null||r.addEventListener("change",s=>{wE=s.target.value,Il()}),window.addEventListener("scroll",async()=>{if(xm||!hi||bh)return;window.innerHeight+window.scrollY>=document.body.offsetHeight-200&&(iu++,await CE())},{passive:!0})}async function Cre(){var e;const n=document.getElementById("episode");try{const t=await Ba(`${Pa}/episode`),r=((e=t.info)==null?void 0:e.pages)??1,s=[...t.results];for(let o=2;o<=r;o++){const a=await Ba(`${Pa}/episode?page=${o}`);s.push(...a.results)}n.innerHTML='<option value="">Todos</option>'+s.map(o=>`<option value="${o.id}">${o.episode} - ${o.name}</option>`).join("")}catch{n.innerHTML='<option value="">(No cargó)</option>'}}async function Il(){iu=1,hi=!0;const n=document.getElementById("cards");n.innerHTML="",await CE()}async function CE(){xm=!0;const n=document.getElementById("loader");n.classList.remove("hidden");try{const e=await vre({query:bE,episode:wE});document.getElementById("cards").insertAdjacentHTML("beforeend",e.map(bre).join("")),(bh||!e.length)&&(hi=!1)}catch(e){document.getElementById("cards").innerHTML=`<div class="text-sm text-red-300">Error: ${(e==null?void 0:e.message)||""}</div>`,hi=!1}finally{n.classList.add("hidden"),xm=!1}}function Ire(){return requestAnimationFrame(async()=>{wre(),await Cre(),await Il()}),`<section class="py-8 container">
    <div class="flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-6">
      <div><h1 class="text-2xl font-bold">Catálogo</h1><p class="text-slate-400 text-sm">Búsqueda, favoritos, filtro por episodio y scroll infinito.</p></div>
      <label class="flex items-center gap-2 text-sm"><input id="onlyFavs" type="checkbox" class="accent-primary-600"/>Solo favoritos</label>
    </div>
    <div class="grid md:grid-cols-3 gap-4 mb-6">
      <input id="q" class="input" placeholder="Buscar por nombre..."/>
      <select id="episode" class="input"></select>
      <button class="btn" onclick="location.reload()">Reiniciar</button>
    </div>
    <div id="cards" class="grid-cards"></div>
    <div id="loader" class="hidden text-center py-8 text-slate-400">Cargando...</div>
  </section>`}async function kre(n){const e=await fetch(n);if(!e.ok)throw new Error("HTTP "+e.status);return e.json()}function Sre({params:n}){const e=n.get("id");return requestAnimationFrame(async()=>{var r,s,o;const t=document.getElementById("detail-box");try{const a=await kre(`https://rickandmortyapi.com/api/character/${e}`);t.innerHTML=`<div class="flex flex-col md:flex-row gap-6">
        <img src="${a.image}" alt="${a.name}" class="w-56 h-56 object-cover rounded-2xl border border-slate-800 shadow"/>
        <div class="flex-1">
          <h1 class="text-3xl font-extrabold">${a.name}</h1>
          <p class="text-slate-300">${a.status} · ${a.species}${a.type?" · "+a.type:""}</p>
          <dl class="grid grid-cols-2 gap-x-6 gap-y-2 mt-4 text-sm">
            <dt class="text-slate-400">Género</dt><dd>${a.gender}</dd>
            <dt class="text-slate-400">Origen</dt><dd>${(r=a.origin)==null?void 0:r.name}</dd>
            <dt class="text-slate-400">Ubicación</dt><dd>${(s=a.location)==null?void 0:s.name}</dd>
            <dt class="text-slate-400">Episodios</dt><dd>${(o=a.episode)==null?void 0:o.length}</dd>
          </dl>
        </div>
      </div>`}catch{t.innerHTML='<p class="text-red-300">No se pudo cargar el detalle.</p>'}}),`<section class="container py-10">
    <a href="#/catalogo" class="btn-outline mb-6 inline-flex">← Volver</a>
    <div id="detail-box" class="card"></div>
  </section>`}function IE(n){location.hash="#"+n}function kE(){const n=document.getElementById("view"),[e,t]=(location.hash.slice(1)||"/").split("?"),r=new URLSearchParams(t||""),o={"/":gre,"/catalogo":Ire,"/detalle":Sre}[e]||(()=>'<div class="py-10">Ruta no encontrada</div>');n.innerHTML=o({params:r})}function Nre(){return`<header class="bg-slate-950/70 sticky top-0 backdrop-blur z-50 border-b border-slate-900">
    <div class="container flex items-center justify-between py-4">
      <a href="#/" class="text-lg font-bold">AI·SPA</a>
      <nav class="flex items-center gap-6">${[{href:"#/",label:"Inicio"},{href:"#/catalogo",label:"Catálogo"}].map(e=>`<a href="${e.href}" class="text-slate-300">${e.label}</a>`).join("")}</nav>
    </div>
  </header>`}const Tre=document.getElementById("app");function Ere(){Tre.innerHTML=`${Nre()}<main id="view" class="container py-6"></main>
  <footer class="container py-10 text-sm text-slate-400">
    <hr class="border-slate-800 mb-6"/>
    <p>SPA con IA · Vite + Tailwind + TensorFlow.js · Rick & Morty API</p>
  </footer>`,kE()}window.addEventListener("hashchange",kE);window.addEventListener("load",()=>{Ere(),location.hash||IE("/")});
